
whiskeropt2.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006ce0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004e4  08006da0  08006da0  00016da0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007284  08007284  0002021c  2**0
                  CONTENTS
  4 .ARM          00000000  08007284  08007284  0002021c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007284  08007284  0002021c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007284  08007284  00017284  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007288  08007288  00017288  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000021c  20000000  0800728c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000160  2000021c  080074a8  0002021c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000037c  080074a8  0002037c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002021c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000df2b  00000000  00000000  00020244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000022b8  00000000  00000000  0002e16f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    000076aa  00000000  00000000  00030427  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000820  00000000  00000000  00037ad8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000bd8  00000000  00000000  000382f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001206d  00000000  00000000  00038ed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00010cec  00000000  00000000  0004af3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0006251b  00000000  00000000  0005bc29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000be144  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000027d8  00000000  00000000  000be194  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000021c 	.word	0x2000021c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006d88 	.word	0x08006d88

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000220 	.word	0x20000220
 8000104:	08006d88 	.word	0x08006d88

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff0d 	bl	800125c <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fe5d 	bl	800110c <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 feff 	bl	800125c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 fef5 	bl	800125c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fe85 	bl	8001190 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fe7b 	bl	8001190 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	464f      	mov	r7, r9
 80004ac:	4646      	mov	r6, r8
 80004ae:	46d6      	mov	lr, sl
 80004b0:	000d      	movs	r5, r1
 80004b2:	0004      	movs	r4, r0
 80004b4:	b5c0      	push	{r6, r7, lr}
 80004b6:	001f      	movs	r7, r3
 80004b8:	0011      	movs	r1, r2
 80004ba:	0328      	lsls	r0, r5, #12
 80004bc:	0f62      	lsrs	r2, r4, #29
 80004be:	0a40      	lsrs	r0, r0, #9
 80004c0:	4310      	orrs	r0, r2
 80004c2:	007a      	lsls	r2, r7, #1
 80004c4:	0d52      	lsrs	r2, r2, #21
 80004c6:	00e3      	lsls	r3, r4, #3
 80004c8:	033c      	lsls	r4, r7, #12
 80004ca:	4691      	mov	r9, r2
 80004cc:	0a64      	lsrs	r4, r4, #9
 80004ce:	0ffa      	lsrs	r2, r7, #31
 80004d0:	0f4f      	lsrs	r7, r1, #29
 80004d2:	006e      	lsls	r6, r5, #1
 80004d4:	4327      	orrs	r7, r4
 80004d6:	4692      	mov	sl, r2
 80004d8:	46b8      	mov	r8, r7
 80004da:	0d76      	lsrs	r6, r6, #21
 80004dc:	0fed      	lsrs	r5, r5, #31
 80004de:	00c9      	lsls	r1, r1, #3
 80004e0:	4295      	cmp	r5, r2
 80004e2:	d100      	bne.n	80004e6 <__aeabi_dadd+0x3e>
 80004e4:	e099      	b.n	800061a <__aeabi_dadd+0x172>
 80004e6:	464c      	mov	r4, r9
 80004e8:	1b34      	subs	r4, r6, r4
 80004ea:	46a4      	mov	ip, r4
 80004ec:	2c00      	cmp	r4, #0
 80004ee:	dc00      	bgt.n	80004f2 <__aeabi_dadd+0x4a>
 80004f0:	e07c      	b.n	80005ec <__aeabi_dadd+0x144>
 80004f2:	464a      	mov	r2, r9
 80004f4:	2a00      	cmp	r2, #0
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b8      	b.n	800066c <__aeabi_dadd+0x1c4>
 80004fa:	4ac5      	ldr	r2, [pc, #788]	; (8000810 <__aeabi_dadd+0x368>)
 80004fc:	4296      	cmp	r6, r2
 80004fe:	d100      	bne.n	8000502 <__aeabi_dadd+0x5a>
 8000500:	e11c      	b.n	800073c <__aeabi_dadd+0x294>
 8000502:	2280      	movs	r2, #128	; 0x80
 8000504:	003c      	movs	r4, r7
 8000506:	0412      	lsls	r2, r2, #16
 8000508:	4314      	orrs	r4, r2
 800050a:	46a0      	mov	r8, r4
 800050c:	4662      	mov	r2, ip
 800050e:	2a38      	cmp	r2, #56	; 0x38
 8000510:	dd00      	ble.n	8000514 <__aeabi_dadd+0x6c>
 8000512:	e161      	b.n	80007d8 <__aeabi_dadd+0x330>
 8000514:	2a1f      	cmp	r2, #31
 8000516:	dd00      	ble.n	800051a <__aeabi_dadd+0x72>
 8000518:	e1cc      	b.n	80008b4 <__aeabi_dadd+0x40c>
 800051a:	4664      	mov	r4, ip
 800051c:	2220      	movs	r2, #32
 800051e:	1b12      	subs	r2, r2, r4
 8000520:	4644      	mov	r4, r8
 8000522:	4094      	lsls	r4, r2
 8000524:	000f      	movs	r7, r1
 8000526:	46a1      	mov	r9, r4
 8000528:	4664      	mov	r4, ip
 800052a:	4091      	lsls	r1, r2
 800052c:	40e7      	lsrs	r7, r4
 800052e:	464c      	mov	r4, r9
 8000530:	1e4a      	subs	r2, r1, #1
 8000532:	4191      	sbcs	r1, r2
 8000534:	433c      	orrs	r4, r7
 8000536:	4642      	mov	r2, r8
 8000538:	4321      	orrs	r1, r4
 800053a:	4664      	mov	r4, ip
 800053c:	40e2      	lsrs	r2, r4
 800053e:	1a80      	subs	r0, r0, r2
 8000540:	1a5c      	subs	r4, r3, r1
 8000542:	42a3      	cmp	r3, r4
 8000544:	419b      	sbcs	r3, r3
 8000546:	425f      	negs	r7, r3
 8000548:	1bc7      	subs	r7, r0, r7
 800054a:	023b      	lsls	r3, r7, #8
 800054c:	d400      	bmi.n	8000550 <__aeabi_dadd+0xa8>
 800054e:	e0d0      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000550:	027f      	lsls	r7, r7, #9
 8000552:	0a7f      	lsrs	r7, r7, #9
 8000554:	2f00      	cmp	r7, #0
 8000556:	d100      	bne.n	800055a <__aeabi_dadd+0xb2>
 8000558:	e0ff      	b.n	800075a <__aeabi_dadd+0x2b2>
 800055a:	0038      	movs	r0, r7
 800055c:	f001 fd8a 	bl	8002074 <__clzsi2>
 8000560:	0001      	movs	r1, r0
 8000562:	3908      	subs	r1, #8
 8000564:	2320      	movs	r3, #32
 8000566:	0022      	movs	r2, r4
 8000568:	1a5b      	subs	r3, r3, r1
 800056a:	408f      	lsls	r7, r1
 800056c:	40da      	lsrs	r2, r3
 800056e:	408c      	lsls	r4, r1
 8000570:	4317      	orrs	r7, r2
 8000572:	42b1      	cmp	r1, r6
 8000574:	da00      	bge.n	8000578 <__aeabi_dadd+0xd0>
 8000576:	e0ff      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000578:	1b89      	subs	r1, r1, r6
 800057a:	1c4b      	adds	r3, r1, #1
 800057c:	2b1f      	cmp	r3, #31
 800057e:	dd00      	ble.n	8000582 <__aeabi_dadd+0xda>
 8000580:	e0a8      	b.n	80006d4 <__aeabi_dadd+0x22c>
 8000582:	2220      	movs	r2, #32
 8000584:	0039      	movs	r1, r7
 8000586:	1ad2      	subs	r2, r2, r3
 8000588:	0020      	movs	r0, r4
 800058a:	4094      	lsls	r4, r2
 800058c:	4091      	lsls	r1, r2
 800058e:	40d8      	lsrs	r0, r3
 8000590:	1e62      	subs	r2, r4, #1
 8000592:	4194      	sbcs	r4, r2
 8000594:	40df      	lsrs	r7, r3
 8000596:	2600      	movs	r6, #0
 8000598:	4301      	orrs	r1, r0
 800059a:	430c      	orrs	r4, r1
 800059c:	0763      	lsls	r3, r4, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	4023      	ands	r3, r4
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d23      	adds	r3, r4, #4
 80005aa:	42a3      	cmp	r3, r4
 80005ac:	41a4      	sbcs	r4, r4
 80005ae:	4264      	negs	r4, r4
 80005b0:	193f      	adds	r7, r7, r4
 80005b2:	001c      	movs	r4, r3
 80005b4:	023b      	lsls	r3, r7, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e09e      	b.n	80006f8 <__aeabi_dadd+0x250>
 80005ba:	4b95      	ldr	r3, [pc, #596]	; (8000810 <__aeabi_dadd+0x368>)
 80005bc:	3601      	adds	r6, #1
 80005be:	429e      	cmp	r6, r3
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0b7      	b.n	8000734 <__aeabi_dadd+0x28c>
 80005c4:	4a93      	ldr	r2, [pc, #588]	; (8000814 <__aeabi_dadd+0x36c>)
 80005c6:	08e4      	lsrs	r4, r4, #3
 80005c8:	4017      	ands	r7, r2
 80005ca:	077b      	lsls	r3, r7, #29
 80005cc:	0571      	lsls	r1, r6, #21
 80005ce:	027f      	lsls	r7, r7, #9
 80005d0:	4323      	orrs	r3, r4
 80005d2:	0b3f      	lsrs	r7, r7, #12
 80005d4:	0d4a      	lsrs	r2, r1, #21
 80005d6:	0512      	lsls	r2, r2, #20
 80005d8:	433a      	orrs	r2, r7
 80005da:	07ed      	lsls	r5, r5, #31
 80005dc:	432a      	orrs	r2, r5
 80005de:	0018      	movs	r0, r3
 80005e0:	0011      	movs	r1, r2
 80005e2:	bce0      	pop	{r5, r6, r7}
 80005e4:	46ba      	mov	sl, r7
 80005e6:	46b1      	mov	r9, r6
 80005e8:	46a8      	mov	r8, r5
 80005ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005ec:	2c00      	cmp	r4, #0
 80005ee:	d04b      	beq.n	8000688 <__aeabi_dadd+0x1e0>
 80005f0:	464c      	mov	r4, r9
 80005f2:	1ba4      	subs	r4, r4, r6
 80005f4:	46a4      	mov	ip, r4
 80005f6:	2e00      	cmp	r6, #0
 80005f8:	d000      	beq.n	80005fc <__aeabi_dadd+0x154>
 80005fa:	e123      	b.n	8000844 <__aeabi_dadd+0x39c>
 80005fc:	0004      	movs	r4, r0
 80005fe:	431c      	orrs	r4, r3
 8000600:	d100      	bne.n	8000604 <__aeabi_dadd+0x15c>
 8000602:	e1af      	b.n	8000964 <__aeabi_dadd+0x4bc>
 8000604:	4662      	mov	r2, ip
 8000606:	1e54      	subs	r4, r2, #1
 8000608:	2a01      	cmp	r2, #1
 800060a:	d100      	bne.n	800060e <__aeabi_dadd+0x166>
 800060c:	e215      	b.n	8000a3a <__aeabi_dadd+0x592>
 800060e:	4d80      	ldr	r5, [pc, #512]	; (8000810 <__aeabi_dadd+0x368>)
 8000610:	45ac      	cmp	ip, r5
 8000612:	d100      	bne.n	8000616 <__aeabi_dadd+0x16e>
 8000614:	e1c8      	b.n	80009a8 <__aeabi_dadd+0x500>
 8000616:	46a4      	mov	ip, r4
 8000618:	e11b      	b.n	8000852 <__aeabi_dadd+0x3aa>
 800061a:	464a      	mov	r2, r9
 800061c:	1ab2      	subs	r2, r6, r2
 800061e:	4694      	mov	ip, r2
 8000620:	2a00      	cmp	r2, #0
 8000622:	dc00      	bgt.n	8000626 <__aeabi_dadd+0x17e>
 8000624:	e0ac      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000626:	464a      	mov	r2, r9
 8000628:	2a00      	cmp	r2, #0
 800062a:	d043      	beq.n	80006b4 <__aeabi_dadd+0x20c>
 800062c:	4a78      	ldr	r2, [pc, #480]	; (8000810 <__aeabi_dadd+0x368>)
 800062e:	4296      	cmp	r6, r2
 8000630:	d100      	bne.n	8000634 <__aeabi_dadd+0x18c>
 8000632:	e1af      	b.n	8000994 <__aeabi_dadd+0x4ec>
 8000634:	2280      	movs	r2, #128	; 0x80
 8000636:	003c      	movs	r4, r7
 8000638:	0412      	lsls	r2, r2, #16
 800063a:	4314      	orrs	r4, r2
 800063c:	46a0      	mov	r8, r4
 800063e:	4662      	mov	r2, ip
 8000640:	2a38      	cmp	r2, #56	; 0x38
 8000642:	dc67      	bgt.n	8000714 <__aeabi_dadd+0x26c>
 8000644:	2a1f      	cmp	r2, #31
 8000646:	dc00      	bgt.n	800064a <__aeabi_dadd+0x1a2>
 8000648:	e15f      	b.n	800090a <__aeabi_dadd+0x462>
 800064a:	4647      	mov	r7, r8
 800064c:	3a20      	subs	r2, #32
 800064e:	40d7      	lsrs	r7, r2
 8000650:	4662      	mov	r2, ip
 8000652:	2a20      	cmp	r2, #32
 8000654:	d005      	beq.n	8000662 <__aeabi_dadd+0x1ba>
 8000656:	4664      	mov	r4, ip
 8000658:	2240      	movs	r2, #64	; 0x40
 800065a:	1b12      	subs	r2, r2, r4
 800065c:	4644      	mov	r4, r8
 800065e:	4094      	lsls	r4, r2
 8000660:	4321      	orrs	r1, r4
 8000662:	1e4a      	subs	r2, r1, #1
 8000664:	4191      	sbcs	r1, r2
 8000666:	000c      	movs	r4, r1
 8000668:	433c      	orrs	r4, r7
 800066a:	e057      	b.n	800071c <__aeabi_dadd+0x274>
 800066c:	003a      	movs	r2, r7
 800066e:	430a      	orrs	r2, r1
 8000670:	d100      	bne.n	8000674 <__aeabi_dadd+0x1cc>
 8000672:	e105      	b.n	8000880 <__aeabi_dadd+0x3d8>
 8000674:	0022      	movs	r2, r4
 8000676:	3a01      	subs	r2, #1
 8000678:	2c01      	cmp	r4, #1
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0x1d6>
 800067c:	e182      	b.n	8000984 <__aeabi_dadd+0x4dc>
 800067e:	4c64      	ldr	r4, [pc, #400]	; (8000810 <__aeabi_dadd+0x368>)
 8000680:	45a4      	cmp	ip, r4
 8000682:	d05b      	beq.n	800073c <__aeabi_dadd+0x294>
 8000684:	4694      	mov	ip, r2
 8000686:	e741      	b.n	800050c <__aeabi_dadd+0x64>
 8000688:	4c63      	ldr	r4, [pc, #396]	; (8000818 <__aeabi_dadd+0x370>)
 800068a:	1c77      	adds	r7, r6, #1
 800068c:	4227      	tst	r7, r4
 800068e:	d000      	beq.n	8000692 <__aeabi_dadd+0x1ea>
 8000690:	e0c4      	b.n	800081c <__aeabi_dadd+0x374>
 8000692:	0004      	movs	r4, r0
 8000694:	431c      	orrs	r4, r3
 8000696:	2e00      	cmp	r6, #0
 8000698:	d000      	beq.n	800069c <__aeabi_dadd+0x1f4>
 800069a:	e169      	b.n	8000970 <__aeabi_dadd+0x4c8>
 800069c:	2c00      	cmp	r4, #0
 800069e:	d100      	bne.n	80006a2 <__aeabi_dadd+0x1fa>
 80006a0:	e1bf      	b.n	8000a22 <__aeabi_dadd+0x57a>
 80006a2:	4644      	mov	r4, r8
 80006a4:	430c      	orrs	r4, r1
 80006a6:	d000      	beq.n	80006aa <__aeabi_dadd+0x202>
 80006a8:	e1d0      	b.n	8000a4c <__aeabi_dadd+0x5a4>
 80006aa:	0742      	lsls	r2, r0, #29
 80006ac:	08db      	lsrs	r3, r3, #3
 80006ae:	4313      	orrs	r3, r2
 80006b0:	08c0      	lsrs	r0, r0, #3
 80006b2:	e029      	b.n	8000708 <__aeabi_dadd+0x260>
 80006b4:	003a      	movs	r2, r7
 80006b6:	430a      	orrs	r2, r1
 80006b8:	d100      	bne.n	80006bc <__aeabi_dadd+0x214>
 80006ba:	e170      	b.n	800099e <__aeabi_dadd+0x4f6>
 80006bc:	4662      	mov	r2, ip
 80006be:	4664      	mov	r4, ip
 80006c0:	3a01      	subs	r2, #1
 80006c2:	2c01      	cmp	r4, #1
 80006c4:	d100      	bne.n	80006c8 <__aeabi_dadd+0x220>
 80006c6:	e0e0      	b.n	800088a <__aeabi_dadd+0x3e2>
 80006c8:	4c51      	ldr	r4, [pc, #324]	; (8000810 <__aeabi_dadd+0x368>)
 80006ca:	45a4      	cmp	ip, r4
 80006cc:	d100      	bne.n	80006d0 <__aeabi_dadd+0x228>
 80006ce:	e161      	b.n	8000994 <__aeabi_dadd+0x4ec>
 80006d0:	4694      	mov	ip, r2
 80006d2:	e7b4      	b.n	800063e <__aeabi_dadd+0x196>
 80006d4:	003a      	movs	r2, r7
 80006d6:	391f      	subs	r1, #31
 80006d8:	40ca      	lsrs	r2, r1
 80006da:	0011      	movs	r1, r2
 80006dc:	2b20      	cmp	r3, #32
 80006de:	d003      	beq.n	80006e8 <__aeabi_dadd+0x240>
 80006e0:	2240      	movs	r2, #64	; 0x40
 80006e2:	1ad3      	subs	r3, r2, r3
 80006e4:	409f      	lsls	r7, r3
 80006e6:	433c      	orrs	r4, r7
 80006e8:	1e63      	subs	r3, r4, #1
 80006ea:	419c      	sbcs	r4, r3
 80006ec:	2700      	movs	r7, #0
 80006ee:	2600      	movs	r6, #0
 80006f0:	430c      	orrs	r4, r1
 80006f2:	0763      	lsls	r3, r4, #29
 80006f4:	d000      	beq.n	80006f8 <__aeabi_dadd+0x250>
 80006f6:	e753      	b.n	80005a0 <__aeabi_dadd+0xf8>
 80006f8:	46b4      	mov	ip, r6
 80006fa:	08e4      	lsrs	r4, r4, #3
 80006fc:	077b      	lsls	r3, r7, #29
 80006fe:	4323      	orrs	r3, r4
 8000700:	08f8      	lsrs	r0, r7, #3
 8000702:	4a43      	ldr	r2, [pc, #268]	; (8000810 <__aeabi_dadd+0x368>)
 8000704:	4594      	cmp	ip, r2
 8000706:	d01d      	beq.n	8000744 <__aeabi_dadd+0x29c>
 8000708:	4662      	mov	r2, ip
 800070a:	0307      	lsls	r7, r0, #12
 800070c:	0552      	lsls	r2, r2, #21
 800070e:	0b3f      	lsrs	r7, r7, #12
 8000710:	0d52      	lsrs	r2, r2, #21
 8000712:	e760      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000714:	4644      	mov	r4, r8
 8000716:	430c      	orrs	r4, r1
 8000718:	1e62      	subs	r2, r4, #1
 800071a:	4194      	sbcs	r4, r2
 800071c:	18e4      	adds	r4, r4, r3
 800071e:	429c      	cmp	r4, r3
 8000720:	419b      	sbcs	r3, r3
 8000722:	425f      	negs	r7, r3
 8000724:	183f      	adds	r7, r7, r0
 8000726:	023b      	lsls	r3, r7, #8
 8000728:	d5e3      	bpl.n	80006f2 <__aeabi_dadd+0x24a>
 800072a:	4b39      	ldr	r3, [pc, #228]	; (8000810 <__aeabi_dadd+0x368>)
 800072c:	3601      	adds	r6, #1
 800072e:	429e      	cmp	r6, r3
 8000730:	d000      	beq.n	8000734 <__aeabi_dadd+0x28c>
 8000732:	e0b5      	b.n	80008a0 <__aeabi_dadd+0x3f8>
 8000734:	0032      	movs	r2, r6
 8000736:	2700      	movs	r7, #0
 8000738:	2300      	movs	r3, #0
 800073a:	e74c      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800073c:	0742      	lsls	r2, r0, #29
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	4313      	orrs	r3, r2
 8000742:	08c0      	lsrs	r0, r0, #3
 8000744:	001a      	movs	r2, r3
 8000746:	4302      	orrs	r2, r0
 8000748:	d100      	bne.n	800074c <__aeabi_dadd+0x2a4>
 800074a:	e1e1      	b.n	8000b10 <__aeabi_dadd+0x668>
 800074c:	2780      	movs	r7, #128	; 0x80
 800074e:	033f      	lsls	r7, r7, #12
 8000750:	4307      	orrs	r7, r0
 8000752:	033f      	lsls	r7, r7, #12
 8000754:	4a2e      	ldr	r2, [pc, #184]	; (8000810 <__aeabi_dadd+0x368>)
 8000756:	0b3f      	lsrs	r7, r7, #12
 8000758:	e73d      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800075a:	0020      	movs	r0, r4
 800075c:	f001 fc8a 	bl	8002074 <__clzsi2>
 8000760:	0001      	movs	r1, r0
 8000762:	3118      	adds	r1, #24
 8000764:	291f      	cmp	r1, #31
 8000766:	dc00      	bgt.n	800076a <__aeabi_dadd+0x2c2>
 8000768:	e6fc      	b.n	8000564 <__aeabi_dadd+0xbc>
 800076a:	3808      	subs	r0, #8
 800076c:	4084      	lsls	r4, r0
 800076e:	0027      	movs	r7, r4
 8000770:	2400      	movs	r4, #0
 8000772:	42b1      	cmp	r1, r6
 8000774:	db00      	blt.n	8000778 <__aeabi_dadd+0x2d0>
 8000776:	e6ff      	b.n	8000578 <__aeabi_dadd+0xd0>
 8000778:	4a26      	ldr	r2, [pc, #152]	; (8000814 <__aeabi_dadd+0x36c>)
 800077a:	1a76      	subs	r6, r6, r1
 800077c:	4017      	ands	r7, r2
 800077e:	e70d      	b.n	800059c <__aeabi_dadd+0xf4>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d02f      	beq.n	80007e4 <__aeabi_dadd+0x33c>
 8000784:	464a      	mov	r2, r9
 8000786:	1b92      	subs	r2, r2, r6
 8000788:	4694      	mov	ip, r2
 800078a:	2e00      	cmp	r6, #0
 800078c:	d100      	bne.n	8000790 <__aeabi_dadd+0x2e8>
 800078e:	e0ad      	b.n	80008ec <__aeabi_dadd+0x444>
 8000790:	4a1f      	ldr	r2, [pc, #124]	; (8000810 <__aeabi_dadd+0x368>)
 8000792:	4591      	cmp	r9, r2
 8000794:	d100      	bne.n	8000798 <__aeabi_dadd+0x2f0>
 8000796:	e10f      	b.n	80009b8 <__aeabi_dadd+0x510>
 8000798:	2280      	movs	r2, #128	; 0x80
 800079a:	0412      	lsls	r2, r2, #16
 800079c:	4310      	orrs	r0, r2
 800079e:	4662      	mov	r2, ip
 80007a0:	2a38      	cmp	r2, #56	; 0x38
 80007a2:	dd00      	ble.n	80007a6 <__aeabi_dadd+0x2fe>
 80007a4:	e10f      	b.n	80009c6 <__aeabi_dadd+0x51e>
 80007a6:	2a1f      	cmp	r2, #31
 80007a8:	dd00      	ble.n	80007ac <__aeabi_dadd+0x304>
 80007aa:	e180      	b.n	8000aae <__aeabi_dadd+0x606>
 80007ac:	4664      	mov	r4, ip
 80007ae:	2220      	movs	r2, #32
 80007b0:	001e      	movs	r6, r3
 80007b2:	1b12      	subs	r2, r2, r4
 80007b4:	4667      	mov	r7, ip
 80007b6:	0004      	movs	r4, r0
 80007b8:	4093      	lsls	r3, r2
 80007ba:	4094      	lsls	r4, r2
 80007bc:	40fe      	lsrs	r6, r7
 80007be:	1e5a      	subs	r2, r3, #1
 80007c0:	4193      	sbcs	r3, r2
 80007c2:	40f8      	lsrs	r0, r7
 80007c4:	4334      	orrs	r4, r6
 80007c6:	431c      	orrs	r4, r3
 80007c8:	4480      	add	r8, r0
 80007ca:	1864      	adds	r4, r4, r1
 80007cc:	428c      	cmp	r4, r1
 80007ce:	41bf      	sbcs	r7, r7
 80007d0:	427f      	negs	r7, r7
 80007d2:	464e      	mov	r6, r9
 80007d4:	4447      	add	r7, r8
 80007d6:	e7a6      	b.n	8000726 <__aeabi_dadd+0x27e>
 80007d8:	4642      	mov	r2, r8
 80007da:	430a      	orrs	r2, r1
 80007dc:	0011      	movs	r1, r2
 80007de:	1e4a      	subs	r2, r1, #1
 80007e0:	4191      	sbcs	r1, r2
 80007e2:	e6ad      	b.n	8000540 <__aeabi_dadd+0x98>
 80007e4:	4c0c      	ldr	r4, [pc, #48]	; (8000818 <__aeabi_dadd+0x370>)
 80007e6:	1c72      	adds	r2, r6, #1
 80007e8:	4222      	tst	r2, r4
 80007ea:	d000      	beq.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a1      	b.n	8000932 <__aeabi_dadd+0x48a>
 80007ee:	0002      	movs	r2, r0
 80007f0:	431a      	orrs	r2, r3
 80007f2:	2e00      	cmp	r6, #0
 80007f4:	d000      	beq.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e0fa      	b.n	80009ee <__aeabi_dadd+0x546>
 80007f8:	2a00      	cmp	r2, #0
 80007fa:	d100      	bne.n	80007fe <__aeabi_dadd+0x356>
 80007fc:	e145      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 80007fe:	003a      	movs	r2, r7
 8000800:	430a      	orrs	r2, r1
 8000802:	d000      	beq.n	8000806 <__aeabi_dadd+0x35e>
 8000804:	e146      	b.n	8000a94 <__aeabi_dadd+0x5ec>
 8000806:	0742      	lsls	r2, r0, #29
 8000808:	08db      	lsrs	r3, r3, #3
 800080a:	4313      	orrs	r3, r2
 800080c:	08c0      	lsrs	r0, r0, #3
 800080e:	e77b      	b.n	8000708 <__aeabi_dadd+0x260>
 8000810:	000007ff 	.word	0x000007ff
 8000814:	ff7fffff 	.word	0xff7fffff
 8000818:	000007fe 	.word	0x000007fe
 800081c:	4647      	mov	r7, r8
 800081e:	1a5c      	subs	r4, r3, r1
 8000820:	1bc2      	subs	r2, r0, r7
 8000822:	42a3      	cmp	r3, r4
 8000824:	41bf      	sbcs	r7, r7
 8000826:	427f      	negs	r7, r7
 8000828:	46b9      	mov	r9, r7
 800082a:	0017      	movs	r7, r2
 800082c:	464a      	mov	r2, r9
 800082e:	1abf      	subs	r7, r7, r2
 8000830:	023a      	lsls	r2, r7, #8
 8000832:	d500      	bpl.n	8000836 <__aeabi_dadd+0x38e>
 8000834:	e08d      	b.n	8000952 <__aeabi_dadd+0x4aa>
 8000836:	0023      	movs	r3, r4
 8000838:	433b      	orrs	r3, r7
 800083a:	d000      	beq.n	800083e <__aeabi_dadd+0x396>
 800083c:	e68a      	b.n	8000554 <__aeabi_dadd+0xac>
 800083e:	2000      	movs	r0, #0
 8000840:	2500      	movs	r5, #0
 8000842:	e761      	b.n	8000708 <__aeabi_dadd+0x260>
 8000844:	4cb4      	ldr	r4, [pc, #720]	; (8000b18 <__aeabi_dadd+0x670>)
 8000846:	45a1      	cmp	r9, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e0ad      	b.n	80009a8 <__aeabi_dadd+0x500>
 800084c:	2480      	movs	r4, #128	; 0x80
 800084e:	0424      	lsls	r4, r4, #16
 8000850:	4320      	orrs	r0, r4
 8000852:	4664      	mov	r4, ip
 8000854:	2c38      	cmp	r4, #56	; 0x38
 8000856:	dc3d      	bgt.n	80008d4 <__aeabi_dadd+0x42c>
 8000858:	4662      	mov	r2, ip
 800085a:	2c1f      	cmp	r4, #31
 800085c:	dd00      	ble.n	8000860 <__aeabi_dadd+0x3b8>
 800085e:	e0b7      	b.n	80009d0 <__aeabi_dadd+0x528>
 8000860:	2520      	movs	r5, #32
 8000862:	001e      	movs	r6, r3
 8000864:	1b2d      	subs	r5, r5, r4
 8000866:	0004      	movs	r4, r0
 8000868:	40ab      	lsls	r3, r5
 800086a:	40ac      	lsls	r4, r5
 800086c:	40d6      	lsrs	r6, r2
 800086e:	40d0      	lsrs	r0, r2
 8000870:	4642      	mov	r2, r8
 8000872:	1e5d      	subs	r5, r3, #1
 8000874:	41ab      	sbcs	r3, r5
 8000876:	4334      	orrs	r4, r6
 8000878:	1a12      	subs	r2, r2, r0
 800087a:	4690      	mov	r8, r2
 800087c:	4323      	orrs	r3, r4
 800087e:	e02c      	b.n	80008da <__aeabi_dadd+0x432>
 8000880:	0742      	lsls	r2, r0, #29
 8000882:	08db      	lsrs	r3, r3, #3
 8000884:	4313      	orrs	r3, r2
 8000886:	08c0      	lsrs	r0, r0, #3
 8000888:	e73b      	b.n	8000702 <__aeabi_dadd+0x25a>
 800088a:	185c      	adds	r4, r3, r1
 800088c:	429c      	cmp	r4, r3
 800088e:	419b      	sbcs	r3, r3
 8000890:	4440      	add	r0, r8
 8000892:	425b      	negs	r3, r3
 8000894:	18c7      	adds	r7, r0, r3
 8000896:	2601      	movs	r6, #1
 8000898:	023b      	lsls	r3, r7, #8
 800089a:	d400      	bmi.n	800089e <__aeabi_dadd+0x3f6>
 800089c:	e729      	b.n	80006f2 <__aeabi_dadd+0x24a>
 800089e:	2602      	movs	r6, #2
 80008a0:	4a9e      	ldr	r2, [pc, #632]	; (8000b1c <__aeabi_dadd+0x674>)
 80008a2:	0863      	lsrs	r3, r4, #1
 80008a4:	4017      	ands	r7, r2
 80008a6:	2201      	movs	r2, #1
 80008a8:	4014      	ands	r4, r2
 80008aa:	431c      	orrs	r4, r3
 80008ac:	07fb      	lsls	r3, r7, #31
 80008ae:	431c      	orrs	r4, r3
 80008b0:	087f      	lsrs	r7, r7, #1
 80008b2:	e673      	b.n	800059c <__aeabi_dadd+0xf4>
 80008b4:	4644      	mov	r4, r8
 80008b6:	3a20      	subs	r2, #32
 80008b8:	40d4      	lsrs	r4, r2
 80008ba:	4662      	mov	r2, ip
 80008bc:	2a20      	cmp	r2, #32
 80008be:	d005      	beq.n	80008cc <__aeabi_dadd+0x424>
 80008c0:	4667      	mov	r7, ip
 80008c2:	2240      	movs	r2, #64	; 0x40
 80008c4:	1bd2      	subs	r2, r2, r7
 80008c6:	4647      	mov	r7, r8
 80008c8:	4097      	lsls	r7, r2
 80008ca:	4339      	orrs	r1, r7
 80008cc:	1e4a      	subs	r2, r1, #1
 80008ce:	4191      	sbcs	r1, r2
 80008d0:	4321      	orrs	r1, r4
 80008d2:	e635      	b.n	8000540 <__aeabi_dadd+0x98>
 80008d4:	4303      	orrs	r3, r0
 80008d6:	1e58      	subs	r0, r3, #1
 80008d8:	4183      	sbcs	r3, r0
 80008da:	1acc      	subs	r4, r1, r3
 80008dc:	42a1      	cmp	r1, r4
 80008de:	41bf      	sbcs	r7, r7
 80008e0:	4643      	mov	r3, r8
 80008e2:	427f      	negs	r7, r7
 80008e4:	4655      	mov	r5, sl
 80008e6:	464e      	mov	r6, r9
 80008e8:	1bdf      	subs	r7, r3, r7
 80008ea:	e62e      	b.n	800054a <__aeabi_dadd+0xa2>
 80008ec:	0002      	movs	r2, r0
 80008ee:	431a      	orrs	r2, r3
 80008f0:	d100      	bne.n	80008f4 <__aeabi_dadd+0x44c>
 80008f2:	e0bd      	b.n	8000a70 <__aeabi_dadd+0x5c8>
 80008f4:	4662      	mov	r2, ip
 80008f6:	4664      	mov	r4, ip
 80008f8:	3a01      	subs	r2, #1
 80008fa:	2c01      	cmp	r4, #1
 80008fc:	d100      	bne.n	8000900 <__aeabi_dadd+0x458>
 80008fe:	e0e5      	b.n	8000acc <__aeabi_dadd+0x624>
 8000900:	4c85      	ldr	r4, [pc, #532]	; (8000b18 <__aeabi_dadd+0x670>)
 8000902:	45a4      	cmp	ip, r4
 8000904:	d058      	beq.n	80009b8 <__aeabi_dadd+0x510>
 8000906:	4694      	mov	ip, r2
 8000908:	e749      	b.n	800079e <__aeabi_dadd+0x2f6>
 800090a:	4664      	mov	r4, ip
 800090c:	2220      	movs	r2, #32
 800090e:	1b12      	subs	r2, r2, r4
 8000910:	4644      	mov	r4, r8
 8000912:	4094      	lsls	r4, r2
 8000914:	000f      	movs	r7, r1
 8000916:	46a1      	mov	r9, r4
 8000918:	4664      	mov	r4, ip
 800091a:	4091      	lsls	r1, r2
 800091c:	40e7      	lsrs	r7, r4
 800091e:	464c      	mov	r4, r9
 8000920:	1e4a      	subs	r2, r1, #1
 8000922:	4191      	sbcs	r1, r2
 8000924:	433c      	orrs	r4, r7
 8000926:	4642      	mov	r2, r8
 8000928:	430c      	orrs	r4, r1
 800092a:	4661      	mov	r1, ip
 800092c:	40ca      	lsrs	r2, r1
 800092e:	1880      	adds	r0, r0, r2
 8000930:	e6f4      	b.n	800071c <__aeabi_dadd+0x274>
 8000932:	4c79      	ldr	r4, [pc, #484]	; (8000b18 <__aeabi_dadd+0x670>)
 8000934:	42a2      	cmp	r2, r4
 8000936:	d100      	bne.n	800093a <__aeabi_dadd+0x492>
 8000938:	e6fd      	b.n	8000736 <__aeabi_dadd+0x28e>
 800093a:	1859      	adds	r1, r3, r1
 800093c:	4299      	cmp	r1, r3
 800093e:	419b      	sbcs	r3, r3
 8000940:	4440      	add	r0, r8
 8000942:	425f      	negs	r7, r3
 8000944:	19c7      	adds	r7, r0, r7
 8000946:	07fc      	lsls	r4, r7, #31
 8000948:	0849      	lsrs	r1, r1, #1
 800094a:	0016      	movs	r6, r2
 800094c:	430c      	orrs	r4, r1
 800094e:	087f      	lsrs	r7, r7, #1
 8000950:	e6cf      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000952:	1acc      	subs	r4, r1, r3
 8000954:	42a1      	cmp	r1, r4
 8000956:	41bf      	sbcs	r7, r7
 8000958:	4643      	mov	r3, r8
 800095a:	427f      	negs	r7, r7
 800095c:	1a18      	subs	r0, r3, r0
 800095e:	4655      	mov	r5, sl
 8000960:	1bc7      	subs	r7, r0, r7
 8000962:	e5f7      	b.n	8000554 <__aeabi_dadd+0xac>
 8000964:	08c9      	lsrs	r1, r1, #3
 8000966:	077b      	lsls	r3, r7, #29
 8000968:	4655      	mov	r5, sl
 800096a:	430b      	orrs	r3, r1
 800096c:	08f8      	lsrs	r0, r7, #3
 800096e:	e6c8      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000970:	2c00      	cmp	r4, #0
 8000972:	d000      	beq.n	8000976 <__aeabi_dadd+0x4ce>
 8000974:	e081      	b.n	8000a7a <__aeabi_dadd+0x5d2>
 8000976:	4643      	mov	r3, r8
 8000978:	430b      	orrs	r3, r1
 800097a:	d115      	bne.n	80009a8 <__aeabi_dadd+0x500>
 800097c:	2080      	movs	r0, #128	; 0x80
 800097e:	2500      	movs	r5, #0
 8000980:	0300      	lsls	r0, r0, #12
 8000982:	e6e3      	b.n	800074c <__aeabi_dadd+0x2a4>
 8000984:	1a5c      	subs	r4, r3, r1
 8000986:	42a3      	cmp	r3, r4
 8000988:	419b      	sbcs	r3, r3
 800098a:	1bc7      	subs	r7, r0, r7
 800098c:	425b      	negs	r3, r3
 800098e:	2601      	movs	r6, #1
 8000990:	1aff      	subs	r7, r7, r3
 8000992:	e5da      	b.n	800054a <__aeabi_dadd+0xa2>
 8000994:	0742      	lsls	r2, r0, #29
 8000996:	08db      	lsrs	r3, r3, #3
 8000998:	4313      	orrs	r3, r2
 800099a:	08c0      	lsrs	r0, r0, #3
 800099c:	e6d2      	b.n	8000744 <__aeabi_dadd+0x29c>
 800099e:	0742      	lsls	r2, r0, #29
 80009a0:	08db      	lsrs	r3, r3, #3
 80009a2:	4313      	orrs	r3, r2
 80009a4:	08c0      	lsrs	r0, r0, #3
 80009a6:	e6ac      	b.n	8000702 <__aeabi_dadd+0x25a>
 80009a8:	4643      	mov	r3, r8
 80009aa:	4642      	mov	r2, r8
 80009ac:	08c9      	lsrs	r1, r1, #3
 80009ae:	075b      	lsls	r3, r3, #29
 80009b0:	4655      	mov	r5, sl
 80009b2:	430b      	orrs	r3, r1
 80009b4:	08d0      	lsrs	r0, r2, #3
 80009b6:	e6c5      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009b8:	4643      	mov	r3, r8
 80009ba:	4642      	mov	r2, r8
 80009bc:	075b      	lsls	r3, r3, #29
 80009be:	08c9      	lsrs	r1, r1, #3
 80009c0:	430b      	orrs	r3, r1
 80009c2:	08d0      	lsrs	r0, r2, #3
 80009c4:	e6be      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009c6:	4303      	orrs	r3, r0
 80009c8:	001c      	movs	r4, r3
 80009ca:	1e63      	subs	r3, r4, #1
 80009cc:	419c      	sbcs	r4, r3
 80009ce:	e6fc      	b.n	80007ca <__aeabi_dadd+0x322>
 80009d0:	0002      	movs	r2, r0
 80009d2:	3c20      	subs	r4, #32
 80009d4:	40e2      	lsrs	r2, r4
 80009d6:	0014      	movs	r4, r2
 80009d8:	4662      	mov	r2, ip
 80009da:	2a20      	cmp	r2, #32
 80009dc:	d003      	beq.n	80009e6 <__aeabi_dadd+0x53e>
 80009de:	2540      	movs	r5, #64	; 0x40
 80009e0:	1aad      	subs	r5, r5, r2
 80009e2:	40a8      	lsls	r0, r5
 80009e4:	4303      	orrs	r3, r0
 80009e6:	1e58      	subs	r0, r3, #1
 80009e8:	4183      	sbcs	r3, r0
 80009ea:	4323      	orrs	r3, r4
 80009ec:	e775      	b.n	80008da <__aeabi_dadd+0x432>
 80009ee:	2a00      	cmp	r2, #0
 80009f0:	d0e2      	beq.n	80009b8 <__aeabi_dadd+0x510>
 80009f2:	003a      	movs	r2, r7
 80009f4:	430a      	orrs	r2, r1
 80009f6:	d0cd      	beq.n	8000994 <__aeabi_dadd+0x4ec>
 80009f8:	0742      	lsls	r2, r0, #29
 80009fa:	08db      	lsrs	r3, r3, #3
 80009fc:	4313      	orrs	r3, r2
 80009fe:	2280      	movs	r2, #128	; 0x80
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	0312      	lsls	r2, r2, #12
 8000a04:	4210      	tst	r0, r2
 8000a06:	d006      	beq.n	8000a16 <__aeabi_dadd+0x56e>
 8000a08:	08fc      	lsrs	r4, r7, #3
 8000a0a:	4214      	tst	r4, r2
 8000a0c:	d103      	bne.n	8000a16 <__aeabi_dadd+0x56e>
 8000a0e:	0020      	movs	r0, r4
 8000a10:	08cb      	lsrs	r3, r1, #3
 8000a12:	077a      	lsls	r2, r7, #29
 8000a14:	4313      	orrs	r3, r2
 8000a16:	0f5a      	lsrs	r2, r3, #29
 8000a18:	00db      	lsls	r3, r3, #3
 8000a1a:	0752      	lsls	r2, r2, #29
 8000a1c:	08db      	lsrs	r3, r3, #3
 8000a1e:	4313      	orrs	r3, r2
 8000a20:	e690      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a22:	4643      	mov	r3, r8
 8000a24:	430b      	orrs	r3, r1
 8000a26:	d100      	bne.n	8000a2a <__aeabi_dadd+0x582>
 8000a28:	e709      	b.n	800083e <__aeabi_dadd+0x396>
 8000a2a:	4643      	mov	r3, r8
 8000a2c:	4642      	mov	r2, r8
 8000a2e:	08c9      	lsrs	r1, r1, #3
 8000a30:	075b      	lsls	r3, r3, #29
 8000a32:	4655      	mov	r5, sl
 8000a34:	430b      	orrs	r3, r1
 8000a36:	08d0      	lsrs	r0, r2, #3
 8000a38:	e666      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a3a:	1acc      	subs	r4, r1, r3
 8000a3c:	42a1      	cmp	r1, r4
 8000a3e:	4189      	sbcs	r1, r1
 8000a40:	1a3f      	subs	r7, r7, r0
 8000a42:	4249      	negs	r1, r1
 8000a44:	4655      	mov	r5, sl
 8000a46:	2601      	movs	r6, #1
 8000a48:	1a7f      	subs	r7, r7, r1
 8000a4a:	e57e      	b.n	800054a <__aeabi_dadd+0xa2>
 8000a4c:	4642      	mov	r2, r8
 8000a4e:	1a5c      	subs	r4, r3, r1
 8000a50:	1a87      	subs	r7, r0, r2
 8000a52:	42a3      	cmp	r3, r4
 8000a54:	4192      	sbcs	r2, r2
 8000a56:	4252      	negs	r2, r2
 8000a58:	1abf      	subs	r7, r7, r2
 8000a5a:	023a      	lsls	r2, r7, #8
 8000a5c:	d53d      	bpl.n	8000ada <__aeabi_dadd+0x632>
 8000a5e:	1acc      	subs	r4, r1, r3
 8000a60:	42a1      	cmp	r1, r4
 8000a62:	4189      	sbcs	r1, r1
 8000a64:	4643      	mov	r3, r8
 8000a66:	4249      	negs	r1, r1
 8000a68:	1a1f      	subs	r7, r3, r0
 8000a6a:	4655      	mov	r5, sl
 8000a6c:	1a7f      	subs	r7, r7, r1
 8000a6e:	e595      	b.n	800059c <__aeabi_dadd+0xf4>
 8000a70:	077b      	lsls	r3, r7, #29
 8000a72:	08c9      	lsrs	r1, r1, #3
 8000a74:	430b      	orrs	r3, r1
 8000a76:	08f8      	lsrs	r0, r7, #3
 8000a78:	e643      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000a7a:	4644      	mov	r4, r8
 8000a7c:	08db      	lsrs	r3, r3, #3
 8000a7e:	430c      	orrs	r4, r1
 8000a80:	d130      	bne.n	8000ae4 <__aeabi_dadd+0x63c>
 8000a82:	0742      	lsls	r2, r0, #29
 8000a84:	4313      	orrs	r3, r2
 8000a86:	08c0      	lsrs	r0, r0, #3
 8000a88:	e65c      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a8a:	077b      	lsls	r3, r7, #29
 8000a8c:	08c9      	lsrs	r1, r1, #3
 8000a8e:	430b      	orrs	r3, r1
 8000a90:	08f8      	lsrs	r0, r7, #3
 8000a92:	e639      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a94:	185c      	adds	r4, r3, r1
 8000a96:	429c      	cmp	r4, r3
 8000a98:	419b      	sbcs	r3, r3
 8000a9a:	4440      	add	r0, r8
 8000a9c:	425b      	negs	r3, r3
 8000a9e:	18c7      	adds	r7, r0, r3
 8000aa0:	023b      	lsls	r3, r7, #8
 8000aa2:	d400      	bmi.n	8000aa6 <__aeabi_dadd+0x5fe>
 8000aa4:	e625      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aa6:	4b1d      	ldr	r3, [pc, #116]	; (8000b1c <__aeabi_dadd+0x674>)
 8000aa8:	2601      	movs	r6, #1
 8000aaa:	401f      	ands	r7, r3
 8000aac:	e621      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aae:	0004      	movs	r4, r0
 8000ab0:	3a20      	subs	r2, #32
 8000ab2:	40d4      	lsrs	r4, r2
 8000ab4:	4662      	mov	r2, ip
 8000ab6:	2a20      	cmp	r2, #32
 8000ab8:	d004      	beq.n	8000ac4 <__aeabi_dadd+0x61c>
 8000aba:	2240      	movs	r2, #64	; 0x40
 8000abc:	4666      	mov	r6, ip
 8000abe:	1b92      	subs	r2, r2, r6
 8000ac0:	4090      	lsls	r0, r2
 8000ac2:	4303      	orrs	r3, r0
 8000ac4:	1e5a      	subs	r2, r3, #1
 8000ac6:	4193      	sbcs	r3, r2
 8000ac8:	431c      	orrs	r4, r3
 8000aca:	e67e      	b.n	80007ca <__aeabi_dadd+0x322>
 8000acc:	185c      	adds	r4, r3, r1
 8000ace:	428c      	cmp	r4, r1
 8000ad0:	4189      	sbcs	r1, r1
 8000ad2:	4440      	add	r0, r8
 8000ad4:	4249      	negs	r1, r1
 8000ad6:	1847      	adds	r7, r0, r1
 8000ad8:	e6dd      	b.n	8000896 <__aeabi_dadd+0x3ee>
 8000ada:	0023      	movs	r3, r4
 8000adc:	433b      	orrs	r3, r7
 8000ade:	d100      	bne.n	8000ae2 <__aeabi_dadd+0x63a>
 8000ae0:	e6ad      	b.n	800083e <__aeabi_dadd+0x396>
 8000ae2:	e606      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000ae4:	0744      	lsls	r4, r0, #29
 8000ae6:	4323      	orrs	r3, r4
 8000ae8:	2480      	movs	r4, #128	; 0x80
 8000aea:	08c0      	lsrs	r0, r0, #3
 8000aec:	0324      	lsls	r4, r4, #12
 8000aee:	4220      	tst	r0, r4
 8000af0:	d008      	beq.n	8000b04 <__aeabi_dadd+0x65c>
 8000af2:	4642      	mov	r2, r8
 8000af4:	08d6      	lsrs	r6, r2, #3
 8000af6:	4226      	tst	r6, r4
 8000af8:	d104      	bne.n	8000b04 <__aeabi_dadd+0x65c>
 8000afa:	4655      	mov	r5, sl
 8000afc:	0030      	movs	r0, r6
 8000afe:	08cb      	lsrs	r3, r1, #3
 8000b00:	0751      	lsls	r1, r2, #29
 8000b02:	430b      	orrs	r3, r1
 8000b04:	0f5a      	lsrs	r2, r3, #29
 8000b06:	00db      	lsls	r3, r3, #3
 8000b08:	08db      	lsrs	r3, r3, #3
 8000b0a:	0752      	lsls	r2, r2, #29
 8000b0c:	4313      	orrs	r3, r2
 8000b0e:	e619      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000b10:	2300      	movs	r3, #0
 8000b12:	4a01      	ldr	r2, [pc, #4]	; (8000b18 <__aeabi_dadd+0x670>)
 8000b14:	001f      	movs	r7, r3
 8000b16:	e55e      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000b18:	000007ff 	.word	0x000007ff
 8000b1c:	ff7fffff 	.word	0xff7fffff

08000b20 <__aeabi_ddiv>:
 8000b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b22:	4657      	mov	r7, sl
 8000b24:	464e      	mov	r6, r9
 8000b26:	4645      	mov	r5, r8
 8000b28:	46de      	mov	lr, fp
 8000b2a:	b5e0      	push	{r5, r6, r7, lr}
 8000b2c:	4681      	mov	r9, r0
 8000b2e:	0005      	movs	r5, r0
 8000b30:	030c      	lsls	r4, r1, #12
 8000b32:	0048      	lsls	r0, r1, #1
 8000b34:	4692      	mov	sl, r2
 8000b36:	001f      	movs	r7, r3
 8000b38:	b085      	sub	sp, #20
 8000b3a:	0b24      	lsrs	r4, r4, #12
 8000b3c:	0d40      	lsrs	r0, r0, #21
 8000b3e:	0fce      	lsrs	r6, r1, #31
 8000b40:	2800      	cmp	r0, #0
 8000b42:	d100      	bne.n	8000b46 <__aeabi_ddiv+0x26>
 8000b44:	e156      	b.n	8000df4 <__aeabi_ddiv+0x2d4>
 8000b46:	4bd4      	ldr	r3, [pc, #848]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b48:	4298      	cmp	r0, r3
 8000b4a:	d100      	bne.n	8000b4e <__aeabi_ddiv+0x2e>
 8000b4c:	e172      	b.n	8000e34 <__aeabi_ddiv+0x314>
 8000b4e:	0f6b      	lsrs	r3, r5, #29
 8000b50:	00e4      	lsls	r4, r4, #3
 8000b52:	431c      	orrs	r4, r3
 8000b54:	2380      	movs	r3, #128	; 0x80
 8000b56:	041b      	lsls	r3, r3, #16
 8000b58:	4323      	orrs	r3, r4
 8000b5a:	4698      	mov	r8, r3
 8000b5c:	4bcf      	ldr	r3, [pc, #828]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b5e:	00ed      	lsls	r5, r5, #3
 8000b60:	469b      	mov	fp, r3
 8000b62:	2300      	movs	r3, #0
 8000b64:	4699      	mov	r9, r3
 8000b66:	4483      	add	fp, r0
 8000b68:	9300      	str	r3, [sp, #0]
 8000b6a:	033c      	lsls	r4, r7, #12
 8000b6c:	007b      	lsls	r3, r7, #1
 8000b6e:	4650      	mov	r0, sl
 8000b70:	0b24      	lsrs	r4, r4, #12
 8000b72:	0d5b      	lsrs	r3, r3, #21
 8000b74:	0fff      	lsrs	r7, r7, #31
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d100      	bne.n	8000b7c <__aeabi_ddiv+0x5c>
 8000b7a:	e11f      	b.n	8000dbc <__aeabi_ddiv+0x29c>
 8000b7c:	4ac6      	ldr	r2, [pc, #792]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b7e:	4293      	cmp	r3, r2
 8000b80:	d100      	bne.n	8000b84 <__aeabi_ddiv+0x64>
 8000b82:	e162      	b.n	8000e4a <__aeabi_ddiv+0x32a>
 8000b84:	49c5      	ldr	r1, [pc, #788]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b86:	0f42      	lsrs	r2, r0, #29
 8000b88:	468c      	mov	ip, r1
 8000b8a:	00e4      	lsls	r4, r4, #3
 8000b8c:	4659      	mov	r1, fp
 8000b8e:	4314      	orrs	r4, r2
 8000b90:	2280      	movs	r2, #128	; 0x80
 8000b92:	4463      	add	r3, ip
 8000b94:	0412      	lsls	r2, r2, #16
 8000b96:	1acb      	subs	r3, r1, r3
 8000b98:	4314      	orrs	r4, r2
 8000b9a:	469b      	mov	fp, r3
 8000b9c:	00c2      	lsls	r2, r0, #3
 8000b9e:	2000      	movs	r0, #0
 8000ba0:	0033      	movs	r3, r6
 8000ba2:	407b      	eors	r3, r7
 8000ba4:	469a      	mov	sl, r3
 8000ba6:	464b      	mov	r3, r9
 8000ba8:	2b0f      	cmp	r3, #15
 8000baa:	d827      	bhi.n	8000bfc <__aeabi_ddiv+0xdc>
 8000bac:	49bc      	ldr	r1, [pc, #752]	; (8000ea0 <__aeabi_ddiv+0x380>)
 8000bae:	009b      	lsls	r3, r3, #2
 8000bb0:	58cb      	ldr	r3, [r1, r3]
 8000bb2:	469f      	mov	pc, r3
 8000bb4:	46b2      	mov	sl, r6
 8000bb6:	9b00      	ldr	r3, [sp, #0]
 8000bb8:	2b02      	cmp	r3, #2
 8000bba:	d016      	beq.n	8000bea <__aeabi_ddiv+0xca>
 8000bbc:	2b03      	cmp	r3, #3
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_ddiv+0xa2>
 8000bc0:	e28e      	b.n	80010e0 <__aeabi_ddiv+0x5c0>
 8000bc2:	2b01      	cmp	r3, #1
 8000bc4:	d000      	beq.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000bc6:	e0d9      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000bc8:	2300      	movs	r3, #0
 8000bca:	2400      	movs	r4, #0
 8000bcc:	2500      	movs	r5, #0
 8000bce:	4652      	mov	r2, sl
 8000bd0:	051b      	lsls	r3, r3, #20
 8000bd2:	4323      	orrs	r3, r4
 8000bd4:	07d2      	lsls	r2, r2, #31
 8000bd6:	4313      	orrs	r3, r2
 8000bd8:	0028      	movs	r0, r5
 8000bda:	0019      	movs	r1, r3
 8000bdc:	b005      	add	sp, #20
 8000bde:	bcf0      	pop	{r4, r5, r6, r7}
 8000be0:	46bb      	mov	fp, r7
 8000be2:	46b2      	mov	sl, r6
 8000be4:	46a9      	mov	r9, r5
 8000be6:	46a0      	mov	r8, r4
 8000be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000bea:	2400      	movs	r4, #0
 8000bec:	2500      	movs	r5, #0
 8000bee:	4baa      	ldr	r3, [pc, #680]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000bf0:	e7ed      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000bf2:	46ba      	mov	sl, r7
 8000bf4:	46a0      	mov	r8, r4
 8000bf6:	0015      	movs	r5, r2
 8000bf8:	9000      	str	r0, [sp, #0]
 8000bfa:	e7dc      	b.n	8000bb6 <__aeabi_ddiv+0x96>
 8000bfc:	4544      	cmp	r4, r8
 8000bfe:	d200      	bcs.n	8000c02 <__aeabi_ddiv+0xe2>
 8000c00:	e1c7      	b.n	8000f92 <__aeabi_ddiv+0x472>
 8000c02:	d100      	bne.n	8000c06 <__aeabi_ddiv+0xe6>
 8000c04:	e1c2      	b.n	8000f8c <__aeabi_ddiv+0x46c>
 8000c06:	2301      	movs	r3, #1
 8000c08:	425b      	negs	r3, r3
 8000c0a:	469c      	mov	ip, r3
 8000c0c:	002e      	movs	r6, r5
 8000c0e:	4640      	mov	r0, r8
 8000c10:	2500      	movs	r5, #0
 8000c12:	44e3      	add	fp, ip
 8000c14:	0223      	lsls	r3, r4, #8
 8000c16:	0e14      	lsrs	r4, r2, #24
 8000c18:	431c      	orrs	r4, r3
 8000c1a:	0c1b      	lsrs	r3, r3, #16
 8000c1c:	4699      	mov	r9, r3
 8000c1e:	0423      	lsls	r3, r4, #16
 8000c20:	0c1f      	lsrs	r7, r3, #16
 8000c22:	0212      	lsls	r2, r2, #8
 8000c24:	4649      	mov	r1, r9
 8000c26:	9200      	str	r2, [sp, #0]
 8000c28:	9701      	str	r7, [sp, #4]
 8000c2a:	f7ff fb0f 	bl	800024c <__aeabi_uidivmod>
 8000c2e:	0002      	movs	r2, r0
 8000c30:	437a      	muls	r2, r7
 8000c32:	040b      	lsls	r3, r1, #16
 8000c34:	0c31      	lsrs	r1, r6, #16
 8000c36:	4680      	mov	r8, r0
 8000c38:	4319      	orrs	r1, r3
 8000c3a:	428a      	cmp	r2, r1
 8000c3c:	d907      	bls.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c3e:	2301      	movs	r3, #1
 8000c40:	425b      	negs	r3, r3
 8000c42:	469c      	mov	ip, r3
 8000c44:	1909      	adds	r1, r1, r4
 8000c46:	44e0      	add	r8, ip
 8000c48:	428c      	cmp	r4, r1
 8000c4a:	d800      	bhi.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c4c:	e207      	b.n	800105e <__aeabi_ddiv+0x53e>
 8000c4e:	1a88      	subs	r0, r1, r2
 8000c50:	4649      	mov	r1, r9
 8000c52:	f7ff fafb 	bl	800024c <__aeabi_uidivmod>
 8000c56:	0409      	lsls	r1, r1, #16
 8000c58:	468c      	mov	ip, r1
 8000c5a:	0431      	lsls	r1, r6, #16
 8000c5c:	4666      	mov	r6, ip
 8000c5e:	9a01      	ldr	r2, [sp, #4]
 8000c60:	0c09      	lsrs	r1, r1, #16
 8000c62:	4342      	muls	r2, r0
 8000c64:	0003      	movs	r3, r0
 8000c66:	4331      	orrs	r1, r6
 8000c68:	428a      	cmp	r2, r1
 8000c6a:	d904      	bls.n	8000c76 <__aeabi_ddiv+0x156>
 8000c6c:	1909      	adds	r1, r1, r4
 8000c6e:	3b01      	subs	r3, #1
 8000c70:	428c      	cmp	r4, r1
 8000c72:	d800      	bhi.n	8000c76 <__aeabi_ddiv+0x156>
 8000c74:	e1ed      	b.n	8001052 <__aeabi_ddiv+0x532>
 8000c76:	1a88      	subs	r0, r1, r2
 8000c78:	4642      	mov	r2, r8
 8000c7a:	0412      	lsls	r2, r2, #16
 8000c7c:	431a      	orrs	r2, r3
 8000c7e:	4690      	mov	r8, r2
 8000c80:	4641      	mov	r1, r8
 8000c82:	9b00      	ldr	r3, [sp, #0]
 8000c84:	040e      	lsls	r6, r1, #16
 8000c86:	0c1b      	lsrs	r3, r3, #16
 8000c88:	001f      	movs	r7, r3
 8000c8a:	9302      	str	r3, [sp, #8]
 8000c8c:	9b00      	ldr	r3, [sp, #0]
 8000c8e:	0c36      	lsrs	r6, r6, #16
 8000c90:	041b      	lsls	r3, r3, #16
 8000c92:	0c19      	lsrs	r1, r3, #16
 8000c94:	000b      	movs	r3, r1
 8000c96:	4373      	muls	r3, r6
 8000c98:	0c12      	lsrs	r2, r2, #16
 8000c9a:	437e      	muls	r6, r7
 8000c9c:	9103      	str	r1, [sp, #12]
 8000c9e:	4351      	muls	r1, r2
 8000ca0:	437a      	muls	r2, r7
 8000ca2:	0c1f      	lsrs	r7, r3, #16
 8000ca4:	46bc      	mov	ip, r7
 8000ca6:	1876      	adds	r6, r6, r1
 8000ca8:	4466      	add	r6, ip
 8000caa:	42b1      	cmp	r1, r6
 8000cac:	d903      	bls.n	8000cb6 <__aeabi_ddiv+0x196>
 8000cae:	2180      	movs	r1, #128	; 0x80
 8000cb0:	0249      	lsls	r1, r1, #9
 8000cb2:	468c      	mov	ip, r1
 8000cb4:	4462      	add	r2, ip
 8000cb6:	0c31      	lsrs	r1, r6, #16
 8000cb8:	188a      	adds	r2, r1, r2
 8000cba:	0431      	lsls	r1, r6, #16
 8000cbc:	041e      	lsls	r6, r3, #16
 8000cbe:	0c36      	lsrs	r6, r6, #16
 8000cc0:	198e      	adds	r6, r1, r6
 8000cc2:	4290      	cmp	r0, r2
 8000cc4:	d302      	bcc.n	8000ccc <__aeabi_ddiv+0x1ac>
 8000cc6:	d112      	bne.n	8000cee <__aeabi_ddiv+0x1ce>
 8000cc8:	42b5      	cmp	r5, r6
 8000cca:	d210      	bcs.n	8000cee <__aeabi_ddiv+0x1ce>
 8000ccc:	4643      	mov	r3, r8
 8000cce:	1e59      	subs	r1, r3, #1
 8000cd0:	9b00      	ldr	r3, [sp, #0]
 8000cd2:	469c      	mov	ip, r3
 8000cd4:	4465      	add	r5, ip
 8000cd6:	001f      	movs	r7, r3
 8000cd8:	429d      	cmp	r5, r3
 8000cda:	419b      	sbcs	r3, r3
 8000cdc:	425b      	negs	r3, r3
 8000cde:	191b      	adds	r3, r3, r4
 8000ce0:	18c0      	adds	r0, r0, r3
 8000ce2:	4284      	cmp	r4, r0
 8000ce4:	d200      	bcs.n	8000ce8 <__aeabi_ddiv+0x1c8>
 8000ce6:	e1a0      	b.n	800102a <__aeabi_ddiv+0x50a>
 8000ce8:	d100      	bne.n	8000cec <__aeabi_ddiv+0x1cc>
 8000cea:	e19b      	b.n	8001024 <__aeabi_ddiv+0x504>
 8000cec:	4688      	mov	r8, r1
 8000cee:	1bae      	subs	r6, r5, r6
 8000cf0:	42b5      	cmp	r5, r6
 8000cf2:	41ad      	sbcs	r5, r5
 8000cf4:	1a80      	subs	r0, r0, r2
 8000cf6:	426d      	negs	r5, r5
 8000cf8:	1b40      	subs	r0, r0, r5
 8000cfa:	4284      	cmp	r4, r0
 8000cfc:	d100      	bne.n	8000d00 <__aeabi_ddiv+0x1e0>
 8000cfe:	e1d5      	b.n	80010ac <__aeabi_ddiv+0x58c>
 8000d00:	4649      	mov	r1, r9
 8000d02:	f7ff faa3 	bl	800024c <__aeabi_uidivmod>
 8000d06:	9a01      	ldr	r2, [sp, #4]
 8000d08:	040b      	lsls	r3, r1, #16
 8000d0a:	4342      	muls	r2, r0
 8000d0c:	0c31      	lsrs	r1, r6, #16
 8000d0e:	0005      	movs	r5, r0
 8000d10:	4319      	orrs	r1, r3
 8000d12:	428a      	cmp	r2, r1
 8000d14:	d900      	bls.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000d16:	e16c      	b.n	8000ff2 <__aeabi_ddiv+0x4d2>
 8000d18:	1a88      	subs	r0, r1, r2
 8000d1a:	4649      	mov	r1, r9
 8000d1c:	f7ff fa96 	bl	800024c <__aeabi_uidivmod>
 8000d20:	9a01      	ldr	r2, [sp, #4]
 8000d22:	0436      	lsls	r6, r6, #16
 8000d24:	4342      	muls	r2, r0
 8000d26:	0409      	lsls	r1, r1, #16
 8000d28:	0c36      	lsrs	r6, r6, #16
 8000d2a:	0003      	movs	r3, r0
 8000d2c:	430e      	orrs	r6, r1
 8000d2e:	42b2      	cmp	r2, r6
 8000d30:	d900      	bls.n	8000d34 <__aeabi_ddiv+0x214>
 8000d32:	e153      	b.n	8000fdc <__aeabi_ddiv+0x4bc>
 8000d34:	9803      	ldr	r0, [sp, #12]
 8000d36:	1ab6      	subs	r6, r6, r2
 8000d38:	0002      	movs	r2, r0
 8000d3a:	042d      	lsls	r5, r5, #16
 8000d3c:	431d      	orrs	r5, r3
 8000d3e:	9f02      	ldr	r7, [sp, #8]
 8000d40:	042b      	lsls	r3, r5, #16
 8000d42:	0c1b      	lsrs	r3, r3, #16
 8000d44:	435a      	muls	r2, r3
 8000d46:	437b      	muls	r3, r7
 8000d48:	469c      	mov	ip, r3
 8000d4a:	0c29      	lsrs	r1, r5, #16
 8000d4c:	4348      	muls	r0, r1
 8000d4e:	0c13      	lsrs	r3, r2, #16
 8000d50:	4484      	add	ip, r0
 8000d52:	4463      	add	r3, ip
 8000d54:	4379      	muls	r1, r7
 8000d56:	4298      	cmp	r0, r3
 8000d58:	d903      	bls.n	8000d62 <__aeabi_ddiv+0x242>
 8000d5a:	2080      	movs	r0, #128	; 0x80
 8000d5c:	0240      	lsls	r0, r0, #9
 8000d5e:	4684      	mov	ip, r0
 8000d60:	4461      	add	r1, ip
 8000d62:	0c18      	lsrs	r0, r3, #16
 8000d64:	0412      	lsls	r2, r2, #16
 8000d66:	041b      	lsls	r3, r3, #16
 8000d68:	0c12      	lsrs	r2, r2, #16
 8000d6a:	1841      	adds	r1, r0, r1
 8000d6c:	189b      	adds	r3, r3, r2
 8000d6e:	428e      	cmp	r6, r1
 8000d70:	d200      	bcs.n	8000d74 <__aeabi_ddiv+0x254>
 8000d72:	e0ff      	b.n	8000f74 <__aeabi_ddiv+0x454>
 8000d74:	d100      	bne.n	8000d78 <__aeabi_ddiv+0x258>
 8000d76:	e0fa      	b.n	8000f6e <__aeabi_ddiv+0x44e>
 8000d78:	2301      	movs	r3, #1
 8000d7a:	431d      	orrs	r5, r3
 8000d7c:	4a49      	ldr	r2, [pc, #292]	; (8000ea4 <__aeabi_ddiv+0x384>)
 8000d7e:	445a      	add	r2, fp
 8000d80:	2a00      	cmp	r2, #0
 8000d82:	dc00      	bgt.n	8000d86 <__aeabi_ddiv+0x266>
 8000d84:	e0aa      	b.n	8000edc <__aeabi_ddiv+0x3bc>
 8000d86:	076b      	lsls	r3, r5, #29
 8000d88:	d000      	beq.n	8000d8c <__aeabi_ddiv+0x26c>
 8000d8a:	e13d      	b.n	8001008 <__aeabi_ddiv+0x4e8>
 8000d8c:	08ed      	lsrs	r5, r5, #3
 8000d8e:	4643      	mov	r3, r8
 8000d90:	01db      	lsls	r3, r3, #7
 8000d92:	d506      	bpl.n	8000da2 <__aeabi_ddiv+0x282>
 8000d94:	4642      	mov	r2, r8
 8000d96:	4b44      	ldr	r3, [pc, #272]	; (8000ea8 <__aeabi_ddiv+0x388>)
 8000d98:	401a      	ands	r2, r3
 8000d9a:	4690      	mov	r8, r2
 8000d9c:	2280      	movs	r2, #128	; 0x80
 8000d9e:	00d2      	lsls	r2, r2, #3
 8000da0:	445a      	add	r2, fp
 8000da2:	4b42      	ldr	r3, [pc, #264]	; (8000eac <__aeabi_ddiv+0x38c>)
 8000da4:	429a      	cmp	r2, r3
 8000da6:	dd00      	ble.n	8000daa <__aeabi_ddiv+0x28a>
 8000da8:	e71f      	b.n	8000bea <__aeabi_ddiv+0xca>
 8000daa:	4643      	mov	r3, r8
 8000dac:	075b      	lsls	r3, r3, #29
 8000dae:	431d      	orrs	r5, r3
 8000db0:	4643      	mov	r3, r8
 8000db2:	0552      	lsls	r2, r2, #21
 8000db4:	025c      	lsls	r4, r3, #9
 8000db6:	0b24      	lsrs	r4, r4, #12
 8000db8:	0d53      	lsrs	r3, r2, #21
 8000dba:	e708      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000dbc:	4652      	mov	r2, sl
 8000dbe:	4322      	orrs	r2, r4
 8000dc0:	d100      	bne.n	8000dc4 <__aeabi_ddiv+0x2a4>
 8000dc2:	e07b      	b.n	8000ebc <__aeabi_ddiv+0x39c>
 8000dc4:	2c00      	cmp	r4, #0
 8000dc6:	d100      	bne.n	8000dca <__aeabi_ddiv+0x2aa>
 8000dc8:	e0fa      	b.n	8000fc0 <__aeabi_ddiv+0x4a0>
 8000dca:	0020      	movs	r0, r4
 8000dcc:	f001 f952 	bl	8002074 <__clzsi2>
 8000dd0:	0002      	movs	r2, r0
 8000dd2:	3a0b      	subs	r2, #11
 8000dd4:	231d      	movs	r3, #29
 8000dd6:	0001      	movs	r1, r0
 8000dd8:	1a9b      	subs	r3, r3, r2
 8000dda:	4652      	mov	r2, sl
 8000ddc:	3908      	subs	r1, #8
 8000dde:	40da      	lsrs	r2, r3
 8000de0:	408c      	lsls	r4, r1
 8000de2:	4314      	orrs	r4, r2
 8000de4:	4652      	mov	r2, sl
 8000de6:	408a      	lsls	r2, r1
 8000de8:	4b31      	ldr	r3, [pc, #196]	; (8000eb0 <__aeabi_ddiv+0x390>)
 8000dea:	4458      	add	r0, fp
 8000dec:	469b      	mov	fp, r3
 8000dee:	4483      	add	fp, r0
 8000df0:	2000      	movs	r0, #0
 8000df2:	e6d5      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000df4:	464b      	mov	r3, r9
 8000df6:	4323      	orrs	r3, r4
 8000df8:	4698      	mov	r8, r3
 8000dfa:	d044      	beq.n	8000e86 <__aeabi_ddiv+0x366>
 8000dfc:	2c00      	cmp	r4, #0
 8000dfe:	d100      	bne.n	8000e02 <__aeabi_ddiv+0x2e2>
 8000e00:	e0ce      	b.n	8000fa0 <__aeabi_ddiv+0x480>
 8000e02:	0020      	movs	r0, r4
 8000e04:	f001 f936 	bl	8002074 <__clzsi2>
 8000e08:	0001      	movs	r1, r0
 8000e0a:	0002      	movs	r2, r0
 8000e0c:	390b      	subs	r1, #11
 8000e0e:	231d      	movs	r3, #29
 8000e10:	1a5b      	subs	r3, r3, r1
 8000e12:	4649      	mov	r1, r9
 8000e14:	0010      	movs	r0, r2
 8000e16:	40d9      	lsrs	r1, r3
 8000e18:	3808      	subs	r0, #8
 8000e1a:	4084      	lsls	r4, r0
 8000e1c:	000b      	movs	r3, r1
 8000e1e:	464d      	mov	r5, r9
 8000e20:	4323      	orrs	r3, r4
 8000e22:	4698      	mov	r8, r3
 8000e24:	4085      	lsls	r5, r0
 8000e26:	4823      	ldr	r0, [pc, #140]	; (8000eb4 <__aeabi_ddiv+0x394>)
 8000e28:	1a83      	subs	r3, r0, r2
 8000e2a:	469b      	mov	fp, r3
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	4699      	mov	r9, r3
 8000e30:	9300      	str	r3, [sp, #0]
 8000e32:	e69a      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e34:	464b      	mov	r3, r9
 8000e36:	4323      	orrs	r3, r4
 8000e38:	4698      	mov	r8, r3
 8000e3a:	d11d      	bne.n	8000e78 <__aeabi_ddiv+0x358>
 8000e3c:	2308      	movs	r3, #8
 8000e3e:	4699      	mov	r9, r3
 8000e40:	3b06      	subs	r3, #6
 8000e42:	2500      	movs	r5, #0
 8000e44:	4683      	mov	fp, r0
 8000e46:	9300      	str	r3, [sp, #0]
 8000e48:	e68f      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e4a:	4652      	mov	r2, sl
 8000e4c:	4322      	orrs	r2, r4
 8000e4e:	d109      	bne.n	8000e64 <__aeabi_ddiv+0x344>
 8000e50:	2302      	movs	r3, #2
 8000e52:	4649      	mov	r1, r9
 8000e54:	4319      	orrs	r1, r3
 8000e56:	4b18      	ldr	r3, [pc, #96]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e58:	4689      	mov	r9, r1
 8000e5a:	469c      	mov	ip, r3
 8000e5c:	2400      	movs	r4, #0
 8000e5e:	2002      	movs	r0, #2
 8000e60:	44e3      	add	fp, ip
 8000e62:	e69d      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e64:	2303      	movs	r3, #3
 8000e66:	464a      	mov	r2, r9
 8000e68:	431a      	orrs	r2, r3
 8000e6a:	4b13      	ldr	r3, [pc, #76]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e6c:	4691      	mov	r9, r2
 8000e6e:	469c      	mov	ip, r3
 8000e70:	4652      	mov	r2, sl
 8000e72:	2003      	movs	r0, #3
 8000e74:	44e3      	add	fp, ip
 8000e76:	e693      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e78:	230c      	movs	r3, #12
 8000e7a:	4699      	mov	r9, r3
 8000e7c:	3b09      	subs	r3, #9
 8000e7e:	46a0      	mov	r8, r4
 8000e80:	4683      	mov	fp, r0
 8000e82:	9300      	str	r3, [sp, #0]
 8000e84:	e671      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e86:	2304      	movs	r3, #4
 8000e88:	4699      	mov	r9, r3
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	469b      	mov	fp, r3
 8000e8e:	3301      	adds	r3, #1
 8000e90:	2500      	movs	r5, #0
 8000e92:	9300      	str	r3, [sp, #0]
 8000e94:	e669      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e96:	46c0      	nop			; (mov r8, r8)
 8000e98:	000007ff 	.word	0x000007ff
 8000e9c:	fffffc01 	.word	0xfffffc01
 8000ea0:	08006da0 	.word	0x08006da0
 8000ea4:	000003ff 	.word	0x000003ff
 8000ea8:	feffffff 	.word	0xfeffffff
 8000eac:	000007fe 	.word	0x000007fe
 8000eb0:	000003f3 	.word	0x000003f3
 8000eb4:	fffffc0d 	.word	0xfffffc0d
 8000eb8:	fffff801 	.word	0xfffff801
 8000ebc:	4649      	mov	r1, r9
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	4319      	orrs	r1, r3
 8000ec2:	4689      	mov	r9, r1
 8000ec4:	2400      	movs	r4, #0
 8000ec6:	2001      	movs	r0, #1
 8000ec8:	e66a      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000eca:	2300      	movs	r3, #0
 8000ecc:	2480      	movs	r4, #128	; 0x80
 8000ece:	469a      	mov	sl, r3
 8000ed0:	2500      	movs	r5, #0
 8000ed2:	4b8a      	ldr	r3, [pc, #552]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000ed4:	0324      	lsls	r4, r4, #12
 8000ed6:	e67a      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000ed8:	2501      	movs	r5, #1
 8000eda:	426d      	negs	r5, r5
 8000edc:	2301      	movs	r3, #1
 8000ede:	1a9b      	subs	r3, r3, r2
 8000ee0:	2b38      	cmp	r3, #56	; 0x38
 8000ee2:	dd00      	ble.n	8000ee6 <__aeabi_ddiv+0x3c6>
 8000ee4:	e670      	b.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000ee6:	2b1f      	cmp	r3, #31
 8000ee8:	dc00      	bgt.n	8000eec <__aeabi_ddiv+0x3cc>
 8000eea:	e0bf      	b.n	800106c <__aeabi_ddiv+0x54c>
 8000eec:	211f      	movs	r1, #31
 8000eee:	4249      	negs	r1, r1
 8000ef0:	1a8a      	subs	r2, r1, r2
 8000ef2:	4641      	mov	r1, r8
 8000ef4:	40d1      	lsrs	r1, r2
 8000ef6:	000a      	movs	r2, r1
 8000ef8:	2b20      	cmp	r3, #32
 8000efa:	d004      	beq.n	8000f06 <__aeabi_ddiv+0x3e6>
 8000efc:	4641      	mov	r1, r8
 8000efe:	4b80      	ldr	r3, [pc, #512]	; (8001100 <__aeabi_ddiv+0x5e0>)
 8000f00:	445b      	add	r3, fp
 8000f02:	4099      	lsls	r1, r3
 8000f04:	430d      	orrs	r5, r1
 8000f06:	1e6b      	subs	r3, r5, #1
 8000f08:	419d      	sbcs	r5, r3
 8000f0a:	2307      	movs	r3, #7
 8000f0c:	432a      	orrs	r2, r5
 8000f0e:	001d      	movs	r5, r3
 8000f10:	2400      	movs	r4, #0
 8000f12:	4015      	ands	r5, r2
 8000f14:	4213      	tst	r3, r2
 8000f16:	d100      	bne.n	8000f1a <__aeabi_ddiv+0x3fa>
 8000f18:	e0d4      	b.n	80010c4 <__aeabi_ddiv+0x5a4>
 8000f1a:	210f      	movs	r1, #15
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	4011      	ands	r1, r2
 8000f20:	2904      	cmp	r1, #4
 8000f22:	d100      	bne.n	8000f26 <__aeabi_ddiv+0x406>
 8000f24:	e0cb      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f26:	1d11      	adds	r1, r2, #4
 8000f28:	4291      	cmp	r1, r2
 8000f2a:	4192      	sbcs	r2, r2
 8000f2c:	4252      	negs	r2, r2
 8000f2e:	189b      	adds	r3, r3, r2
 8000f30:	000a      	movs	r2, r1
 8000f32:	0219      	lsls	r1, r3, #8
 8000f34:	d400      	bmi.n	8000f38 <__aeabi_ddiv+0x418>
 8000f36:	e0c2      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f38:	2301      	movs	r3, #1
 8000f3a:	2400      	movs	r4, #0
 8000f3c:	2500      	movs	r5, #0
 8000f3e:	e646      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f40:	2380      	movs	r3, #128	; 0x80
 8000f42:	4641      	mov	r1, r8
 8000f44:	031b      	lsls	r3, r3, #12
 8000f46:	4219      	tst	r1, r3
 8000f48:	d008      	beq.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4a:	421c      	tst	r4, r3
 8000f4c:	d106      	bne.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4e:	431c      	orrs	r4, r3
 8000f50:	0324      	lsls	r4, r4, #12
 8000f52:	46ba      	mov	sl, r7
 8000f54:	0015      	movs	r5, r2
 8000f56:	4b69      	ldr	r3, [pc, #420]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f58:	0b24      	lsrs	r4, r4, #12
 8000f5a:	e638      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f5c:	2480      	movs	r4, #128	; 0x80
 8000f5e:	4643      	mov	r3, r8
 8000f60:	0324      	lsls	r4, r4, #12
 8000f62:	431c      	orrs	r4, r3
 8000f64:	0324      	lsls	r4, r4, #12
 8000f66:	46b2      	mov	sl, r6
 8000f68:	4b64      	ldr	r3, [pc, #400]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f6a:	0b24      	lsrs	r4, r4, #12
 8000f6c:	e62f      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d100      	bne.n	8000f74 <__aeabi_ddiv+0x454>
 8000f72:	e703      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000f74:	19a6      	adds	r6, r4, r6
 8000f76:	1e68      	subs	r0, r5, #1
 8000f78:	42a6      	cmp	r6, r4
 8000f7a:	d200      	bcs.n	8000f7e <__aeabi_ddiv+0x45e>
 8000f7c:	e08d      	b.n	800109a <__aeabi_ddiv+0x57a>
 8000f7e:	428e      	cmp	r6, r1
 8000f80:	d200      	bcs.n	8000f84 <__aeabi_ddiv+0x464>
 8000f82:	e0a3      	b.n	80010cc <__aeabi_ddiv+0x5ac>
 8000f84:	d100      	bne.n	8000f88 <__aeabi_ddiv+0x468>
 8000f86:	e0b3      	b.n	80010f0 <__aeabi_ddiv+0x5d0>
 8000f88:	0005      	movs	r5, r0
 8000f8a:	e6f5      	b.n	8000d78 <__aeabi_ddiv+0x258>
 8000f8c:	42aa      	cmp	r2, r5
 8000f8e:	d900      	bls.n	8000f92 <__aeabi_ddiv+0x472>
 8000f90:	e639      	b.n	8000c06 <__aeabi_ddiv+0xe6>
 8000f92:	4643      	mov	r3, r8
 8000f94:	07de      	lsls	r6, r3, #31
 8000f96:	0858      	lsrs	r0, r3, #1
 8000f98:	086b      	lsrs	r3, r5, #1
 8000f9a:	431e      	orrs	r6, r3
 8000f9c:	07ed      	lsls	r5, r5, #31
 8000f9e:	e639      	b.n	8000c14 <__aeabi_ddiv+0xf4>
 8000fa0:	4648      	mov	r0, r9
 8000fa2:	f001 f867 	bl	8002074 <__clzsi2>
 8000fa6:	0001      	movs	r1, r0
 8000fa8:	0002      	movs	r2, r0
 8000faa:	3115      	adds	r1, #21
 8000fac:	3220      	adds	r2, #32
 8000fae:	291c      	cmp	r1, #28
 8000fb0:	dc00      	bgt.n	8000fb4 <__aeabi_ddiv+0x494>
 8000fb2:	e72c      	b.n	8000e0e <__aeabi_ddiv+0x2ee>
 8000fb4:	464b      	mov	r3, r9
 8000fb6:	3808      	subs	r0, #8
 8000fb8:	4083      	lsls	r3, r0
 8000fba:	2500      	movs	r5, #0
 8000fbc:	4698      	mov	r8, r3
 8000fbe:	e732      	b.n	8000e26 <__aeabi_ddiv+0x306>
 8000fc0:	f001 f858 	bl	8002074 <__clzsi2>
 8000fc4:	0003      	movs	r3, r0
 8000fc6:	001a      	movs	r2, r3
 8000fc8:	3215      	adds	r2, #21
 8000fca:	3020      	adds	r0, #32
 8000fcc:	2a1c      	cmp	r2, #28
 8000fce:	dc00      	bgt.n	8000fd2 <__aeabi_ddiv+0x4b2>
 8000fd0:	e700      	b.n	8000dd4 <__aeabi_ddiv+0x2b4>
 8000fd2:	4654      	mov	r4, sl
 8000fd4:	3b08      	subs	r3, #8
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	409c      	lsls	r4, r3
 8000fda:	e705      	b.n	8000de8 <__aeabi_ddiv+0x2c8>
 8000fdc:	1936      	adds	r6, r6, r4
 8000fde:	3b01      	subs	r3, #1
 8000fe0:	42b4      	cmp	r4, r6
 8000fe2:	d900      	bls.n	8000fe6 <__aeabi_ddiv+0x4c6>
 8000fe4:	e6a6      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fe6:	42b2      	cmp	r2, r6
 8000fe8:	d800      	bhi.n	8000fec <__aeabi_ddiv+0x4cc>
 8000fea:	e6a3      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fec:	1e83      	subs	r3, r0, #2
 8000fee:	1936      	adds	r6, r6, r4
 8000ff0:	e6a0      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000ff2:	1909      	adds	r1, r1, r4
 8000ff4:	3d01      	subs	r5, #1
 8000ff6:	428c      	cmp	r4, r1
 8000ff8:	d900      	bls.n	8000ffc <__aeabi_ddiv+0x4dc>
 8000ffa:	e68d      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000ffc:	428a      	cmp	r2, r1
 8000ffe:	d800      	bhi.n	8001002 <__aeabi_ddiv+0x4e2>
 8001000:	e68a      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001002:	1e85      	subs	r5, r0, #2
 8001004:	1909      	adds	r1, r1, r4
 8001006:	e687      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001008:	230f      	movs	r3, #15
 800100a:	402b      	ands	r3, r5
 800100c:	2b04      	cmp	r3, #4
 800100e:	d100      	bne.n	8001012 <__aeabi_ddiv+0x4f2>
 8001010:	e6bc      	b.n	8000d8c <__aeabi_ddiv+0x26c>
 8001012:	2305      	movs	r3, #5
 8001014:	425b      	negs	r3, r3
 8001016:	42ab      	cmp	r3, r5
 8001018:	419b      	sbcs	r3, r3
 800101a:	3504      	adds	r5, #4
 800101c:	425b      	negs	r3, r3
 800101e:	08ed      	lsrs	r5, r5, #3
 8001020:	4498      	add	r8, r3
 8001022:	e6b4      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 8001024:	42af      	cmp	r7, r5
 8001026:	d900      	bls.n	800102a <__aeabi_ddiv+0x50a>
 8001028:	e660      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 800102a:	4282      	cmp	r2, r0
 800102c:	d804      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 800102e:	d000      	beq.n	8001032 <__aeabi_ddiv+0x512>
 8001030:	e65c      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001032:	42ae      	cmp	r6, r5
 8001034:	d800      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 8001036:	e659      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001038:	2302      	movs	r3, #2
 800103a:	425b      	negs	r3, r3
 800103c:	469c      	mov	ip, r3
 800103e:	9b00      	ldr	r3, [sp, #0]
 8001040:	44e0      	add	r8, ip
 8001042:	469c      	mov	ip, r3
 8001044:	4465      	add	r5, ip
 8001046:	429d      	cmp	r5, r3
 8001048:	419b      	sbcs	r3, r3
 800104a:	425b      	negs	r3, r3
 800104c:	191b      	adds	r3, r3, r4
 800104e:	18c0      	adds	r0, r0, r3
 8001050:	e64d      	b.n	8000cee <__aeabi_ddiv+0x1ce>
 8001052:	428a      	cmp	r2, r1
 8001054:	d800      	bhi.n	8001058 <__aeabi_ddiv+0x538>
 8001056:	e60e      	b.n	8000c76 <__aeabi_ddiv+0x156>
 8001058:	1e83      	subs	r3, r0, #2
 800105a:	1909      	adds	r1, r1, r4
 800105c:	e60b      	b.n	8000c76 <__aeabi_ddiv+0x156>
 800105e:	428a      	cmp	r2, r1
 8001060:	d800      	bhi.n	8001064 <__aeabi_ddiv+0x544>
 8001062:	e5f4      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 8001064:	1e83      	subs	r3, r0, #2
 8001066:	4698      	mov	r8, r3
 8001068:	1909      	adds	r1, r1, r4
 800106a:	e5f0      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 800106c:	4925      	ldr	r1, [pc, #148]	; (8001104 <__aeabi_ddiv+0x5e4>)
 800106e:	0028      	movs	r0, r5
 8001070:	4459      	add	r1, fp
 8001072:	408d      	lsls	r5, r1
 8001074:	4642      	mov	r2, r8
 8001076:	408a      	lsls	r2, r1
 8001078:	1e69      	subs	r1, r5, #1
 800107a:	418d      	sbcs	r5, r1
 800107c:	4641      	mov	r1, r8
 800107e:	40d8      	lsrs	r0, r3
 8001080:	40d9      	lsrs	r1, r3
 8001082:	4302      	orrs	r2, r0
 8001084:	432a      	orrs	r2, r5
 8001086:	000b      	movs	r3, r1
 8001088:	0751      	lsls	r1, r2, #29
 800108a:	d100      	bne.n	800108e <__aeabi_ddiv+0x56e>
 800108c:	e751      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800108e:	210f      	movs	r1, #15
 8001090:	4011      	ands	r1, r2
 8001092:	2904      	cmp	r1, #4
 8001094:	d000      	beq.n	8001098 <__aeabi_ddiv+0x578>
 8001096:	e746      	b.n	8000f26 <__aeabi_ddiv+0x406>
 8001098:	e74b      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800109a:	0005      	movs	r5, r0
 800109c:	428e      	cmp	r6, r1
 800109e:	d000      	beq.n	80010a2 <__aeabi_ddiv+0x582>
 80010a0:	e66a      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010a2:	9a00      	ldr	r2, [sp, #0]
 80010a4:	4293      	cmp	r3, r2
 80010a6:	d000      	beq.n	80010aa <__aeabi_ddiv+0x58a>
 80010a8:	e666      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010aa:	e667      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 80010ac:	4a16      	ldr	r2, [pc, #88]	; (8001108 <__aeabi_ddiv+0x5e8>)
 80010ae:	445a      	add	r2, fp
 80010b0:	2a00      	cmp	r2, #0
 80010b2:	dc00      	bgt.n	80010b6 <__aeabi_ddiv+0x596>
 80010b4:	e710      	b.n	8000ed8 <__aeabi_ddiv+0x3b8>
 80010b6:	2301      	movs	r3, #1
 80010b8:	2500      	movs	r5, #0
 80010ba:	4498      	add	r8, r3
 80010bc:	e667      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 80010be:	075d      	lsls	r5, r3, #29
 80010c0:	025b      	lsls	r3, r3, #9
 80010c2:	0b1c      	lsrs	r4, r3, #12
 80010c4:	08d2      	lsrs	r2, r2, #3
 80010c6:	2300      	movs	r3, #0
 80010c8:	4315      	orrs	r5, r2
 80010ca:	e580      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010cc:	9800      	ldr	r0, [sp, #0]
 80010ce:	3d02      	subs	r5, #2
 80010d0:	0042      	lsls	r2, r0, #1
 80010d2:	4282      	cmp	r2, r0
 80010d4:	41bf      	sbcs	r7, r7
 80010d6:	427f      	negs	r7, r7
 80010d8:	193c      	adds	r4, r7, r4
 80010da:	1936      	adds	r6, r6, r4
 80010dc:	9200      	str	r2, [sp, #0]
 80010de:	e7dd      	b.n	800109c <__aeabi_ddiv+0x57c>
 80010e0:	2480      	movs	r4, #128	; 0x80
 80010e2:	4643      	mov	r3, r8
 80010e4:	0324      	lsls	r4, r4, #12
 80010e6:	431c      	orrs	r4, r3
 80010e8:	0324      	lsls	r4, r4, #12
 80010ea:	4b04      	ldr	r3, [pc, #16]	; (80010fc <__aeabi_ddiv+0x5dc>)
 80010ec:	0b24      	lsrs	r4, r4, #12
 80010ee:	e56e      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010f0:	9a00      	ldr	r2, [sp, #0]
 80010f2:	429a      	cmp	r2, r3
 80010f4:	d3ea      	bcc.n	80010cc <__aeabi_ddiv+0x5ac>
 80010f6:	0005      	movs	r5, r0
 80010f8:	e7d3      	b.n	80010a2 <__aeabi_ddiv+0x582>
 80010fa:	46c0      	nop			; (mov r8, r8)
 80010fc:	000007ff 	.word	0x000007ff
 8001100:	0000043e 	.word	0x0000043e
 8001104:	0000041e 	.word	0x0000041e
 8001108:	000003ff 	.word	0x000003ff

0800110c <__eqdf2>:
 800110c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800110e:	464e      	mov	r6, r9
 8001110:	4645      	mov	r5, r8
 8001112:	46de      	mov	lr, fp
 8001114:	4657      	mov	r7, sl
 8001116:	4690      	mov	r8, r2
 8001118:	b5e0      	push	{r5, r6, r7, lr}
 800111a:	0017      	movs	r7, r2
 800111c:	031a      	lsls	r2, r3, #12
 800111e:	0b12      	lsrs	r2, r2, #12
 8001120:	0005      	movs	r5, r0
 8001122:	4684      	mov	ip, r0
 8001124:	4819      	ldr	r0, [pc, #100]	; (800118c <__eqdf2+0x80>)
 8001126:	030e      	lsls	r6, r1, #12
 8001128:	004c      	lsls	r4, r1, #1
 800112a:	4691      	mov	r9, r2
 800112c:	005a      	lsls	r2, r3, #1
 800112e:	0fdb      	lsrs	r3, r3, #31
 8001130:	469b      	mov	fp, r3
 8001132:	0b36      	lsrs	r6, r6, #12
 8001134:	0d64      	lsrs	r4, r4, #21
 8001136:	0fc9      	lsrs	r1, r1, #31
 8001138:	0d52      	lsrs	r2, r2, #21
 800113a:	4284      	cmp	r4, r0
 800113c:	d019      	beq.n	8001172 <__eqdf2+0x66>
 800113e:	4282      	cmp	r2, r0
 8001140:	d010      	beq.n	8001164 <__eqdf2+0x58>
 8001142:	2001      	movs	r0, #1
 8001144:	4294      	cmp	r4, r2
 8001146:	d10e      	bne.n	8001166 <__eqdf2+0x5a>
 8001148:	454e      	cmp	r6, r9
 800114a:	d10c      	bne.n	8001166 <__eqdf2+0x5a>
 800114c:	2001      	movs	r0, #1
 800114e:	45c4      	cmp	ip, r8
 8001150:	d109      	bne.n	8001166 <__eqdf2+0x5a>
 8001152:	4559      	cmp	r1, fp
 8001154:	d017      	beq.n	8001186 <__eqdf2+0x7a>
 8001156:	2c00      	cmp	r4, #0
 8001158:	d105      	bne.n	8001166 <__eqdf2+0x5a>
 800115a:	0030      	movs	r0, r6
 800115c:	4328      	orrs	r0, r5
 800115e:	1e43      	subs	r3, r0, #1
 8001160:	4198      	sbcs	r0, r3
 8001162:	e000      	b.n	8001166 <__eqdf2+0x5a>
 8001164:	2001      	movs	r0, #1
 8001166:	bcf0      	pop	{r4, r5, r6, r7}
 8001168:	46bb      	mov	fp, r7
 800116a:	46b2      	mov	sl, r6
 800116c:	46a9      	mov	r9, r5
 800116e:	46a0      	mov	r8, r4
 8001170:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001172:	0033      	movs	r3, r6
 8001174:	2001      	movs	r0, #1
 8001176:	432b      	orrs	r3, r5
 8001178:	d1f5      	bne.n	8001166 <__eqdf2+0x5a>
 800117a:	42a2      	cmp	r2, r4
 800117c:	d1f3      	bne.n	8001166 <__eqdf2+0x5a>
 800117e:	464b      	mov	r3, r9
 8001180:	433b      	orrs	r3, r7
 8001182:	d1f0      	bne.n	8001166 <__eqdf2+0x5a>
 8001184:	e7e2      	b.n	800114c <__eqdf2+0x40>
 8001186:	2000      	movs	r0, #0
 8001188:	e7ed      	b.n	8001166 <__eqdf2+0x5a>
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	000007ff 	.word	0x000007ff

08001190 <__gedf2>:
 8001190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001192:	4647      	mov	r7, r8
 8001194:	46ce      	mov	lr, r9
 8001196:	0004      	movs	r4, r0
 8001198:	0018      	movs	r0, r3
 800119a:	0016      	movs	r6, r2
 800119c:	031b      	lsls	r3, r3, #12
 800119e:	0b1b      	lsrs	r3, r3, #12
 80011a0:	4d2d      	ldr	r5, [pc, #180]	; (8001258 <__gedf2+0xc8>)
 80011a2:	004a      	lsls	r2, r1, #1
 80011a4:	4699      	mov	r9, r3
 80011a6:	b580      	push	{r7, lr}
 80011a8:	0043      	lsls	r3, r0, #1
 80011aa:	030f      	lsls	r7, r1, #12
 80011ac:	46a4      	mov	ip, r4
 80011ae:	46b0      	mov	r8, r6
 80011b0:	0b3f      	lsrs	r7, r7, #12
 80011b2:	0d52      	lsrs	r2, r2, #21
 80011b4:	0fc9      	lsrs	r1, r1, #31
 80011b6:	0d5b      	lsrs	r3, r3, #21
 80011b8:	0fc0      	lsrs	r0, r0, #31
 80011ba:	42aa      	cmp	r2, r5
 80011bc:	d021      	beq.n	8001202 <__gedf2+0x72>
 80011be:	42ab      	cmp	r3, r5
 80011c0:	d013      	beq.n	80011ea <__gedf2+0x5a>
 80011c2:	2a00      	cmp	r2, #0
 80011c4:	d122      	bne.n	800120c <__gedf2+0x7c>
 80011c6:	433c      	orrs	r4, r7
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d102      	bne.n	80011d2 <__gedf2+0x42>
 80011cc:	464d      	mov	r5, r9
 80011ce:	432e      	orrs	r6, r5
 80011d0:	d022      	beq.n	8001218 <__gedf2+0x88>
 80011d2:	2c00      	cmp	r4, #0
 80011d4:	d010      	beq.n	80011f8 <__gedf2+0x68>
 80011d6:	4281      	cmp	r1, r0
 80011d8:	d022      	beq.n	8001220 <__gedf2+0x90>
 80011da:	2002      	movs	r0, #2
 80011dc:	3901      	subs	r1, #1
 80011de:	4008      	ands	r0, r1
 80011e0:	3801      	subs	r0, #1
 80011e2:	bcc0      	pop	{r6, r7}
 80011e4:	46b9      	mov	r9, r7
 80011e6:	46b0      	mov	r8, r6
 80011e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011ea:	464d      	mov	r5, r9
 80011ec:	432e      	orrs	r6, r5
 80011ee:	d129      	bne.n	8001244 <__gedf2+0xb4>
 80011f0:	2a00      	cmp	r2, #0
 80011f2:	d1f0      	bne.n	80011d6 <__gedf2+0x46>
 80011f4:	433c      	orrs	r4, r7
 80011f6:	d1ee      	bne.n	80011d6 <__gedf2+0x46>
 80011f8:	2800      	cmp	r0, #0
 80011fa:	d1f2      	bne.n	80011e2 <__gedf2+0x52>
 80011fc:	2001      	movs	r0, #1
 80011fe:	4240      	negs	r0, r0
 8001200:	e7ef      	b.n	80011e2 <__gedf2+0x52>
 8001202:	003d      	movs	r5, r7
 8001204:	4325      	orrs	r5, r4
 8001206:	d11d      	bne.n	8001244 <__gedf2+0xb4>
 8001208:	4293      	cmp	r3, r2
 800120a:	d0ee      	beq.n	80011ea <__gedf2+0x5a>
 800120c:	2b00      	cmp	r3, #0
 800120e:	d1e2      	bne.n	80011d6 <__gedf2+0x46>
 8001210:	464c      	mov	r4, r9
 8001212:	4326      	orrs	r6, r4
 8001214:	d1df      	bne.n	80011d6 <__gedf2+0x46>
 8001216:	e7e0      	b.n	80011da <__gedf2+0x4a>
 8001218:	2000      	movs	r0, #0
 800121a:	2c00      	cmp	r4, #0
 800121c:	d0e1      	beq.n	80011e2 <__gedf2+0x52>
 800121e:	e7dc      	b.n	80011da <__gedf2+0x4a>
 8001220:	429a      	cmp	r2, r3
 8001222:	dc0a      	bgt.n	800123a <__gedf2+0xaa>
 8001224:	dbe8      	blt.n	80011f8 <__gedf2+0x68>
 8001226:	454f      	cmp	r7, r9
 8001228:	d8d7      	bhi.n	80011da <__gedf2+0x4a>
 800122a:	d00e      	beq.n	800124a <__gedf2+0xba>
 800122c:	2000      	movs	r0, #0
 800122e:	454f      	cmp	r7, r9
 8001230:	d2d7      	bcs.n	80011e2 <__gedf2+0x52>
 8001232:	2900      	cmp	r1, #0
 8001234:	d0e2      	beq.n	80011fc <__gedf2+0x6c>
 8001236:	0008      	movs	r0, r1
 8001238:	e7d3      	b.n	80011e2 <__gedf2+0x52>
 800123a:	4243      	negs	r3, r0
 800123c:	4158      	adcs	r0, r3
 800123e:	0040      	lsls	r0, r0, #1
 8001240:	3801      	subs	r0, #1
 8001242:	e7ce      	b.n	80011e2 <__gedf2+0x52>
 8001244:	2002      	movs	r0, #2
 8001246:	4240      	negs	r0, r0
 8001248:	e7cb      	b.n	80011e2 <__gedf2+0x52>
 800124a:	45c4      	cmp	ip, r8
 800124c:	d8c5      	bhi.n	80011da <__gedf2+0x4a>
 800124e:	2000      	movs	r0, #0
 8001250:	45c4      	cmp	ip, r8
 8001252:	d2c6      	bcs.n	80011e2 <__gedf2+0x52>
 8001254:	e7ed      	b.n	8001232 <__gedf2+0xa2>
 8001256:	46c0      	nop			; (mov r8, r8)
 8001258:	000007ff 	.word	0x000007ff

0800125c <__ledf2>:
 800125c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800125e:	4647      	mov	r7, r8
 8001260:	46ce      	mov	lr, r9
 8001262:	0004      	movs	r4, r0
 8001264:	0018      	movs	r0, r3
 8001266:	0016      	movs	r6, r2
 8001268:	031b      	lsls	r3, r3, #12
 800126a:	0b1b      	lsrs	r3, r3, #12
 800126c:	4d2c      	ldr	r5, [pc, #176]	; (8001320 <__ledf2+0xc4>)
 800126e:	004a      	lsls	r2, r1, #1
 8001270:	4699      	mov	r9, r3
 8001272:	b580      	push	{r7, lr}
 8001274:	0043      	lsls	r3, r0, #1
 8001276:	030f      	lsls	r7, r1, #12
 8001278:	46a4      	mov	ip, r4
 800127a:	46b0      	mov	r8, r6
 800127c:	0b3f      	lsrs	r7, r7, #12
 800127e:	0d52      	lsrs	r2, r2, #21
 8001280:	0fc9      	lsrs	r1, r1, #31
 8001282:	0d5b      	lsrs	r3, r3, #21
 8001284:	0fc0      	lsrs	r0, r0, #31
 8001286:	42aa      	cmp	r2, r5
 8001288:	d00d      	beq.n	80012a6 <__ledf2+0x4a>
 800128a:	42ab      	cmp	r3, r5
 800128c:	d010      	beq.n	80012b0 <__ledf2+0x54>
 800128e:	2a00      	cmp	r2, #0
 8001290:	d127      	bne.n	80012e2 <__ledf2+0x86>
 8001292:	433c      	orrs	r4, r7
 8001294:	2b00      	cmp	r3, #0
 8001296:	d111      	bne.n	80012bc <__ledf2+0x60>
 8001298:	464d      	mov	r5, r9
 800129a:	432e      	orrs	r6, r5
 800129c:	d10e      	bne.n	80012bc <__ledf2+0x60>
 800129e:	2000      	movs	r0, #0
 80012a0:	2c00      	cmp	r4, #0
 80012a2:	d015      	beq.n	80012d0 <__ledf2+0x74>
 80012a4:	e00e      	b.n	80012c4 <__ledf2+0x68>
 80012a6:	003d      	movs	r5, r7
 80012a8:	4325      	orrs	r5, r4
 80012aa:	d110      	bne.n	80012ce <__ledf2+0x72>
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d118      	bne.n	80012e2 <__ledf2+0x86>
 80012b0:	464d      	mov	r5, r9
 80012b2:	432e      	orrs	r6, r5
 80012b4:	d10b      	bne.n	80012ce <__ledf2+0x72>
 80012b6:	2a00      	cmp	r2, #0
 80012b8:	d102      	bne.n	80012c0 <__ledf2+0x64>
 80012ba:	433c      	orrs	r4, r7
 80012bc:	2c00      	cmp	r4, #0
 80012be:	d00b      	beq.n	80012d8 <__ledf2+0x7c>
 80012c0:	4281      	cmp	r1, r0
 80012c2:	d014      	beq.n	80012ee <__ledf2+0x92>
 80012c4:	2002      	movs	r0, #2
 80012c6:	3901      	subs	r1, #1
 80012c8:	4008      	ands	r0, r1
 80012ca:	3801      	subs	r0, #1
 80012cc:	e000      	b.n	80012d0 <__ledf2+0x74>
 80012ce:	2002      	movs	r0, #2
 80012d0:	bcc0      	pop	{r6, r7}
 80012d2:	46b9      	mov	r9, r7
 80012d4:	46b0      	mov	r8, r6
 80012d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012d8:	2800      	cmp	r0, #0
 80012da:	d1f9      	bne.n	80012d0 <__ledf2+0x74>
 80012dc:	2001      	movs	r0, #1
 80012de:	4240      	negs	r0, r0
 80012e0:	e7f6      	b.n	80012d0 <__ledf2+0x74>
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d1ec      	bne.n	80012c0 <__ledf2+0x64>
 80012e6:	464c      	mov	r4, r9
 80012e8:	4326      	orrs	r6, r4
 80012ea:	d1e9      	bne.n	80012c0 <__ledf2+0x64>
 80012ec:	e7ea      	b.n	80012c4 <__ledf2+0x68>
 80012ee:	429a      	cmp	r2, r3
 80012f0:	dd04      	ble.n	80012fc <__ledf2+0xa0>
 80012f2:	4243      	negs	r3, r0
 80012f4:	4158      	adcs	r0, r3
 80012f6:	0040      	lsls	r0, r0, #1
 80012f8:	3801      	subs	r0, #1
 80012fa:	e7e9      	b.n	80012d0 <__ledf2+0x74>
 80012fc:	429a      	cmp	r2, r3
 80012fe:	dbeb      	blt.n	80012d8 <__ledf2+0x7c>
 8001300:	454f      	cmp	r7, r9
 8001302:	d8df      	bhi.n	80012c4 <__ledf2+0x68>
 8001304:	d006      	beq.n	8001314 <__ledf2+0xb8>
 8001306:	2000      	movs	r0, #0
 8001308:	454f      	cmp	r7, r9
 800130a:	d2e1      	bcs.n	80012d0 <__ledf2+0x74>
 800130c:	2900      	cmp	r1, #0
 800130e:	d0e5      	beq.n	80012dc <__ledf2+0x80>
 8001310:	0008      	movs	r0, r1
 8001312:	e7dd      	b.n	80012d0 <__ledf2+0x74>
 8001314:	45c4      	cmp	ip, r8
 8001316:	d8d5      	bhi.n	80012c4 <__ledf2+0x68>
 8001318:	2000      	movs	r0, #0
 800131a:	45c4      	cmp	ip, r8
 800131c:	d2d8      	bcs.n	80012d0 <__ledf2+0x74>
 800131e:	e7f5      	b.n	800130c <__ledf2+0xb0>
 8001320:	000007ff 	.word	0x000007ff

08001324 <__aeabi_dmul>:
 8001324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001326:	4657      	mov	r7, sl
 8001328:	464e      	mov	r6, r9
 800132a:	4645      	mov	r5, r8
 800132c:	46de      	mov	lr, fp
 800132e:	b5e0      	push	{r5, r6, r7, lr}
 8001330:	4698      	mov	r8, r3
 8001332:	030c      	lsls	r4, r1, #12
 8001334:	004b      	lsls	r3, r1, #1
 8001336:	0006      	movs	r6, r0
 8001338:	4692      	mov	sl, r2
 800133a:	b087      	sub	sp, #28
 800133c:	0b24      	lsrs	r4, r4, #12
 800133e:	0d5b      	lsrs	r3, r3, #21
 8001340:	0fcf      	lsrs	r7, r1, #31
 8001342:	2b00      	cmp	r3, #0
 8001344:	d100      	bne.n	8001348 <__aeabi_dmul+0x24>
 8001346:	e15c      	b.n	8001602 <__aeabi_dmul+0x2de>
 8001348:	4ad9      	ldr	r2, [pc, #868]	; (80016b0 <__aeabi_dmul+0x38c>)
 800134a:	4293      	cmp	r3, r2
 800134c:	d100      	bne.n	8001350 <__aeabi_dmul+0x2c>
 800134e:	e175      	b.n	800163c <__aeabi_dmul+0x318>
 8001350:	0f42      	lsrs	r2, r0, #29
 8001352:	00e4      	lsls	r4, r4, #3
 8001354:	4314      	orrs	r4, r2
 8001356:	2280      	movs	r2, #128	; 0x80
 8001358:	0412      	lsls	r2, r2, #16
 800135a:	4314      	orrs	r4, r2
 800135c:	4ad5      	ldr	r2, [pc, #852]	; (80016b4 <__aeabi_dmul+0x390>)
 800135e:	00c5      	lsls	r5, r0, #3
 8001360:	4694      	mov	ip, r2
 8001362:	4463      	add	r3, ip
 8001364:	9300      	str	r3, [sp, #0]
 8001366:	2300      	movs	r3, #0
 8001368:	4699      	mov	r9, r3
 800136a:	469b      	mov	fp, r3
 800136c:	4643      	mov	r3, r8
 800136e:	4642      	mov	r2, r8
 8001370:	031e      	lsls	r6, r3, #12
 8001372:	0fd2      	lsrs	r2, r2, #31
 8001374:	005b      	lsls	r3, r3, #1
 8001376:	4650      	mov	r0, sl
 8001378:	4690      	mov	r8, r2
 800137a:	0b36      	lsrs	r6, r6, #12
 800137c:	0d5b      	lsrs	r3, r3, #21
 800137e:	d100      	bne.n	8001382 <__aeabi_dmul+0x5e>
 8001380:	e120      	b.n	80015c4 <__aeabi_dmul+0x2a0>
 8001382:	4acb      	ldr	r2, [pc, #812]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001384:	4293      	cmp	r3, r2
 8001386:	d100      	bne.n	800138a <__aeabi_dmul+0x66>
 8001388:	e162      	b.n	8001650 <__aeabi_dmul+0x32c>
 800138a:	49ca      	ldr	r1, [pc, #808]	; (80016b4 <__aeabi_dmul+0x390>)
 800138c:	0f42      	lsrs	r2, r0, #29
 800138e:	468c      	mov	ip, r1
 8001390:	9900      	ldr	r1, [sp, #0]
 8001392:	4463      	add	r3, ip
 8001394:	00f6      	lsls	r6, r6, #3
 8001396:	468c      	mov	ip, r1
 8001398:	4316      	orrs	r6, r2
 800139a:	2280      	movs	r2, #128	; 0x80
 800139c:	449c      	add	ip, r3
 800139e:	0412      	lsls	r2, r2, #16
 80013a0:	4663      	mov	r3, ip
 80013a2:	4316      	orrs	r6, r2
 80013a4:	00c2      	lsls	r2, r0, #3
 80013a6:	2000      	movs	r0, #0
 80013a8:	9300      	str	r3, [sp, #0]
 80013aa:	9900      	ldr	r1, [sp, #0]
 80013ac:	4643      	mov	r3, r8
 80013ae:	3101      	adds	r1, #1
 80013b0:	468c      	mov	ip, r1
 80013b2:	4649      	mov	r1, r9
 80013b4:	407b      	eors	r3, r7
 80013b6:	9301      	str	r3, [sp, #4]
 80013b8:	290f      	cmp	r1, #15
 80013ba:	d826      	bhi.n	800140a <__aeabi_dmul+0xe6>
 80013bc:	4bbe      	ldr	r3, [pc, #760]	; (80016b8 <__aeabi_dmul+0x394>)
 80013be:	0089      	lsls	r1, r1, #2
 80013c0:	5859      	ldr	r1, [r3, r1]
 80013c2:	468f      	mov	pc, r1
 80013c4:	4643      	mov	r3, r8
 80013c6:	9301      	str	r3, [sp, #4]
 80013c8:	0034      	movs	r4, r6
 80013ca:	0015      	movs	r5, r2
 80013cc:	4683      	mov	fp, r0
 80013ce:	465b      	mov	r3, fp
 80013d0:	2b02      	cmp	r3, #2
 80013d2:	d016      	beq.n	8001402 <__aeabi_dmul+0xde>
 80013d4:	2b03      	cmp	r3, #3
 80013d6:	d100      	bne.n	80013da <__aeabi_dmul+0xb6>
 80013d8:	e203      	b.n	80017e2 <__aeabi_dmul+0x4be>
 80013da:	2b01      	cmp	r3, #1
 80013dc:	d000      	beq.n	80013e0 <__aeabi_dmul+0xbc>
 80013de:	e0cd      	b.n	800157c <__aeabi_dmul+0x258>
 80013e0:	2200      	movs	r2, #0
 80013e2:	2400      	movs	r4, #0
 80013e4:	2500      	movs	r5, #0
 80013e6:	9b01      	ldr	r3, [sp, #4]
 80013e8:	0512      	lsls	r2, r2, #20
 80013ea:	4322      	orrs	r2, r4
 80013ec:	07db      	lsls	r3, r3, #31
 80013ee:	431a      	orrs	r2, r3
 80013f0:	0028      	movs	r0, r5
 80013f2:	0011      	movs	r1, r2
 80013f4:	b007      	add	sp, #28
 80013f6:	bcf0      	pop	{r4, r5, r6, r7}
 80013f8:	46bb      	mov	fp, r7
 80013fa:	46b2      	mov	sl, r6
 80013fc:	46a9      	mov	r9, r5
 80013fe:	46a0      	mov	r8, r4
 8001400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001402:	2400      	movs	r4, #0
 8001404:	2500      	movs	r5, #0
 8001406:	4aaa      	ldr	r2, [pc, #680]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001408:	e7ed      	b.n	80013e6 <__aeabi_dmul+0xc2>
 800140a:	0c28      	lsrs	r0, r5, #16
 800140c:	042d      	lsls	r5, r5, #16
 800140e:	0c2d      	lsrs	r5, r5, #16
 8001410:	002b      	movs	r3, r5
 8001412:	0c11      	lsrs	r1, r2, #16
 8001414:	0412      	lsls	r2, r2, #16
 8001416:	0c12      	lsrs	r2, r2, #16
 8001418:	4353      	muls	r3, r2
 800141a:	4698      	mov	r8, r3
 800141c:	0013      	movs	r3, r2
 800141e:	002f      	movs	r7, r5
 8001420:	4343      	muls	r3, r0
 8001422:	4699      	mov	r9, r3
 8001424:	434f      	muls	r7, r1
 8001426:	444f      	add	r7, r9
 8001428:	46bb      	mov	fp, r7
 800142a:	4647      	mov	r7, r8
 800142c:	000b      	movs	r3, r1
 800142e:	0c3f      	lsrs	r7, r7, #16
 8001430:	46ba      	mov	sl, r7
 8001432:	4343      	muls	r3, r0
 8001434:	44da      	add	sl, fp
 8001436:	9302      	str	r3, [sp, #8]
 8001438:	45d1      	cmp	r9, sl
 800143a:	d904      	bls.n	8001446 <__aeabi_dmul+0x122>
 800143c:	2780      	movs	r7, #128	; 0x80
 800143e:	027f      	lsls	r7, r7, #9
 8001440:	46b9      	mov	r9, r7
 8001442:	444b      	add	r3, r9
 8001444:	9302      	str	r3, [sp, #8]
 8001446:	4653      	mov	r3, sl
 8001448:	0c1b      	lsrs	r3, r3, #16
 800144a:	469b      	mov	fp, r3
 800144c:	4653      	mov	r3, sl
 800144e:	041f      	lsls	r7, r3, #16
 8001450:	4643      	mov	r3, r8
 8001452:	041b      	lsls	r3, r3, #16
 8001454:	0c1b      	lsrs	r3, r3, #16
 8001456:	4698      	mov	r8, r3
 8001458:	003b      	movs	r3, r7
 800145a:	4443      	add	r3, r8
 800145c:	9304      	str	r3, [sp, #16]
 800145e:	0c33      	lsrs	r3, r6, #16
 8001460:	0436      	lsls	r6, r6, #16
 8001462:	0c36      	lsrs	r6, r6, #16
 8001464:	4698      	mov	r8, r3
 8001466:	0033      	movs	r3, r6
 8001468:	4343      	muls	r3, r0
 800146a:	4699      	mov	r9, r3
 800146c:	4643      	mov	r3, r8
 800146e:	4343      	muls	r3, r0
 8001470:	002f      	movs	r7, r5
 8001472:	469a      	mov	sl, r3
 8001474:	4643      	mov	r3, r8
 8001476:	4377      	muls	r7, r6
 8001478:	435d      	muls	r5, r3
 800147a:	0c38      	lsrs	r0, r7, #16
 800147c:	444d      	add	r5, r9
 800147e:	1945      	adds	r5, r0, r5
 8001480:	45a9      	cmp	r9, r5
 8001482:	d903      	bls.n	800148c <__aeabi_dmul+0x168>
 8001484:	2380      	movs	r3, #128	; 0x80
 8001486:	025b      	lsls	r3, r3, #9
 8001488:	4699      	mov	r9, r3
 800148a:	44ca      	add	sl, r9
 800148c:	043f      	lsls	r7, r7, #16
 800148e:	0c28      	lsrs	r0, r5, #16
 8001490:	0c3f      	lsrs	r7, r7, #16
 8001492:	042d      	lsls	r5, r5, #16
 8001494:	19ed      	adds	r5, r5, r7
 8001496:	0c27      	lsrs	r7, r4, #16
 8001498:	0424      	lsls	r4, r4, #16
 800149a:	0c24      	lsrs	r4, r4, #16
 800149c:	0003      	movs	r3, r0
 800149e:	0020      	movs	r0, r4
 80014a0:	4350      	muls	r0, r2
 80014a2:	437a      	muls	r2, r7
 80014a4:	4691      	mov	r9, r2
 80014a6:	003a      	movs	r2, r7
 80014a8:	4453      	add	r3, sl
 80014aa:	9305      	str	r3, [sp, #20]
 80014ac:	0c03      	lsrs	r3, r0, #16
 80014ae:	469a      	mov	sl, r3
 80014b0:	434a      	muls	r2, r1
 80014b2:	4361      	muls	r1, r4
 80014b4:	4449      	add	r1, r9
 80014b6:	4451      	add	r1, sl
 80014b8:	44ab      	add	fp, r5
 80014ba:	4589      	cmp	r9, r1
 80014bc:	d903      	bls.n	80014c6 <__aeabi_dmul+0x1a2>
 80014be:	2380      	movs	r3, #128	; 0x80
 80014c0:	025b      	lsls	r3, r3, #9
 80014c2:	4699      	mov	r9, r3
 80014c4:	444a      	add	r2, r9
 80014c6:	0400      	lsls	r0, r0, #16
 80014c8:	0c0b      	lsrs	r3, r1, #16
 80014ca:	0c00      	lsrs	r0, r0, #16
 80014cc:	0409      	lsls	r1, r1, #16
 80014ce:	1809      	adds	r1, r1, r0
 80014d0:	0020      	movs	r0, r4
 80014d2:	4699      	mov	r9, r3
 80014d4:	4643      	mov	r3, r8
 80014d6:	4370      	muls	r0, r6
 80014d8:	435c      	muls	r4, r3
 80014da:	437e      	muls	r6, r7
 80014dc:	435f      	muls	r7, r3
 80014de:	0c03      	lsrs	r3, r0, #16
 80014e0:	4698      	mov	r8, r3
 80014e2:	19a4      	adds	r4, r4, r6
 80014e4:	4444      	add	r4, r8
 80014e6:	444a      	add	r2, r9
 80014e8:	9703      	str	r7, [sp, #12]
 80014ea:	42a6      	cmp	r6, r4
 80014ec:	d904      	bls.n	80014f8 <__aeabi_dmul+0x1d4>
 80014ee:	2380      	movs	r3, #128	; 0x80
 80014f0:	025b      	lsls	r3, r3, #9
 80014f2:	4698      	mov	r8, r3
 80014f4:	4447      	add	r7, r8
 80014f6:	9703      	str	r7, [sp, #12]
 80014f8:	0423      	lsls	r3, r4, #16
 80014fa:	9e02      	ldr	r6, [sp, #8]
 80014fc:	469a      	mov	sl, r3
 80014fe:	9b05      	ldr	r3, [sp, #20]
 8001500:	445e      	add	r6, fp
 8001502:	4698      	mov	r8, r3
 8001504:	42ae      	cmp	r6, r5
 8001506:	41ad      	sbcs	r5, r5
 8001508:	1876      	adds	r6, r6, r1
 800150a:	428e      	cmp	r6, r1
 800150c:	4189      	sbcs	r1, r1
 800150e:	0400      	lsls	r0, r0, #16
 8001510:	0c00      	lsrs	r0, r0, #16
 8001512:	4450      	add	r0, sl
 8001514:	4440      	add	r0, r8
 8001516:	426d      	negs	r5, r5
 8001518:	1947      	adds	r7, r0, r5
 800151a:	46b8      	mov	r8, r7
 800151c:	4693      	mov	fp, r2
 800151e:	4249      	negs	r1, r1
 8001520:	4689      	mov	r9, r1
 8001522:	44c3      	add	fp, r8
 8001524:	44d9      	add	r9, fp
 8001526:	4298      	cmp	r0, r3
 8001528:	4180      	sbcs	r0, r0
 800152a:	45a8      	cmp	r8, r5
 800152c:	41ad      	sbcs	r5, r5
 800152e:	4593      	cmp	fp, r2
 8001530:	4192      	sbcs	r2, r2
 8001532:	4589      	cmp	r9, r1
 8001534:	4189      	sbcs	r1, r1
 8001536:	426d      	negs	r5, r5
 8001538:	4240      	negs	r0, r0
 800153a:	4328      	orrs	r0, r5
 800153c:	0c24      	lsrs	r4, r4, #16
 800153e:	4252      	negs	r2, r2
 8001540:	4249      	negs	r1, r1
 8001542:	430a      	orrs	r2, r1
 8001544:	9b03      	ldr	r3, [sp, #12]
 8001546:	1900      	adds	r0, r0, r4
 8001548:	1880      	adds	r0, r0, r2
 800154a:	18c7      	adds	r7, r0, r3
 800154c:	464b      	mov	r3, r9
 800154e:	0ddc      	lsrs	r4, r3, #23
 8001550:	9b04      	ldr	r3, [sp, #16]
 8001552:	0275      	lsls	r5, r6, #9
 8001554:	431d      	orrs	r5, r3
 8001556:	1e6a      	subs	r2, r5, #1
 8001558:	4195      	sbcs	r5, r2
 800155a:	464b      	mov	r3, r9
 800155c:	0df6      	lsrs	r6, r6, #23
 800155e:	027f      	lsls	r7, r7, #9
 8001560:	4335      	orrs	r5, r6
 8001562:	025a      	lsls	r2, r3, #9
 8001564:	433c      	orrs	r4, r7
 8001566:	4315      	orrs	r5, r2
 8001568:	01fb      	lsls	r3, r7, #7
 800156a:	d400      	bmi.n	800156e <__aeabi_dmul+0x24a>
 800156c:	e11c      	b.n	80017a8 <__aeabi_dmul+0x484>
 800156e:	2101      	movs	r1, #1
 8001570:	086a      	lsrs	r2, r5, #1
 8001572:	400d      	ands	r5, r1
 8001574:	4315      	orrs	r5, r2
 8001576:	07e2      	lsls	r2, r4, #31
 8001578:	4315      	orrs	r5, r2
 800157a:	0864      	lsrs	r4, r4, #1
 800157c:	494f      	ldr	r1, [pc, #316]	; (80016bc <__aeabi_dmul+0x398>)
 800157e:	4461      	add	r1, ip
 8001580:	2900      	cmp	r1, #0
 8001582:	dc00      	bgt.n	8001586 <__aeabi_dmul+0x262>
 8001584:	e0b0      	b.n	80016e8 <__aeabi_dmul+0x3c4>
 8001586:	076b      	lsls	r3, r5, #29
 8001588:	d009      	beq.n	800159e <__aeabi_dmul+0x27a>
 800158a:	220f      	movs	r2, #15
 800158c:	402a      	ands	r2, r5
 800158e:	2a04      	cmp	r2, #4
 8001590:	d005      	beq.n	800159e <__aeabi_dmul+0x27a>
 8001592:	1d2a      	adds	r2, r5, #4
 8001594:	42aa      	cmp	r2, r5
 8001596:	41ad      	sbcs	r5, r5
 8001598:	426d      	negs	r5, r5
 800159a:	1964      	adds	r4, r4, r5
 800159c:	0015      	movs	r5, r2
 800159e:	01e3      	lsls	r3, r4, #7
 80015a0:	d504      	bpl.n	80015ac <__aeabi_dmul+0x288>
 80015a2:	2180      	movs	r1, #128	; 0x80
 80015a4:	4a46      	ldr	r2, [pc, #280]	; (80016c0 <__aeabi_dmul+0x39c>)
 80015a6:	00c9      	lsls	r1, r1, #3
 80015a8:	4014      	ands	r4, r2
 80015aa:	4461      	add	r1, ip
 80015ac:	4a45      	ldr	r2, [pc, #276]	; (80016c4 <__aeabi_dmul+0x3a0>)
 80015ae:	4291      	cmp	r1, r2
 80015b0:	dd00      	ble.n	80015b4 <__aeabi_dmul+0x290>
 80015b2:	e726      	b.n	8001402 <__aeabi_dmul+0xde>
 80015b4:	0762      	lsls	r2, r4, #29
 80015b6:	08ed      	lsrs	r5, r5, #3
 80015b8:	0264      	lsls	r4, r4, #9
 80015ba:	0549      	lsls	r1, r1, #21
 80015bc:	4315      	orrs	r5, r2
 80015be:	0b24      	lsrs	r4, r4, #12
 80015c0:	0d4a      	lsrs	r2, r1, #21
 80015c2:	e710      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80015c4:	4652      	mov	r2, sl
 80015c6:	4332      	orrs	r2, r6
 80015c8:	d100      	bne.n	80015cc <__aeabi_dmul+0x2a8>
 80015ca:	e07f      	b.n	80016cc <__aeabi_dmul+0x3a8>
 80015cc:	2e00      	cmp	r6, #0
 80015ce:	d100      	bne.n	80015d2 <__aeabi_dmul+0x2ae>
 80015d0:	e0dc      	b.n	800178c <__aeabi_dmul+0x468>
 80015d2:	0030      	movs	r0, r6
 80015d4:	f000 fd4e 	bl	8002074 <__clzsi2>
 80015d8:	0002      	movs	r2, r0
 80015da:	3a0b      	subs	r2, #11
 80015dc:	231d      	movs	r3, #29
 80015de:	0001      	movs	r1, r0
 80015e0:	1a9b      	subs	r3, r3, r2
 80015e2:	4652      	mov	r2, sl
 80015e4:	3908      	subs	r1, #8
 80015e6:	40da      	lsrs	r2, r3
 80015e8:	408e      	lsls	r6, r1
 80015ea:	4316      	orrs	r6, r2
 80015ec:	4652      	mov	r2, sl
 80015ee:	408a      	lsls	r2, r1
 80015f0:	9b00      	ldr	r3, [sp, #0]
 80015f2:	4935      	ldr	r1, [pc, #212]	; (80016c8 <__aeabi_dmul+0x3a4>)
 80015f4:	1a18      	subs	r0, r3, r0
 80015f6:	0003      	movs	r3, r0
 80015f8:	468c      	mov	ip, r1
 80015fa:	4463      	add	r3, ip
 80015fc:	2000      	movs	r0, #0
 80015fe:	9300      	str	r3, [sp, #0]
 8001600:	e6d3      	b.n	80013aa <__aeabi_dmul+0x86>
 8001602:	0025      	movs	r5, r4
 8001604:	4305      	orrs	r5, r0
 8001606:	d04a      	beq.n	800169e <__aeabi_dmul+0x37a>
 8001608:	2c00      	cmp	r4, #0
 800160a:	d100      	bne.n	800160e <__aeabi_dmul+0x2ea>
 800160c:	e0b0      	b.n	8001770 <__aeabi_dmul+0x44c>
 800160e:	0020      	movs	r0, r4
 8001610:	f000 fd30 	bl	8002074 <__clzsi2>
 8001614:	0001      	movs	r1, r0
 8001616:	0002      	movs	r2, r0
 8001618:	390b      	subs	r1, #11
 800161a:	231d      	movs	r3, #29
 800161c:	0010      	movs	r0, r2
 800161e:	1a5b      	subs	r3, r3, r1
 8001620:	0031      	movs	r1, r6
 8001622:	0035      	movs	r5, r6
 8001624:	3808      	subs	r0, #8
 8001626:	4084      	lsls	r4, r0
 8001628:	40d9      	lsrs	r1, r3
 800162a:	4085      	lsls	r5, r0
 800162c:	430c      	orrs	r4, r1
 800162e:	4826      	ldr	r0, [pc, #152]	; (80016c8 <__aeabi_dmul+0x3a4>)
 8001630:	1a83      	subs	r3, r0, r2
 8001632:	9300      	str	r3, [sp, #0]
 8001634:	2300      	movs	r3, #0
 8001636:	4699      	mov	r9, r3
 8001638:	469b      	mov	fp, r3
 800163a:	e697      	b.n	800136c <__aeabi_dmul+0x48>
 800163c:	0005      	movs	r5, r0
 800163e:	4325      	orrs	r5, r4
 8001640:	d126      	bne.n	8001690 <__aeabi_dmul+0x36c>
 8001642:	2208      	movs	r2, #8
 8001644:	9300      	str	r3, [sp, #0]
 8001646:	2302      	movs	r3, #2
 8001648:	2400      	movs	r4, #0
 800164a:	4691      	mov	r9, r2
 800164c:	469b      	mov	fp, r3
 800164e:	e68d      	b.n	800136c <__aeabi_dmul+0x48>
 8001650:	4652      	mov	r2, sl
 8001652:	9b00      	ldr	r3, [sp, #0]
 8001654:	4332      	orrs	r2, r6
 8001656:	d110      	bne.n	800167a <__aeabi_dmul+0x356>
 8001658:	4915      	ldr	r1, [pc, #84]	; (80016b0 <__aeabi_dmul+0x38c>)
 800165a:	2600      	movs	r6, #0
 800165c:	468c      	mov	ip, r1
 800165e:	4463      	add	r3, ip
 8001660:	4649      	mov	r1, r9
 8001662:	9300      	str	r3, [sp, #0]
 8001664:	2302      	movs	r3, #2
 8001666:	4319      	orrs	r1, r3
 8001668:	4689      	mov	r9, r1
 800166a:	2002      	movs	r0, #2
 800166c:	e69d      	b.n	80013aa <__aeabi_dmul+0x86>
 800166e:	465b      	mov	r3, fp
 8001670:	9701      	str	r7, [sp, #4]
 8001672:	2b02      	cmp	r3, #2
 8001674:	d000      	beq.n	8001678 <__aeabi_dmul+0x354>
 8001676:	e6ad      	b.n	80013d4 <__aeabi_dmul+0xb0>
 8001678:	e6c3      	b.n	8001402 <__aeabi_dmul+0xde>
 800167a:	4a0d      	ldr	r2, [pc, #52]	; (80016b0 <__aeabi_dmul+0x38c>)
 800167c:	2003      	movs	r0, #3
 800167e:	4694      	mov	ip, r2
 8001680:	4463      	add	r3, ip
 8001682:	464a      	mov	r2, r9
 8001684:	9300      	str	r3, [sp, #0]
 8001686:	2303      	movs	r3, #3
 8001688:	431a      	orrs	r2, r3
 800168a:	4691      	mov	r9, r2
 800168c:	4652      	mov	r2, sl
 800168e:	e68c      	b.n	80013aa <__aeabi_dmul+0x86>
 8001690:	220c      	movs	r2, #12
 8001692:	9300      	str	r3, [sp, #0]
 8001694:	2303      	movs	r3, #3
 8001696:	0005      	movs	r5, r0
 8001698:	4691      	mov	r9, r2
 800169a:	469b      	mov	fp, r3
 800169c:	e666      	b.n	800136c <__aeabi_dmul+0x48>
 800169e:	2304      	movs	r3, #4
 80016a0:	4699      	mov	r9, r3
 80016a2:	2300      	movs	r3, #0
 80016a4:	9300      	str	r3, [sp, #0]
 80016a6:	3301      	adds	r3, #1
 80016a8:	2400      	movs	r4, #0
 80016aa:	469b      	mov	fp, r3
 80016ac:	e65e      	b.n	800136c <__aeabi_dmul+0x48>
 80016ae:	46c0      	nop			; (mov r8, r8)
 80016b0:	000007ff 	.word	0x000007ff
 80016b4:	fffffc01 	.word	0xfffffc01
 80016b8:	08006de0 	.word	0x08006de0
 80016bc:	000003ff 	.word	0x000003ff
 80016c0:	feffffff 	.word	0xfeffffff
 80016c4:	000007fe 	.word	0x000007fe
 80016c8:	fffffc0d 	.word	0xfffffc0d
 80016cc:	4649      	mov	r1, r9
 80016ce:	2301      	movs	r3, #1
 80016d0:	4319      	orrs	r1, r3
 80016d2:	4689      	mov	r9, r1
 80016d4:	2600      	movs	r6, #0
 80016d6:	2001      	movs	r0, #1
 80016d8:	e667      	b.n	80013aa <__aeabi_dmul+0x86>
 80016da:	2300      	movs	r3, #0
 80016dc:	2480      	movs	r4, #128	; 0x80
 80016de:	2500      	movs	r5, #0
 80016e0:	4a43      	ldr	r2, [pc, #268]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80016e2:	9301      	str	r3, [sp, #4]
 80016e4:	0324      	lsls	r4, r4, #12
 80016e6:	e67e      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80016e8:	2001      	movs	r0, #1
 80016ea:	1a40      	subs	r0, r0, r1
 80016ec:	2838      	cmp	r0, #56	; 0x38
 80016ee:	dd00      	ble.n	80016f2 <__aeabi_dmul+0x3ce>
 80016f0:	e676      	b.n	80013e0 <__aeabi_dmul+0xbc>
 80016f2:	281f      	cmp	r0, #31
 80016f4:	dd5b      	ble.n	80017ae <__aeabi_dmul+0x48a>
 80016f6:	221f      	movs	r2, #31
 80016f8:	0023      	movs	r3, r4
 80016fa:	4252      	negs	r2, r2
 80016fc:	1a51      	subs	r1, r2, r1
 80016fe:	40cb      	lsrs	r3, r1
 8001700:	0019      	movs	r1, r3
 8001702:	2820      	cmp	r0, #32
 8001704:	d003      	beq.n	800170e <__aeabi_dmul+0x3ea>
 8001706:	4a3b      	ldr	r2, [pc, #236]	; (80017f4 <__aeabi_dmul+0x4d0>)
 8001708:	4462      	add	r2, ip
 800170a:	4094      	lsls	r4, r2
 800170c:	4325      	orrs	r5, r4
 800170e:	1e6a      	subs	r2, r5, #1
 8001710:	4195      	sbcs	r5, r2
 8001712:	002a      	movs	r2, r5
 8001714:	430a      	orrs	r2, r1
 8001716:	2107      	movs	r1, #7
 8001718:	000d      	movs	r5, r1
 800171a:	2400      	movs	r4, #0
 800171c:	4015      	ands	r5, r2
 800171e:	4211      	tst	r1, r2
 8001720:	d05b      	beq.n	80017da <__aeabi_dmul+0x4b6>
 8001722:	210f      	movs	r1, #15
 8001724:	2400      	movs	r4, #0
 8001726:	4011      	ands	r1, r2
 8001728:	2904      	cmp	r1, #4
 800172a:	d053      	beq.n	80017d4 <__aeabi_dmul+0x4b0>
 800172c:	1d11      	adds	r1, r2, #4
 800172e:	4291      	cmp	r1, r2
 8001730:	4192      	sbcs	r2, r2
 8001732:	4252      	negs	r2, r2
 8001734:	18a4      	adds	r4, r4, r2
 8001736:	000a      	movs	r2, r1
 8001738:	0223      	lsls	r3, r4, #8
 800173a:	d54b      	bpl.n	80017d4 <__aeabi_dmul+0x4b0>
 800173c:	2201      	movs	r2, #1
 800173e:	2400      	movs	r4, #0
 8001740:	2500      	movs	r5, #0
 8001742:	e650      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001744:	2380      	movs	r3, #128	; 0x80
 8001746:	031b      	lsls	r3, r3, #12
 8001748:	421c      	tst	r4, r3
 800174a:	d009      	beq.n	8001760 <__aeabi_dmul+0x43c>
 800174c:	421e      	tst	r6, r3
 800174e:	d107      	bne.n	8001760 <__aeabi_dmul+0x43c>
 8001750:	4333      	orrs	r3, r6
 8001752:	031c      	lsls	r4, r3, #12
 8001754:	4643      	mov	r3, r8
 8001756:	0015      	movs	r5, r2
 8001758:	0b24      	lsrs	r4, r4, #12
 800175a:	4a25      	ldr	r2, [pc, #148]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800175c:	9301      	str	r3, [sp, #4]
 800175e:	e642      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001760:	2280      	movs	r2, #128	; 0x80
 8001762:	0312      	lsls	r2, r2, #12
 8001764:	4314      	orrs	r4, r2
 8001766:	0324      	lsls	r4, r4, #12
 8001768:	4a21      	ldr	r2, [pc, #132]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800176a:	0b24      	lsrs	r4, r4, #12
 800176c:	9701      	str	r7, [sp, #4]
 800176e:	e63a      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001770:	f000 fc80 	bl	8002074 <__clzsi2>
 8001774:	0001      	movs	r1, r0
 8001776:	0002      	movs	r2, r0
 8001778:	3115      	adds	r1, #21
 800177a:	3220      	adds	r2, #32
 800177c:	291c      	cmp	r1, #28
 800177e:	dc00      	bgt.n	8001782 <__aeabi_dmul+0x45e>
 8001780:	e74b      	b.n	800161a <__aeabi_dmul+0x2f6>
 8001782:	0034      	movs	r4, r6
 8001784:	3808      	subs	r0, #8
 8001786:	2500      	movs	r5, #0
 8001788:	4084      	lsls	r4, r0
 800178a:	e750      	b.n	800162e <__aeabi_dmul+0x30a>
 800178c:	f000 fc72 	bl	8002074 <__clzsi2>
 8001790:	0003      	movs	r3, r0
 8001792:	001a      	movs	r2, r3
 8001794:	3215      	adds	r2, #21
 8001796:	3020      	adds	r0, #32
 8001798:	2a1c      	cmp	r2, #28
 800179a:	dc00      	bgt.n	800179e <__aeabi_dmul+0x47a>
 800179c:	e71e      	b.n	80015dc <__aeabi_dmul+0x2b8>
 800179e:	4656      	mov	r6, sl
 80017a0:	3b08      	subs	r3, #8
 80017a2:	2200      	movs	r2, #0
 80017a4:	409e      	lsls	r6, r3
 80017a6:	e723      	b.n	80015f0 <__aeabi_dmul+0x2cc>
 80017a8:	9b00      	ldr	r3, [sp, #0]
 80017aa:	469c      	mov	ip, r3
 80017ac:	e6e6      	b.n	800157c <__aeabi_dmul+0x258>
 80017ae:	4912      	ldr	r1, [pc, #72]	; (80017f8 <__aeabi_dmul+0x4d4>)
 80017b0:	0022      	movs	r2, r4
 80017b2:	4461      	add	r1, ip
 80017b4:	002e      	movs	r6, r5
 80017b6:	408d      	lsls	r5, r1
 80017b8:	408a      	lsls	r2, r1
 80017ba:	40c6      	lsrs	r6, r0
 80017bc:	1e69      	subs	r1, r5, #1
 80017be:	418d      	sbcs	r5, r1
 80017c0:	4332      	orrs	r2, r6
 80017c2:	432a      	orrs	r2, r5
 80017c4:	40c4      	lsrs	r4, r0
 80017c6:	0753      	lsls	r3, r2, #29
 80017c8:	d0b6      	beq.n	8001738 <__aeabi_dmul+0x414>
 80017ca:	210f      	movs	r1, #15
 80017cc:	4011      	ands	r1, r2
 80017ce:	2904      	cmp	r1, #4
 80017d0:	d1ac      	bne.n	800172c <__aeabi_dmul+0x408>
 80017d2:	e7b1      	b.n	8001738 <__aeabi_dmul+0x414>
 80017d4:	0765      	lsls	r5, r4, #29
 80017d6:	0264      	lsls	r4, r4, #9
 80017d8:	0b24      	lsrs	r4, r4, #12
 80017da:	08d2      	lsrs	r2, r2, #3
 80017dc:	4315      	orrs	r5, r2
 80017de:	2200      	movs	r2, #0
 80017e0:	e601      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017e2:	2280      	movs	r2, #128	; 0x80
 80017e4:	0312      	lsls	r2, r2, #12
 80017e6:	4314      	orrs	r4, r2
 80017e8:	0324      	lsls	r4, r4, #12
 80017ea:	4a01      	ldr	r2, [pc, #4]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80017ec:	0b24      	lsrs	r4, r4, #12
 80017ee:	e5fa      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017f0:	000007ff 	.word	0x000007ff
 80017f4:	0000043e 	.word	0x0000043e
 80017f8:	0000041e 	.word	0x0000041e

080017fc <__aeabi_dsub>:
 80017fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017fe:	4657      	mov	r7, sl
 8001800:	464e      	mov	r6, r9
 8001802:	4645      	mov	r5, r8
 8001804:	46de      	mov	lr, fp
 8001806:	b5e0      	push	{r5, r6, r7, lr}
 8001808:	001e      	movs	r6, r3
 800180a:	0017      	movs	r7, r2
 800180c:	004a      	lsls	r2, r1, #1
 800180e:	030b      	lsls	r3, r1, #12
 8001810:	0d52      	lsrs	r2, r2, #21
 8001812:	0a5b      	lsrs	r3, r3, #9
 8001814:	4690      	mov	r8, r2
 8001816:	0f42      	lsrs	r2, r0, #29
 8001818:	431a      	orrs	r2, r3
 800181a:	0fcd      	lsrs	r5, r1, #31
 800181c:	4ccd      	ldr	r4, [pc, #820]	; (8001b54 <__aeabi_dsub+0x358>)
 800181e:	0331      	lsls	r1, r6, #12
 8001820:	00c3      	lsls	r3, r0, #3
 8001822:	4694      	mov	ip, r2
 8001824:	0070      	lsls	r0, r6, #1
 8001826:	0f7a      	lsrs	r2, r7, #29
 8001828:	0a49      	lsrs	r1, r1, #9
 800182a:	00ff      	lsls	r7, r7, #3
 800182c:	469a      	mov	sl, r3
 800182e:	46b9      	mov	r9, r7
 8001830:	0d40      	lsrs	r0, r0, #21
 8001832:	0ff6      	lsrs	r6, r6, #31
 8001834:	4311      	orrs	r1, r2
 8001836:	42a0      	cmp	r0, r4
 8001838:	d100      	bne.n	800183c <__aeabi_dsub+0x40>
 800183a:	e0b1      	b.n	80019a0 <__aeabi_dsub+0x1a4>
 800183c:	2201      	movs	r2, #1
 800183e:	4056      	eors	r6, r2
 8001840:	46b3      	mov	fp, r6
 8001842:	42b5      	cmp	r5, r6
 8001844:	d100      	bne.n	8001848 <__aeabi_dsub+0x4c>
 8001846:	e088      	b.n	800195a <__aeabi_dsub+0x15e>
 8001848:	4642      	mov	r2, r8
 800184a:	1a12      	subs	r2, r2, r0
 800184c:	2a00      	cmp	r2, #0
 800184e:	dc00      	bgt.n	8001852 <__aeabi_dsub+0x56>
 8001850:	e0ae      	b.n	80019b0 <__aeabi_dsub+0x1b4>
 8001852:	2800      	cmp	r0, #0
 8001854:	d100      	bne.n	8001858 <__aeabi_dsub+0x5c>
 8001856:	e0c1      	b.n	80019dc <__aeabi_dsub+0x1e0>
 8001858:	48be      	ldr	r0, [pc, #760]	; (8001b54 <__aeabi_dsub+0x358>)
 800185a:	4580      	cmp	r8, r0
 800185c:	d100      	bne.n	8001860 <__aeabi_dsub+0x64>
 800185e:	e151      	b.n	8001b04 <__aeabi_dsub+0x308>
 8001860:	2080      	movs	r0, #128	; 0x80
 8001862:	0400      	lsls	r0, r0, #16
 8001864:	4301      	orrs	r1, r0
 8001866:	2a38      	cmp	r2, #56	; 0x38
 8001868:	dd00      	ble.n	800186c <__aeabi_dsub+0x70>
 800186a:	e17b      	b.n	8001b64 <__aeabi_dsub+0x368>
 800186c:	2a1f      	cmp	r2, #31
 800186e:	dd00      	ble.n	8001872 <__aeabi_dsub+0x76>
 8001870:	e1ee      	b.n	8001c50 <__aeabi_dsub+0x454>
 8001872:	2020      	movs	r0, #32
 8001874:	003e      	movs	r6, r7
 8001876:	1a80      	subs	r0, r0, r2
 8001878:	000c      	movs	r4, r1
 800187a:	40d6      	lsrs	r6, r2
 800187c:	40d1      	lsrs	r1, r2
 800187e:	4087      	lsls	r7, r0
 8001880:	4662      	mov	r2, ip
 8001882:	4084      	lsls	r4, r0
 8001884:	1a52      	subs	r2, r2, r1
 8001886:	1e78      	subs	r0, r7, #1
 8001888:	4187      	sbcs	r7, r0
 800188a:	4694      	mov	ip, r2
 800188c:	4334      	orrs	r4, r6
 800188e:	4327      	orrs	r7, r4
 8001890:	1bdc      	subs	r4, r3, r7
 8001892:	42a3      	cmp	r3, r4
 8001894:	419b      	sbcs	r3, r3
 8001896:	4662      	mov	r2, ip
 8001898:	425b      	negs	r3, r3
 800189a:	1ad3      	subs	r3, r2, r3
 800189c:	4699      	mov	r9, r3
 800189e:	464b      	mov	r3, r9
 80018a0:	021b      	lsls	r3, r3, #8
 80018a2:	d400      	bmi.n	80018a6 <__aeabi_dsub+0xaa>
 80018a4:	e118      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 80018a6:	464b      	mov	r3, r9
 80018a8:	0258      	lsls	r0, r3, #9
 80018aa:	0a43      	lsrs	r3, r0, #9
 80018ac:	4699      	mov	r9, r3
 80018ae:	464b      	mov	r3, r9
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d100      	bne.n	80018b6 <__aeabi_dsub+0xba>
 80018b4:	e137      	b.n	8001b26 <__aeabi_dsub+0x32a>
 80018b6:	4648      	mov	r0, r9
 80018b8:	f000 fbdc 	bl	8002074 <__clzsi2>
 80018bc:	0001      	movs	r1, r0
 80018be:	3908      	subs	r1, #8
 80018c0:	2320      	movs	r3, #32
 80018c2:	0022      	movs	r2, r4
 80018c4:	4648      	mov	r0, r9
 80018c6:	1a5b      	subs	r3, r3, r1
 80018c8:	40da      	lsrs	r2, r3
 80018ca:	4088      	lsls	r0, r1
 80018cc:	408c      	lsls	r4, r1
 80018ce:	4643      	mov	r3, r8
 80018d0:	4310      	orrs	r0, r2
 80018d2:	4588      	cmp	r8, r1
 80018d4:	dd00      	ble.n	80018d8 <__aeabi_dsub+0xdc>
 80018d6:	e136      	b.n	8001b46 <__aeabi_dsub+0x34a>
 80018d8:	1ac9      	subs	r1, r1, r3
 80018da:	1c4b      	adds	r3, r1, #1
 80018dc:	2b1f      	cmp	r3, #31
 80018de:	dd00      	ble.n	80018e2 <__aeabi_dsub+0xe6>
 80018e0:	e0ea      	b.n	8001ab8 <__aeabi_dsub+0x2bc>
 80018e2:	2220      	movs	r2, #32
 80018e4:	0026      	movs	r6, r4
 80018e6:	1ad2      	subs	r2, r2, r3
 80018e8:	0001      	movs	r1, r0
 80018ea:	4094      	lsls	r4, r2
 80018ec:	40de      	lsrs	r6, r3
 80018ee:	40d8      	lsrs	r0, r3
 80018f0:	2300      	movs	r3, #0
 80018f2:	4091      	lsls	r1, r2
 80018f4:	1e62      	subs	r2, r4, #1
 80018f6:	4194      	sbcs	r4, r2
 80018f8:	4681      	mov	r9, r0
 80018fa:	4698      	mov	r8, r3
 80018fc:	4331      	orrs	r1, r6
 80018fe:	430c      	orrs	r4, r1
 8001900:	0763      	lsls	r3, r4, #29
 8001902:	d009      	beq.n	8001918 <__aeabi_dsub+0x11c>
 8001904:	230f      	movs	r3, #15
 8001906:	4023      	ands	r3, r4
 8001908:	2b04      	cmp	r3, #4
 800190a:	d005      	beq.n	8001918 <__aeabi_dsub+0x11c>
 800190c:	1d23      	adds	r3, r4, #4
 800190e:	42a3      	cmp	r3, r4
 8001910:	41a4      	sbcs	r4, r4
 8001912:	4264      	negs	r4, r4
 8001914:	44a1      	add	r9, r4
 8001916:	001c      	movs	r4, r3
 8001918:	464b      	mov	r3, r9
 800191a:	021b      	lsls	r3, r3, #8
 800191c:	d400      	bmi.n	8001920 <__aeabi_dsub+0x124>
 800191e:	e0de      	b.n	8001ade <__aeabi_dsub+0x2e2>
 8001920:	4641      	mov	r1, r8
 8001922:	4b8c      	ldr	r3, [pc, #560]	; (8001b54 <__aeabi_dsub+0x358>)
 8001924:	3101      	adds	r1, #1
 8001926:	4299      	cmp	r1, r3
 8001928:	d100      	bne.n	800192c <__aeabi_dsub+0x130>
 800192a:	e0e7      	b.n	8001afc <__aeabi_dsub+0x300>
 800192c:	464b      	mov	r3, r9
 800192e:	488a      	ldr	r0, [pc, #552]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001930:	08e4      	lsrs	r4, r4, #3
 8001932:	4003      	ands	r3, r0
 8001934:	0018      	movs	r0, r3
 8001936:	0549      	lsls	r1, r1, #21
 8001938:	075b      	lsls	r3, r3, #29
 800193a:	0240      	lsls	r0, r0, #9
 800193c:	4323      	orrs	r3, r4
 800193e:	0d4a      	lsrs	r2, r1, #21
 8001940:	0b04      	lsrs	r4, r0, #12
 8001942:	0512      	lsls	r2, r2, #20
 8001944:	07ed      	lsls	r5, r5, #31
 8001946:	4322      	orrs	r2, r4
 8001948:	432a      	orrs	r2, r5
 800194a:	0018      	movs	r0, r3
 800194c:	0011      	movs	r1, r2
 800194e:	bcf0      	pop	{r4, r5, r6, r7}
 8001950:	46bb      	mov	fp, r7
 8001952:	46b2      	mov	sl, r6
 8001954:	46a9      	mov	r9, r5
 8001956:	46a0      	mov	r8, r4
 8001958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800195a:	4642      	mov	r2, r8
 800195c:	1a12      	subs	r2, r2, r0
 800195e:	2a00      	cmp	r2, #0
 8001960:	dd52      	ble.n	8001a08 <__aeabi_dsub+0x20c>
 8001962:	2800      	cmp	r0, #0
 8001964:	d100      	bne.n	8001968 <__aeabi_dsub+0x16c>
 8001966:	e09c      	b.n	8001aa2 <__aeabi_dsub+0x2a6>
 8001968:	45a0      	cmp	r8, r4
 800196a:	d100      	bne.n	800196e <__aeabi_dsub+0x172>
 800196c:	e0ca      	b.n	8001b04 <__aeabi_dsub+0x308>
 800196e:	2080      	movs	r0, #128	; 0x80
 8001970:	0400      	lsls	r0, r0, #16
 8001972:	4301      	orrs	r1, r0
 8001974:	2a38      	cmp	r2, #56	; 0x38
 8001976:	dd00      	ble.n	800197a <__aeabi_dsub+0x17e>
 8001978:	e149      	b.n	8001c0e <__aeabi_dsub+0x412>
 800197a:	2a1f      	cmp	r2, #31
 800197c:	dc00      	bgt.n	8001980 <__aeabi_dsub+0x184>
 800197e:	e197      	b.n	8001cb0 <__aeabi_dsub+0x4b4>
 8001980:	0010      	movs	r0, r2
 8001982:	000e      	movs	r6, r1
 8001984:	3820      	subs	r0, #32
 8001986:	40c6      	lsrs	r6, r0
 8001988:	2a20      	cmp	r2, #32
 800198a:	d004      	beq.n	8001996 <__aeabi_dsub+0x19a>
 800198c:	2040      	movs	r0, #64	; 0x40
 800198e:	1a82      	subs	r2, r0, r2
 8001990:	4091      	lsls	r1, r2
 8001992:	430f      	orrs	r7, r1
 8001994:	46b9      	mov	r9, r7
 8001996:	464c      	mov	r4, r9
 8001998:	1e62      	subs	r2, r4, #1
 800199a:	4194      	sbcs	r4, r2
 800199c:	4334      	orrs	r4, r6
 800199e:	e13a      	b.n	8001c16 <__aeabi_dsub+0x41a>
 80019a0:	000a      	movs	r2, r1
 80019a2:	433a      	orrs	r2, r7
 80019a4:	d028      	beq.n	80019f8 <__aeabi_dsub+0x1fc>
 80019a6:	46b3      	mov	fp, r6
 80019a8:	42b5      	cmp	r5, r6
 80019aa:	d02b      	beq.n	8001a04 <__aeabi_dsub+0x208>
 80019ac:	4a6b      	ldr	r2, [pc, #428]	; (8001b5c <__aeabi_dsub+0x360>)
 80019ae:	4442      	add	r2, r8
 80019b0:	2a00      	cmp	r2, #0
 80019b2:	d05d      	beq.n	8001a70 <__aeabi_dsub+0x274>
 80019b4:	4642      	mov	r2, r8
 80019b6:	4644      	mov	r4, r8
 80019b8:	1a82      	subs	r2, r0, r2
 80019ba:	2c00      	cmp	r4, #0
 80019bc:	d000      	beq.n	80019c0 <__aeabi_dsub+0x1c4>
 80019be:	e0f5      	b.n	8001bac <__aeabi_dsub+0x3b0>
 80019c0:	4665      	mov	r5, ip
 80019c2:	431d      	orrs	r5, r3
 80019c4:	d100      	bne.n	80019c8 <__aeabi_dsub+0x1cc>
 80019c6:	e19c      	b.n	8001d02 <__aeabi_dsub+0x506>
 80019c8:	1e55      	subs	r5, r2, #1
 80019ca:	2a01      	cmp	r2, #1
 80019cc:	d100      	bne.n	80019d0 <__aeabi_dsub+0x1d4>
 80019ce:	e1fb      	b.n	8001dc8 <__aeabi_dsub+0x5cc>
 80019d0:	4c60      	ldr	r4, [pc, #384]	; (8001b54 <__aeabi_dsub+0x358>)
 80019d2:	42a2      	cmp	r2, r4
 80019d4:	d100      	bne.n	80019d8 <__aeabi_dsub+0x1dc>
 80019d6:	e1bd      	b.n	8001d54 <__aeabi_dsub+0x558>
 80019d8:	002a      	movs	r2, r5
 80019da:	e0f0      	b.n	8001bbe <__aeabi_dsub+0x3c2>
 80019dc:	0008      	movs	r0, r1
 80019de:	4338      	orrs	r0, r7
 80019e0:	d100      	bne.n	80019e4 <__aeabi_dsub+0x1e8>
 80019e2:	e0c3      	b.n	8001b6c <__aeabi_dsub+0x370>
 80019e4:	1e50      	subs	r0, r2, #1
 80019e6:	2a01      	cmp	r2, #1
 80019e8:	d100      	bne.n	80019ec <__aeabi_dsub+0x1f0>
 80019ea:	e1a8      	b.n	8001d3e <__aeabi_dsub+0x542>
 80019ec:	4c59      	ldr	r4, [pc, #356]	; (8001b54 <__aeabi_dsub+0x358>)
 80019ee:	42a2      	cmp	r2, r4
 80019f0:	d100      	bne.n	80019f4 <__aeabi_dsub+0x1f8>
 80019f2:	e087      	b.n	8001b04 <__aeabi_dsub+0x308>
 80019f4:	0002      	movs	r2, r0
 80019f6:	e736      	b.n	8001866 <__aeabi_dsub+0x6a>
 80019f8:	2201      	movs	r2, #1
 80019fa:	4056      	eors	r6, r2
 80019fc:	46b3      	mov	fp, r6
 80019fe:	42b5      	cmp	r5, r6
 8001a00:	d000      	beq.n	8001a04 <__aeabi_dsub+0x208>
 8001a02:	e721      	b.n	8001848 <__aeabi_dsub+0x4c>
 8001a04:	4a55      	ldr	r2, [pc, #340]	; (8001b5c <__aeabi_dsub+0x360>)
 8001a06:	4442      	add	r2, r8
 8001a08:	2a00      	cmp	r2, #0
 8001a0a:	d100      	bne.n	8001a0e <__aeabi_dsub+0x212>
 8001a0c:	e0b5      	b.n	8001b7a <__aeabi_dsub+0x37e>
 8001a0e:	4642      	mov	r2, r8
 8001a10:	4644      	mov	r4, r8
 8001a12:	1a82      	subs	r2, r0, r2
 8001a14:	2c00      	cmp	r4, #0
 8001a16:	d100      	bne.n	8001a1a <__aeabi_dsub+0x21e>
 8001a18:	e138      	b.n	8001c8c <__aeabi_dsub+0x490>
 8001a1a:	4e4e      	ldr	r6, [pc, #312]	; (8001b54 <__aeabi_dsub+0x358>)
 8001a1c:	42b0      	cmp	r0, r6
 8001a1e:	d100      	bne.n	8001a22 <__aeabi_dsub+0x226>
 8001a20:	e1de      	b.n	8001de0 <__aeabi_dsub+0x5e4>
 8001a22:	2680      	movs	r6, #128	; 0x80
 8001a24:	4664      	mov	r4, ip
 8001a26:	0436      	lsls	r6, r6, #16
 8001a28:	4334      	orrs	r4, r6
 8001a2a:	46a4      	mov	ip, r4
 8001a2c:	2a38      	cmp	r2, #56	; 0x38
 8001a2e:	dd00      	ble.n	8001a32 <__aeabi_dsub+0x236>
 8001a30:	e196      	b.n	8001d60 <__aeabi_dsub+0x564>
 8001a32:	2a1f      	cmp	r2, #31
 8001a34:	dd00      	ble.n	8001a38 <__aeabi_dsub+0x23c>
 8001a36:	e224      	b.n	8001e82 <__aeabi_dsub+0x686>
 8001a38:	2620      	movs	r6, #32
 8001a3a:	1ab4      	subs	r4, r6, r2
 8001a3c:	46a2      	mov	sl, r4
 8001a3e:	4664      	mov	r4, ip
 8001a40:	4656      	mov	r6, sl
 8001a42:	40b4      	lsls	r4, r6
 8001a44:	46a1      	mov	r9, r4
 8001a46:	001c      	movs	r4, r3
 8001a48:	464e      	mov	r6, r9
 8001a4a:	40d4      	lsrs	r4, r2
 8001a4c:	4326      	orrs	r6, r4
 8001a4e:	0034      	movs	r4, r6
 8001a50:	4656      	mov	r6, sl
 8001a52:	40b3      	lsls	r3, r6
 8001a54:	1e5e      	subs	r6, r3, #1
 8001a56:	41b3      	sbcs	r3, r6
 8001a58:	431c      	orrs	r4, r3
 8001a5a:	4663      	mov	r3, ip
 8001a5c:	40d3      	lsrs	r3, r2
 8001a5e:	18c9      	adds	r1, r1, r3
 8001a60:	19e4      	adds	r4, r4, r7
 8001a62:	42bc      	cmp	r4, r7
 8001a64:	41bf      	sbcs	r7, r7
 8001a66:	427f      	negs	r7, r7
 8001a68:	46b9      	mov	r9, r7
 8001a6a:	4680      	mov	r8, r0
 8001a6c:	4489      	add	r9, r1
 8001a6e:	e0d8      	b.n	8001c22 <__aeabi_dsub+0x426>
 8001a70:	4640      	mov	r0, r8
 8001a72:	4c3b      	ldr	r4, [pc, #236]	; (8001b60 <__aeabi_dsub+0x364>)
 8001a74:	3001      	adds	r0, #1
 8001a76:	4220      	tst	r0, r4
 8001a78:	d000      	beq.n	8001a7c <__aeabi_dsub+0x280>
 8001a7a:	e0b4      	b.n	8001be6 <__aeabi_dsub+0x3ea>
 8001a7c:	4640      	mov	r0, r8
 8001a7e:	2800      	cmp	r0, #0
 8001a80:	d000      	beq.n	8001a84 <__aeabi_dsub+0x288>
 8001a82:	e144      	b.n	8001d0e <__aeabi_dsub+0x512>
 8001a84:	4660      	mov	r0, ip
 8001a86:	4318      	orrs	r0, r3
 8001a88:	d100      	bne.n	8001a8c <__aeabi_dsub+0x290>
 8001a8a:	e190      	b.n	8001dae <__aeabi_dsub+0x5b2>
 8001a8c:	0008      	movs	r0, r1
 8001a8e:	4338      	orrs	r0, r7
 8001a90:	d000      	beq.n	8001a94 <__aeabi_dsub+0x298>
 8001a92:	e1aa      	b.n	8001dea <__aeabi_dsub+0x5ee>
 8001a94:	4661      	mov	r1, ip
 8001a96:	08db      	lsrs	r3, r3, #3
 8001a98:	0749      	lsls	r1, r1, #29
 8001a9a:	430b      	orrs	r3, r1
 8001a9c:	4661      	mov	r1, ip
 8001a9e:	08cc      	lsrs	r4, r1, #3
 8001aa0:	e027      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001aa2:	0008      	movs	r0, r1
 8001aa4:	4338      	orrs	r0, r7
 8001aa6:	d061      	beq.n	8001b6c <__aeabi_dsub+0x370>
 8001aa8:	1e50      	subs	r0, r2, #1
 8001aaa:	2a01      	cmp	r2, #1
 8001aac:	d100      	bne.n	8001ab0 <__aeabi_dsub+0x2b4>
 8001aae:	e139      	b.n	8001d24 <__aeabi_dsub+0x528>
 8001ab0:	42a2      	cmp	r2, r4
 8001ab2:	d027      	beq.n	8001b04 <__aeabi_dsub+0x308>
 8001ab4:	0002      	movs	r2, r0
 8001ab6:	e75d      	b.n	8001974 <__aeabi_dsub+0x178>
 8001ab8:	0002      	movs	r2, r0
 8001aba:	391f      	subs	r1, #31
 8001abc:	40ca      	lsrs	r2, r1
 8001abe:	0011      	movs	r1, r2
 8001ac0:	2b20      	cmp	r3, #32
 8001ac2:	d003      	beq.n	8001acc <__aeabi_dsub+0x2d0>
 8001ac4:	2240      	movs	r2, #64	; 0x40
 8001ac6:	1ad3      	subs	r3, r2, r3
 8001ac8:	4098      	lsls	r0, r3
 8001aca:	4304      	orrs	r4, r0
 8001acc:	1e63      	subs	r3, r4, #1
 8001ace:	419c      	sbcs	r4, r3
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4699      	mov	r9, r3
 8001ad4:	4698      	mov	r8, r3
 8001ad6:	430c      	orrs	r4, r1
 8001ad8:	0763      	lsls	r3, r4, #29
 8001ada:	d000      	beq.n	8001ade <__aeabi_dsub+0x2e2>
 8001adc:	e712      	b.n	8001904 <__aeabi_dsub+0x108>
 8001ade:	464b      	mov	r3, r9
 8001ae0:	464a      	mov	r2, r9
 8001ae2:	08e4      	lsrs	r4, r4, #3
 8001ae4:	075b      	lsls	r3, r3, #29
 8001ae6:	4323      	orrs	r3, r4
 8001ae8:	08d4      	lsrs	r4, r2, #3
 8001aea:	4642      	mov	r2, r8
 8001aec:	4919      	ldr	r1, [pc, #100]	; (8001b54 <__aeabi_dsub+0x358>)
 8001aee:	428a      	cmp	r2, r1
 8001af0:	d00e      	beq.n	8001b10 <__aeabi_dsub+0x314>
 8001af2:	0324      	lsls	r4, r4, #12
 8001af4:	0552      	lsls	r2, r2, #21
 8001af6:	0b24      	lsrs	r4, r4, #12
 8001af8:	0d52      	lsrs	r2, r2, #21
 8001afa:	e722      	b.n	8001942 <__aeabi_dsub+0x146>
 8001afc:	000a      	movs	r2, r1
 8001afe:	2400      	movs	r4, #0
 8001b00:	2300      	movs	r3, #0
 8001b02:	e71e      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b04:	08db      	lsrs	r3, r3, #3
 8001b06:	4662      	mov	r2, ip
 8001b08:	0752      	lsls	r2, r2, #29
 8001b0a:	4313      	orrs	r3, r2
 8001b0c:	4662      	mov	r2, ip
 8001b0e:	08d4      	lsrs	r4, r2, #3
 8001b10:	001a      	movs	r2, r3
 8001b12:	4322      	orrs	r2, r4
 8001b14:	d100      	bne.n	8001b18 <__aeabi_dsub+0x31c>
 8001b16:	e1fc      	b.n	8001f12 <__aeabi_dsub+0x716>
 8001b18:	2280      	movs	r2, #128	; 0x80
 8001b1a:	0312      	lsls	r2, r2, #12
 8001b1c:	4314      	orrs	r4, r2
 8001b1e:	0324      	lsls	r4, r4, #12
 8001b20:	4a0c      	ldr	r2, [pc, #48]	; (8001b54 <__aeabi_dsub+0x358>)
 8001b22:	0b24      	lsrs	r4, r4, #12
 8001b24:	e70d      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b26:	0020      	movs	r0, r4
 8001b28:	f000 faa4 	bl	8002074 <__clzsi2>
 8001b2c:	0001      	movs	r1, r0
 8001b2e:	3118      	adds	r1, #24
 8001b30:	291f      	cmp	r1, #31
 8001b32:	dc00      	bgt.n	8001b36 <__aeabi_dsub+0x33a>
 8001b34:	e6c4      	b.n	80018c0 <__aeabi_dsub+0xc4>
 8001b36:	3808      	subs	r0, #8
 8001b38:	4084      	lsls	r4, r0
 8001b3a:	4643      	mov	r3, r8
 8001b3c:	0020      	movs	r0, r4
 8001b3e:	2400      	movs	r4, #0
 8001b40:	4588      	cmp	r8, r1
 8001b42:	dc00      	bgt.n	8001b46 <__aeabi_dsub+0x34a>
 8001b44:	e6c8      	b.n	80018d8 <__aeabi_dsub+0xdc>
 8001b46:	4a04      	ldr	r2, [pc, #16]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001b48:	1a5b      	subs	r3, r3, r1
 8001b4a:	4010      	ands	r0, r2
 8001b4c:	4698      	mov	r8, r3
 8001b4e:	4681      	mov	r9, r0
 8001b50:	e6d6      	b.n	8001900 <__aeabi_dsub+0x104>
 8001b52:	46c0      	nop			; (mov r8, r8)
 8001b54:	000007ff 	.word	0x000007ff
 8001b58:	ff7fffff 	.word	0xff7fffff
 8001b5c:	fffff801 	.word	0xfffff801
 8001b60:	000007fe 	.word	0x000007fe
 8001b64:	430f      	orrs	r7, r1
 8001b66:	1e7a      	subs	r2, r7, #1
 8001b68:	4197      	sbcs	r7, r2
 8001b6a:	e691      	b.n	8001890 <__aeabi_dsub+0x94>
 8001b6c:	4661      	mov	r1, ip
 8001b6e:	08db      	lsrs	r3, r3, #3
 8001b70:	0749      	lsls	r1, r1, #29
 8001b72:	430b      	orrs	r3, r1
 8001b74:	4661      	mov	r1, ip
 8001b76:	08cc      	lsrs	r4, r1, #3
 8001b78:	e7b8      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001b7a:	4640      	mov	r0, r8
 8001b7c:	4cd3      	ldr	r4, [pc, #844]	; (8001ecc <__aeabi_dsub+0x6d0>)
 8001b7e:	3001      	adds	r0, #1
 8001b80:	4220      	tst	r0, r4
 8001b82:	d000      	beq.n	8001b86 <__aeabi_dsub+0x38a>
 8001b84:	e0a2      	b.n	8001ccc <__aeabi_dsub+0x4d0>
 8001b86:	4640      	mov	r0, r8
 8001b88:	2800      	cmp	r0, #0
 8001b8a:	d000      	beq.n	8001b8e <__aeabi_dsub+0x392>
 8001b8c:	e101      	b.n	8001d92 <__aeabi_dsub+0x596>
 8001b8e:	4660      	mov	r0, ip
 8001b90:	4318      	orrs	r0, r3
 8001b92:	d100      	bne.n	8001b96 <__aeabi_dsub+0x39a>
 8001b94:	e15e      	b.n	8001e54 <__aeabi_dsub+0x658>
 8001b96:	0008      	movs	r0, r1
 8001b98:	4338      	orrs	r0, r7
 8001b9a:	d000      	beq.n	8001b9e <__aeabi_dsub+0x3a2>
 8001b9c:	e15f      	b.n	8001e5e <__aeabi_dsub+0x662>
 8001b9e:	4661      	mov	r1, ip
 8001ba0:	08db      	lsrs	r3, r3, #3
 8001ba2:	0749      	lsls	r1, r1, #29
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	4661      	mov	r1, ip
 8001ba8:	08cc      	lsrs	r4, r1, #3
 8001baa:	e7a2      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001bac:	4dc8      	ldr	r5, [pc, #800]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001bae:	42a8      	cmp	r0, r5
 8001bb0:	d100      	bne.n	8001bb4 <__aeabi_dsub+0x3b8>
 8001bb2:	e0cf      	b.n	8001d54 <__aeabi_dsub+0x558>
 8001bb4:	2580      	movs	r5, #128	; 0x80
 8001bb6:	4664      	mov	r4, ip
 8001bb8:	042d      	lsls	r5, r5, #16
 8001bba:	432c      	orrs	r4, r5
 8001bbc:	46a4      	mov	ip, r4
 8001bbe:	2a38      	cmp	r2, #56	; 0x38
 8001bc0:	dc56      	bgt.n	8001c70 <__aeabi_dsub+0x474>
 8001bc2:	2a1f      	cmp	r2, #31
 8001bc4:	dd00      	ble.n	8001bc8 <__aeabi_dsub+0x3cc>
 8001bc6:	e0d1      	b.n	8001d6c <__aeabi_dsub+0x570>
 8001bc8:	2520      	movs	r5, #32
 8001bca:	001e      	movs	r6, r3
 8001bcc:	1aad      	subs	r5, r5, r2
 8001bce:	4664      	mov	r4, ip
 8001bd0:	40ab      	lsls	r3, r5
 8001bd2:	40ac      	lsls	r4, r5
 8001bd4:	40d6      	lsrs	r6, r2
 8001bd6:	1e5d      	subs	r5, r3, #1
 8001bd8:	41ab      	sbcs	r3, r5
 8001bda:	4334      	orrs	r4, r6
 8001bdc:	4323      	orrs	r3, r4
 8001bde:	4664      	mov	r4, ip
 8001be0:	40d4      	lsrs	r4, r2
 8001be2:	1b09      	subs	r1, r1, r4
 8001be4:	e049      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001be6:	4660      	mov	r0, ip
 8001be8:	1bdc      	subs	r4, r3, r7
 8001bea:	1a46      	subs	r6, r0, r1
 8001bec:	42a3      	cmp	r3, r4
 8001bee:	4180      	sbcs	r0, r0
 8001bf0:	4240      	negs	r0, r0
 8001bf2:	4681      	mov	r9, r0
 8001bf4:	0030      	movs	r0, r6
 8001bf6:	464e      	mov	r6, r9
 8001bf8:	1b80      	subs	r0, r0, r6
 8001bfa:	4681      	mov	r9, r0
 8001bfc:	0200      	lsls	r0, r0, #8
 8001bfe:	d476      	bmi.n	8001cee <__aeabi_dsub+0x4f2>
 8001c00:	464b      	mov	r3, r9
 8001c02:	4323      	orrs	r3, r4
 8001c04:	d000      	beq.n	8001c08 <__aeabi_dsub+0x40c>
 8001c06:	e652      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001c08:	2400      	movs	r4, #0
 8001c0a:	2500      	movs	r5, #0
 8001c0c:	e771      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001c0e:	4339      	orrs	r1, r7
 8001c10:	000c      	movs	r4, r1
 8001c12:	1e62      	subs	r2, r4, #1
 8001c14:	4194      	sbcs	r4, r2
 8001c16:	18e4      	adds	r4, r4, r3
 8001c18:	429c      	cmp	r4, r3
 8001c1a:	419b      	sbcs	r3, r3
 8001c1c:	425b      	negs	r3, r3
 8001c1e:	4463      	add	r3, ip
 8001c20:	4699      	mov	r9, r3
 8001c22:	464b      	mov	r3, r9
 8001c24:	021b      	lsls	r3, r3, #8
 8001c26:	d400      	bmi.n	8001c2a <__aeabi_dsub+0x42e>
 8001c28:	e756      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	469c      	mov	ip, r3
 8001c2e:	4ba8      	ldr	r3, [pc, #672]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c30:	44e0      	add	r8, ip
 8001c32:	4598      	cmp	r8, r3
 8001c34:	d038      	beq.n	8001ca8 <__aeabi_dsub+0x4ac>
 8001c36:	464b      	mov	r3, r9
 8001c38:	48a6      	ldr	r0, [pc, #664]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	4003      	ands	r3, r0
 8001c3e:	0018      	movs	r0, r3
 8001c40:	0863      	lsrs	r3, r4, #1
 8001c42:	4014      	ands	r4, r2
 8001c44:	431c      	orrs	r4, r3
 8001c46:	07c3      	lsls	r3, r0, #31
 8001c48:	431c      	orrs	r4, r3
 8001c4a:	0843      	lsrs	r3, r0, #1
 8001c4c:	4699      	mov	r9, r3
 8001c4e:	e657      	b.n	8001900 <__aeabi_dsub+0x104>
 8001c50:	0010      	movs	r0, r2
 8001c52:	000e      	movs	r6, r1
 8001c54:	3820      	subs	r0, #32
 8001c56:	40c6      	lsrs	r6, r0
 8001c58:	2a20      	cmp	r2, #32
 8001c5a:	d004      	beq.n	8001c66 <__aeabi_dsub+0x46a>
 8001c5c:	2040      	movs	r0, #64	; 0x40
 8001c5e:	1a82      	subs	r2, r0, r2
 8001c60:	4091      	lsls	r1, r2
 8001c62:	430f      	orrs	r7, r1
 8001c64:	46b9      	mov	r9, r7
 8001c66:	464f      	mov	r7, r9
 8001c68:	1e7a      	subs	r2, r7, #1
 8001c6a:	4197      	sbcs	r7, r2
 8001c6c:	4337      	orrs	r7, r6
 8001c6e:	e60f      	b.n	8001890 <__aeabi_dsub+0x94>
 8001c70:	4662      	mov	r2, ip
 8001c72:	431a      	orrs	r2, r3
 8001c74:	0013      	movs	r3, r2
 8001c76:	1e5a      	subs	r2, r3, #1
 8001c78:	4193      	sbcs	r3, r2
 8001c7a:	1afc      	subs	r4, r7, r3
 8001c7c:	42a7      	cmp	r7, r4
 8001c7e:	41bf      	sbcs	r7, r7
 8001c80:	427f      	negs	r7, r7
 8001c82:	1bcb      	subs	r3, r1, r7
 8001c84:	4699      	mov	r9, r3
 8001c86:	465d      	mov	r5, fp
 8001c88:	4680      	mov	r8, r0
 8001c8a:	e608      	b.n	800189e <__aeabi_dsub+0xa2>
 8001c8c:	4666      	mov	r6, ip
 8001c8e:	431e      	orrs	r6, r3
 8001c90:	d100      	bne.n	8001c94 <__aeabi_dsub+0x498>
 8001c92:	e0be      	b.n	8001e12 <__aeabi_dsub+0x616>
 8001c94:	1e56      	subs	r6, r2, #1
 8001c96:	2a01      	cmp	r2, #1
 8001c98:	d100      	bne.n	8001c9c <__aeabi_dsub+0x4a0>
 8001c9a:	e109      	b.n	8001eb0 <__aeabi_dsub+0x6b4>
 8001c9c:	4c8c      	ldr	r4, [pc, #560]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c9e:	42a2      	cmp	r2, r4
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dsub+0x4a8>
 8001ca2:	e119      	b.n	8001ed8 <__aeabi_dsub+0x6dc>
 8001ca4:	0032      	movs	r2, r6
 8001ca6:	e6c1      	b.n	8001a2c <__aeabi_dsub+0x230>
 8001ca8:	4642      	mov	r2, r8
 8001caa:	2400      	movs	r4, #0
 8001cac:	2300      	movs	r3, #0
 8001cae:	e648      	b.n	8001942 <__aeabi_dsub+0x146>
 8001cb0:	2020      	movs	r0, #32
 8001cb2:	000c      	movs	r4, r1
 8001cb4:	1a80      	subs	r0, r0, r2
 8001cb6:	003e      	movs	r6, r7
 8001cb8:	4087      	lsls	r7, r0
 8001cba:	4084      	lsls	r4, r0
 8001cbc:	40d6      	lsrs	r6, r2
 8001cbe:	1e78      	subs	r0, r7, #1
 8001cc0:	4187      	sbcs	r7, r0
 8001cc2:	40d1      	lsrs	r1, r2
 8001cc4:	4334      	orrs	r4, r6
 8001cc6:	433c      	orrs	r4, r7
 8001cc8:	448c      	add	ip, r1
 8001cca:	e7a4      	b.n	8001c16 <__aeabi_dsub+0x41a>
 8001ccc:	4a80      	ldr	r2, [pc, #512]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001cce:	4290      	cmp	r0, r2
 8001cd0:	d100      	bne.n	8001cd4 <__aeabi_dsub+0x4d8>
 8001cd2:	e0e9      	b.n	8001ea8 <__aeabi_dsub+0x6ac>
 8001cd4:	19df      	adds	r7, r3, r7
 8001cd6:	429f      	cmp	r7, r3
 8001cd8:	419b      	sbcs	r3, r3
 8001cda:	4461      	add	r1, ip
 8001cdc:	425b      	negs	r3, r3
 8001cde:	18c9      	adds	r1, r1, r3
 8001ce0:	07cc      	lsls	r4, r1, #31
 8001ce2:	087f      	lsrs	r7, r7, #1
 8001ce4:	084b      	lsrs	r3, r1, #1
 8001ce6:	4699      	mov	r9, r3
 8001ce8:	4680      	mov	r8, r0
 8001cea:	433c      	orrs	r4, r7
 8001cec:	e6f4      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001cee:	1afc      	subs	r4, r7, r3
 8001cf0:	42a7      	cmp	r7, r4
 8001cf2:	41bf      	sbcs	r7, r7
 8001cf4:	4663      	mov	r3, ip
 8001cf6:	427f      	negs	r7, r7
 8001cf8:	1ac9      	subs	r1, r1, r3
 8001cfa:	1bcb      	subs	r3, r1, r7
 8001cfc:	4699      	mov	r9, r3
 8001cfe:	465d      	mov	r5, fp
 8001d00:	e5d5      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001d02:	08ff      	lsrs	r7, r7, #3
 8001d04:	074b      	lsls	r3, r1, #29
 8001d06:	465d      	mov	r5, fp
 8001d08:	433b      	orrs	r3, r7
 8001d0a:	08cc      	lsrs	r4, r1, #3
 8001d0c:	e6ee      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001d0e:	4662      	mov	r2, ip
 8001d10:	431a      	orrs	r2, r3
 8001d12:	d000      	beq.n	8001d16 <__aeabi_dsub+0x51a>
 8001d14:	e082      	b.n	8001e1c <__aeabi_dsub+0x620>
 8001d16:	000b      	movs	r3, r1
 8001d18:	433b      	orrs	r3, r7
 8001d1a:	d11b      	bne.n	8001d54 <__aeabi_dsub+0x558>
 8001d1c:	2480      	movs	r4, #128	; 0x80
 8001d1e:	2500      	movs	r5, #0
 8001d20:	0324      	lsls	r4, r4, #12
 8001d22:	e6f9      	b.n	8001b18 <__aeabi_dsub+0x31c>
 8001d24:	19dc      	adds	r4, r3, r7
 8001d26:	429c      	cmp	r4, r3
 8001d28:	419b      	sbcs	r3, r3
 8001d2a:	4461      	add	r1, ip
 8001d2c:	4689      	mov	r9, r1
 8001d2e:	425b      	negs	r3, r3
 8001d30:	4499      	add	r9, r3
 8001d32:	464b      	mov	r3, r9
 8001d34:	021b      	lsls	r3, r3, #8
 8001d36:	d444      	bmi.n	8001dc2 <__aeabi_dsub+0x5c6>
 8001d38:	2301      	movs	r3, #1
 8001d3a:	4698      	mov	r8, r3
 8001d3c:	e6cc      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001d3e:	1bdc      	subs	r4, r3, r7
 8001d40:	4662      	mov	r2, ip
 8001d42:	42a3      	cmp	r3, r4
 8001d44:	419b      	sbcs	r3, r3
 8001d46:	1a51      	subs	r1, r2, r1
 8001d48:	425b      	negs	r3, r3
 8001d4a:	1acb      	subs	r3, r1, r3
 8001d4c:	4699      	mov	r9, r3
 8001d4e:	2301      	movs	r3, #1
 8001d50:	4698      	mov	r8, r3
 8001d52:	e5a4      	b.n	800189e <__aeabi_dsub+0xa2>
 8001d54:	08ff      	lsrs	r7, r7, #3
 8001d56:	074b      	lsls	r3, r1, #29
 8001d58:	465d      	mov	r5, fp
 8001d5a:	433b      	orrs	r3, r7
 8001d5c:	08cc      	lsrs	r4, r1, #3
 8001d5e:	e6d7      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001d60:	4662      	mov	r2, ip
 8001d62:	431a      	orrs	r2, r3
 8001d64:	0014      	movs	r4, r2
 8001d66:	1e63      	subs	r3, r4, #1
 8001d68:	419c      	sbcs	r4, r3
 8001d6a:	e679      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001d6c:	0015      	movs	r5, r2
 8001d6e:	4664      	mov	r4, ip
 8001d70:	3d20      	subs	r5, #32
 8001d72:	40ec      	lsrs	r4, r5
 8001d74:	46a0      	mov	r8, r4
 8001d76:	2a20      	cmp	r2, #32
 8001d78:	d005      	beq.n	8001d86 <__aeabi_dsub+0x58a>
 8001d7a:	2540      	movs	r5, #64	; 0x40
 8001d7c:	4664      	mov	r4, ip
 8001d7e:	1aaa      	subs	r2, r5, r2
 8001d80:	4094      	lsls	r4, r2
 8001d82:	4323      	orrs	r3, r4
 8001d84:	469a      	mov	sl, r3
 8001d86:	4654      	mov	r4, sl
 8001d88:	1e63      	subs	r3, r4, #1
 8001d8a:	419c      	sbcs	r4, r3
 8001d8c:	4643      	mov	r3, r8
 8001d8e:	4323      	orrs	r3, r4
 8001d90:	e773      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001d92:	4662      	mov	r2, ip
 8001d94:	431a      	orrs	r2, r3
 8001d96:	d023      	beq.n	8001de0 <__aeabi_dsub+0x5e4>
 8001d98:	000a      	movs	r2, r1
 8001d9a:	433a      	orrs	r2, r7
 8001d9c:	d000      	beq.n	8001da0 <__aeabi_dsub+0x5a4>
 8001d9e:	e0a0      	b.n	8001ee2 <__aeabi_dsub+0x6e6>
 8001da0:	4662      	mov	r2, ip
 8001da2:	08db      	lsrs	r3, r3, #3
 8001da4:	0752      	lsls	r2, r2, #29
 8001da6:	4313      	orrs	r3, r2
 8001da8:	4662      	mov	r2, ip
 8001daa:	08d4      	lsrs	r4, r2, #3
 8001dac:	e6b0      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dae:	000b      	movs	r3, r1
 8001db0:	433b      	orrs	r3, r7
 8001db2:	d100      	bne.n	8001db6 <__aeabi_dsub+0x5ba>
 8001db4:	e728      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001db6:	08ff      	lsrs	r7, r7, #3
 8001db8:	074b      	lsls	r3, r1, #29
 8001dba:	465d      	mov	r5, fp
 8001dbc:	433b      	orrs	r3, r7
 8001dbe:	08cc      	lsrs	r4, r1, #3
 8001dc0:	e697      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001dc2:	2302      	movs	r3, #2
 8001dc4:	4698      	mov	r8, r3
 8001dc6:	e736      	b.n	8001c36 <__aeabi_dsub+0x43a>
 8001dc8:	1afc      	subs	r4, r7, r3
 8001dca:	42a7      	cmp	r7, r4
 8001dcc:	41bf      	sbcs	r7, r7
 8001dce:	4663      	mov	r3, ip
 8001dd0:	427f      	negs	r7, r7
 8001dd2:	1ac9      	subs	r1, r1, r3
 8001dd4:	1bcb      	subs	r3, r1, r7
 8001dd6:	4699      	mov	r9, r3
 8001dd8:	2301      	movs	r3, #1
 8001dda:	465d      	mov	r5, fp
 8001ddc:	4698      	mov	r8, r3
 8001dde:	e55e      	b.n	800189e <__aeabi_dsub+0xa2>
 8001de0:	074b      	lsls	r3, r1, #29
 8001de2:	08ff      	lsrs	r7, r7, #3
 8001de4:	433b      	orrs	r3, r7
 8001de6:	08cc      	lsrs	r4, r1, #3
 8001de8:	e692      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dea:	1bdc      	subs	r4, r3, r7
 8001dec:	4660      	mov	r0, ip
 8001dee:	42a3      	cmp	r3, r4
 8001df0:	41b6      	sbcs	r6, r6
 8001df2:	1a40      	subs	r0, r0, r1
 8001df4:	4276      	negs	r6, r6
 8001df6:	1b80      	subs	r0, r0, r6
 8001df8:	4681      	mov	r9, r0
 8001dfa:	0200      	lsls	r0, r0, #8
 8001dfc:	d560      	bpl.n	8001ec0 <__aeabi_dsub+0x6c4>
 8001dfe:	1afc      	subs	r4, r7, r3
 8001e00:	42a7      	cmp	r7, r4
 8001e02:	41bf      	sbcs	r7, r7
 8001e04:	4663      	mov	r3, ip
 8001e06:	427f      	negs	r7, r7
 8001e08:	1ac9      	subs	r1, r1, r3
 8001e0a:	1bcb      	subs	r3, r1, r7
 8001e0c:	4699      	mov	r9, r3
 8001e0e:	465d      	mov	r5, fp
 8001e10:	e576      	b.n	8001900 <__aeabi_dsub+0x104>
 8001e12:	08ff      	lsrs	r7, r7, #3
 8001e14:	074b      	lsls	r3, r1, #29
 8001e16:	433b      	orrs	r3, r7
 8001e18:	08cc      	lsrs	r4, r1, #3
 8001e1a:	e667      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001e1c:	000a      	movs	r2, r1
 8001e1e:	08db      	lsrs	r3, r3, #3
 8001e20:	433a      	orrs	r2, r7
 8001e22:	d100      	bne.n	8001e26 <__aeabi_dsub+0x62a>
 8001e24:	e66f      	b.n	8001b06 <__aeabi_dsub+0x30a>
 8001e26:	4662      	mov	r2, ip
 8001e28:	0752      	lsls	r2, r2, #29
 8001e2a:	4313      	orrs	r3, r2
 8001e2c:	4662      	mov	r2, ip
 8001e2e:	08d4      	lsrs	r4, r2, #3
 8001e30:	2280      	movs	r2, #128	; 0x80
 8001e32:	0312      	lsls	r2, r2, #12
 8001e34:	4214      	tst	r4, r2
 8001e36:	d007      	beq.n	8001e48 <__aeabi_dsub+0x64c>
 8001e38:	08c8      	lsrs	r0, r1, #3
 8001e3a:	4210      	tst	r0, r2
 8001e3c:	d104      	bne.n	8001e48 <__aeabi_dsub+0x64c>
 8001e3e:	465d      	mov	r5, fp
 8001e40:	0004      	movs	r4, r0
 8001e42:	08fb      	lsrs	r3, r7, #3
 8001e44:	0749      	lsls	r1, r1, #29
 8001e46:	430b      	orrs	r3, r1
 8001e48:	0f5a      	lsrs	r2, r3, #29
 8001e4a:	00db      	lsls	r3, r3, #3
 8001e4c:	08db      	lsrs	r3, r3, #3
 8001e4e:	0752      	lsls	r2, r2, #29
 8001e50:	4313      	orrs	r3, r2
 8001e52:	e65d      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001e54:	074b      	lsls	r3, r1, #29
 8001e56:	08ff      	lsrs	r7, r7, #3
 8001e58:	433b      	orrs	r3, r7
 8001e5a:	08cc      	lsrs	r4, r1, #3
 8001e5c:	e649      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001e5e:	19dc      	adds	r4, r3, r7
 8001e60:	429c      	cmp	r4, r3
 8001e62:	419b      	sbcs	r3, r3
 8001e64:	4461      	add	r1, ip
 8001e66:	4689      	mov	r9, r1
 8001e68:	425b      	negs	r3, r3
 8001e6a:	4499      	add	r9, r3
 8001e6c:	464b      	mov	r3, r9
 8001e6e:	021b      	lsls	r3, r3, #8
 8001e70:	d400      	bmi.n	8001e74 <__aeabi_dsub+0x678>
 8001e72:	e631      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e74:	464a      	mov	r2, r9
 8001e76:	4b17      	ldr	r3, [pc, #92]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001e78:	401a      	ands	r2, r3
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	4691      	mov	r9, r2
 8001e7e:	4698      	mov	r8, r3
 8001e80:	e62a      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e82:	0016      	movs	r6, r2
 8001e84:	4664      	mov	r4, ip
 8001e86:	3e20      	subs	r6, #32
 8001e88:	40f4      	lsrs	r4, r6
 8001e8a:	46a0      	mov	r8, r4
 8001e8c:	2a20      	cmp	r2, #32
 8001e8e:	d005      	beq.n	8001e9c <__aeabi_dsub+0x6a0>
 8001e90:	2640      	movs	r6, #64	; 0x40
 8001e92:	4664      	mov	r4, ip
 8001e94:	1ab2      	subs	r2, r6, r2
 8001e96:	4094      	lsls	r4, r2
 8001e98:	4323      	orrs	r3, r4
 8001e9a:	469a      	mov	sl, r3
 8001e9c:	4654      	mov	r4, sl
 8001e9e:	1e63      	subs	r3, r4, #1
 8001ea0:	419c      	sbcs	r4, r3
 8001ea2:	4643      	mov	r3, r8
 8001ea4:	431c      	orrs	r4, r3
 8001ea6:	e5db      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001ea8:	0002      	movs	r2, r0
 8001eaa:	2400      	movs	r4, #0
 8001eac:	2300      	movs	r3, #0
 8001eae:	e548      	b.n	8001942 <__aeabi_dsub+0x146>
 8001eb0:	19dc      	adds	r4, r3, r7
 8001eb2:	42bc      	cmp	r4, r7
 8001eb4:	41bf      	sbcs	r7, r7
 8001eb6:	4461      	add	r1, ip
 8001eb8:	4689      	mov	r9, r1
 8001eba:	427f      	negs	r7, r7
 8001ebc:	44b9      	add	r9, r7
 8001ebe:	e738      	b.n	8001d32 <__aeabi_dsub+0x536>
 8001ec0:	464b      	mov	r3, r9
 8001ec2:	4323      	orrs	r3, r4
 8001ec4:	d100      	bne.n	8001ec8 <__aeabi_dsub+0x6cc>
 8001ec6:	e69f      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001ec8:	e606      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001eca:	46c0      	nop			; (mov r8, r8)
 8001ecc:	000007fe 	.word	0x000007fe
 8001ed0:	000007ff 	.word	0x000007ff
 8001ed4:	ff7fffff 	.word	0xff7fffff
 8001ed8:	08ff      	lsrs	r7, r7, #3
 8001eda:	074b      	lsls	r3, r1, #29
 8001edc:	433b      	orrs	r3, r7
 8001ede:	08cc      	lsrs	r4, r1, #3
 8001ee0:	e616      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001ee2:	4662      	mov	r2, ip
 8001ee4:	08db      	lsrs	r3, r3, #3
 8001ee6:	0752      	lsls	r2, r2, #29
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	4662      	mov	r2, ip
 8001eec:	08d4      	lsrs	r4, r2, #3
 8001eee:	2280      	movs	r2, #128	; 0x80
 8001ef0:	0312      	lsls	r2, r2, #12
 8001ef2:	4214      	tst	r4, r2
 8001ef4:	d007      	beq.n	8001f06 <__aeabi_dsub+0x70a>
 8001ef6:	08c8      	lsrs	r0, r1, #3
 8001ef8:	4210      	tst	r0, r2
 8001efa:	d104      	bne.n	8001f06 <__aeabi_dsub+0x70a>
 8001efc:	465d      	mov	r5, fp
 8001efe:	0004      	movs	r4, r0
 8001f00:	08fb      	lsrs	r3, r7, #3
 8001f02:	0749      	lsls	r1, r1, #29
 8001f04:	430b      	orrs	r3, r1
 8001f06:	0f5a      	lsrs	r2, r3, #29
 8001f08:	00db      	lsls	r3, r3, #3
 8001f0a:	0752      	lsls	r2, r2, #29
 8001f0c:	08db      	lsrs	r3, r3, #3
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	e5fe      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001f12:	2300      	movs	r3, #0
 8001f14:	4a01      	ldr	r2, [pc, #4]	; (8001f1c <__aeabi_dsub+0x720>)
 8001f16:	001c      	movs	r4, r3
 8001f18:	e513      	b.n	8001942 <__aeabi_dsub+0x146>
 8001f1a:	46c0      	nop			; (mov r8, r8)
 8001f1c:	000007ff 	.word	0x000007ff

08001f20 <__aeabi_dcmpun>:
 8001f20:	b570      	push	{r4, r5, r6, lr}
 8001f22:	0005      	movs	r5, r0
 8001f24:	480c      	ldr	r0, [pc, #48]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f26:	031c      	lsls	r4, r3, #12
 8001f28:	0016      	movs	r6, r2
 8001f2a:	005b      	lsls	r3, r3, #1
 8001f2c:	030a      	lsls	r2, r1, #12
 8001f2e:	0049      	lsls	r1, r1, #1
 8001f30:	0b12      	lsrs	r2, r2, #12
 8001f32:	0d49      	lsrs	r1, r1, #21
 8001f34:	0b24      	lsrs	r4, r4, #12
 8001f36:	0d5b      	lsrs	r3, r3, #21
 8001f38:	4281      	cmp	r1, r0
 8001f3a:	d008      	beq.n	8001f4e <__aeabi_dcmpun+0x2e>
 8001f3c:	4a06      	ldr	r2, [pc, #24]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f3e:	2000      	movs	r0, #0
 8001f40:	4293      	cmp	r3, r2
 8001f42:	d103      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f44:	0020      	movs	r0, r4
 8001f46:	4330      	orrs	r0, r6
 8001f48:	1e43      	subs	r3, r0, #1
 8001f4a:	4198      	sbcs	r0, r3
 8001f4c:	bd70      	pop	{r4, r5, r6, pc}
 8001f4e:	2001      	movs	r0, #1
 8001f50:	432a      	orrs	r2, r5
 8001f52:	d1fb      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f54:	e7f2      	b.n	8001f3c <__aeabi_dcmpun+0x1c>
 8001f56:	46c0      	nop			; (mov r8, r8)
 8001f58:	000007ff 	.word	0x000007ff

08001f5c <__aeabi_d2iz>:
 8001f5c:	000a      	movs	r2, r1
 8001f5e:	b530      	push	{r4, r5, lr}
 8001f60:	4c13      	ldr	r4, [pc, #76]	; (8001fb0 <__aeabi_d2iz+0x54>)
 8001f62:	0053      	lsls	r3, r2, #1
 8001f64:	0309      	lsls	r1, r1, #12
 8001f66:	0005      	movs	r5, r0
 8001f68:	0b09      	lsrs	r1, r1, #12
 8001f6a:	2000      	movs	r0, #0
 8001f6c:	0d5b      	lsrs	r3, r3, #21
 8001f6e:	0fd2      	lsrs	r2, r2, #31
 8001f70:	42a3      	cmp	r3, r4
 8001f72:	dd04      	ble.n	8001f7e <__aeabi_d2iz+0x22>
 8001f74:	480f      	ldr	r0, [pc, #60]	; (8001fb4 <__aeabi_d2iz+0x58>)
 8001f76:	4283      	cmp	r3, r0
 8001f78:	dd02      	ble.n	8001f80 <__aeabi_d2iz+0x24>
 8001f7a:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <__aeabi_d2iz+0x5c>)
 8001f7c:	18d0      	adds	r0, r2, r3
 8001f7e:	bd30      	pop	{r4, r5, pc}
 8001f80:	2080      	movs	r0, #128	; 0x80
 8001f82:	0340      	lsls	r0, r0, #13
 8001f84:	4301      	orrs	r1, r0
 8001f86:	480d      	ldr	r0, [pc, #52]	; (8001fbc <__aeabi_d2iz+0x60>)
 8001f88:	1ac0      	subs	r0, r0, r3
 8001f8a:	281f      	cmp	r0, #31
 8001f8c:	dd08      	ble.n	8001fa0 <__aeabi_d2iz+0x44>
 8001f8e:	480c      	ldr	r0, [pc, #48]	; (8001fc0 <__aeabi_d2iz+0x64>)
 8001f90:	1ac3      	subs	r3, r0, r3
 8001f92:	40d9      	lsrs	r1, r3
 8001f94:	000b      	movs	r3, r1
 8001f96:	4258      	negs	r0, r3
 8001f98:	2a00      	cmp	r2, #0
 8001f9a:	d1f0      	bne.n	8001f7e <__aeabi_d2iz+0x22>
 8001f9c:	0018      	movs	r0, r3
 8001f9e:	e7ee      	b.n	8001f7e <__aeabi_d2iz+0x22>
 8001fa0:	4c08      	ldr	r4, [pc, #32]	; (8001fc4 <__aeabi_d2iz+0x68>)
 8001fa2:	40c5      	lsrs	r5, r0
 8001fa4:	46a4      	mov	ip, r4
 8001fa6:	4463      	add	r3, ip
 8001fa8:	4099      	lsls	r1, r3
 8001faa:	000b      	movs	r3, r1
 8001fac:	432b      	orrs	r3, r5
 8001fae:	e7f2      	b.n	8001f96 <__aeabi_d2iz+0x3a>
 8001fb0:	000003fe 	.word	0x000003fe
 8001fb4:	0000041d 	.word	0x0000041d
 8001fb8:	7fffffff 	.word	0x7fffffff
 8001fbc:	00000433 	.word	0x00000433
 8001fc0:	00000413 	.word	0x00000413
 8001fc4:	fffffbed 	.word	0xfffffbed

08001fc8 <__aeabi_i2d>:
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	2800      	cmp	r0, #0
 8001fcc:	d016      	beq.n	8001ffc <__aeabi_i2d+0x34>
 8001fce:	17c3      	asrs	r3, r0, #31
 8001fd0:	18c5      	adds	r5, r0, r3
 8001fd2:	405d      	eors	r5, r3
 8001fd4:	0fc4      	lsrs	r4, r0, #31
 8001fd6:	0028      	movs	r0, r5
 8001fd8:	f000 f84c 	bl	8002074 <__clzsi2>
 8001fdc:	4a11      	ldr	r2, [pc, #68]	; (8002024 <__aeabi_i2d+0x5c>)
 8001fde:	1a12      	subs	r2, r2, r0
 8001fe0:	280a      	cmp	r0, #10
 8001fe2:	dc16      	bgt.n	8002012 <__aeabi_i2d+0x4a>
 8001fe4:	0003      	movs	r3, r0
 8001fe6:	002e      	movs	r6, r5
 8001fe8:	3315      	adds	r3, #21
 8001fea:	409e      	lsls	r6, r3
 8001fec:	230b      	movs	r3, #11
 8001fee:	1a18      	subs	r0, r3, r0
 8001ff0:	40c5      	lsrs	r5, r0
 8001ff2:	0552      	lsls	r2, r2, #21
 8001ff4:	032d      	lsls	r5, r5, #12
 8001ff6:	0b2d      	lsrs	r5, r5, #12
 8001ff8:	0d53      	lsrs	r3, r2, #21
 8001ffa:	e003      	b.n	8002004 <__aeabi_i2d+0x3c>
 8001ffc:	2400      	movs	r4, #0
 8001ffe:	2300      	movs	r3, #0
 8002000:	2500      	movs	r5, #0
 8002002:	2600      	movs	r6, #0
 8002004:	051b      	lsls	r3, r3, #20
 8002006:	432b      	orrs	r3, r5
 8002008:	07e4      	lsls	r4, r4, #31
 800200a:	4323      	orrs	r3, r4
 800200c:	0030      	movs	r0, r6
 800200e:	0019      	movs	r1, r3
 8002010:	bd70      	pop	{r4, r5, r6, pc}
 8002012:	380b      	subs	r0, #11
 8002014:	4085      	lsls	r5, r0
 8002016:	0552      	lsls	r2, r2, #21
 8002018:	032d      	lsls	r5, r5, #12
 800201a:	2600      	movs	r6, #0
 800201c:	0b2d      	lsrs	r5, r5, #12
 800201e:	0d53      	lsrs	r3, r2, #21
 8002020:	e7f0      	b.n	8002004 <__aeabi_i2d+0x3c>
 8002022:	46c0      	nop			; (mov r8, r8)
 8002024:	0000041e 	.word	0x0000041e

08002028 <__aeabi_ui2d>:
 8002028:	b510      	push	{r4, lr}
 800202a:	1e04      	subs	r4, r0, #0
 800202c:	d010      	beq.n	8002050 <__aeabi_ui2d+0x28>
 800202e:	f000 f821 	bl	8002074 <__clzsi2>
 8002032:	4b0f      	ldr	r3, [pc, #60]	; (8002070 <__aeabi_ui2d+0x48>)
 8002034:	1a1b      	subs	r3, r3, r0
 8002036:	280a      	cmp	r0, #10
 8002038:	dc11      	bgt.n	800205e <__aeabi_ui2d+0x36>
 800203a:	220b      	movs	r2, #11
 800203c:	0021      	movs	r1, r4
 800203e:	1a12      	subs	r2, r2, r0
 8002040:	40d1      	lsrs	r1, r2
 8002042:	3015      	adds	r0, #21
 8002044:	030a      	lsls	r2, r1, #12
 8002046:	055b      	lsls	r3, r3, #21
 8002048:	4084      	lsls	r4, r0
 800204a:	0b12      	lsrs	r2, r2, #12
 800204c:	0d5b      	lsrs	r3, r3, #21
 800204e:	e001      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002050:	2300      	movs	r3, #0
 8002052:	2200      	movs	r2, #0
 8002054:	051b      	lsls	r3, r3, #20
 8002056:	4313      	orrs	r3, r2
 8002058:	0020      	movs	r0, r4
 800205a:	0019      	movs	r1, r3
 800205c:	bd10      	pop	{r4, pc}
 800205e:	0022      	movs	r2, r4
 8002060:	380b      	subs	r0, #11
 8002062:	4082      	lsls	r2, r0
 8002064:	055b      	lsls	r3, r3, #21
 8002066:	0312      	lsls	r2, r2, #12
 8002068:	2400      	movs	r4, #0
 800206a:	0b12      	lsrs	r2, r2, #12
 800206c:	0d5b      	lsrs	r3, r3, #21
 800206e:	e7f1      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002070:	0000041e 	.word	0x0000041e

08002074 <__clzsi2>:
 8002074:	211c      	movs	r1, #28
 8002076:	2301      	movs	r3, #1
 8002078:	041b      	lsls	r3, r3, #16
 800207a:	4298      	cmp	r0, r3
 800207c:	d301      	bcc.n	8002082 <__clzsi2+0xe>
 800207e:	0c00      	lsrs	r0, r0, #16
 8002080:	3910      	subs	r1, #16
 8002082:	0a1b      	lsrs	r3, r3, #8
 8002084:	4298      	cmp	r0, r3
 8002086:	d301      	bcc.n	800208c <__clzsi2+0x18>
 8002088:	0a00      	lsrs	r0, r0, #8
 800208a:	3908      	subs	r1, #8
 800208c:	091b      	lsrs	r3, r3, #4
 800208e:	4298      	cmp	r0, r3
 8002090:	d301      	bcc.n	8002096 <__clzsi2+0x22>
 8002092:	0900      	lsrs	r0, r0, #4
 8002094:	3904      	subs	r1, #4
 8002096:	a202      	add	r2, pc, #8	; (adr r2, 80020a0 <__clzsi2+0x2c>)
 8002098:	5c10      	ldrb	r0, [r2, r0]
 800209a:	1840      	adds	r0, r0, r1
 800209c:	4770      	bx	lr
 800209e:	46c0      	nop			; (mov r8, r8)
 80020a0:	02020304 	.word	0x02020304
 80020a4:	01010101 	.word	0x01010101
	...

080020b0 <write8>:
unsigned char tx_data[32]={1};



void write8(unsigned char addr,uint8_t data,uint16_t GPIO_Pin)
{
 80020b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
	tx_data[0] = addr;
	tx_data[1] = data;
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 80020b2:	2690      	movs	r6, #144	; 0x90
{
 80020b4:	0014      	movs	r4, r2
	tx_data[0] = addr;
 80020b6:	4d0b      	ldr	r5, [pc, #44]	; (80020e4 <write8+0x34>)
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 80020b8:	05f6      	lsls	r6, r6, #23
	tx_data[0] = addr;
 80020ba:	7028      	strb	r0, [r5, #0]
	tx_data[1] = data;
 80020bc:	7069      	strb	r1, [r5, #1]
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 80020be:	0030      	movs	r0, r6
 80020c0:	0021      	movs	r1, r4
 80020c2:	2200      	movs	r2, #0
 80020c4:	f000 fe48 	bl	8002d58 <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(&hspi1, tx_data, rx_data, 2, 0x10);
 80020c8:	2310      	movs	r3, #16
 80020ca:	0029      	movs	r1, r5
 80020cc:	9300      	str	r3, [sp, #0]
 80020ce:	4a06      	ldr	r2, [pc, #24]	; (80020e8 <write8+0x38>)
 80020d0:	3b0e      	subs	r3, #14
 80020d2:	4806      	ldr	r0, [pc, #24]	; (80020ec <write8+0x3c>)
 80020d4:	f001 faf6 	bl	80036c4 <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_SET);
 80020d8:	0030      	movs	r0, r6
 80020da:	2201      	movs	r2, #1
 80020dc:	0021      	movs	r1, r4
 80020de:	f000 fe3b 	bl	8002d58 <HAL_GPIO_WritePin>
}
 80020e2:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
 80020e4:	20000020 	.word	0x20000020
 80020e8:	20000000 	.word	0x20000000
 80020ec:	20000278 	.word	0x20000278

080020f0 <read8>:

uint8_t read8(unsigned char reg,uint16_t GPIO_Pin)
{
  int8_t value;
	tx_data[0] = reg | 0b10000000;
 80020f0:	2380      	movs	r3, #128	; 0x80
{
 80020f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 80020f4:	2790      	movs	r7, #144	; 0x90
	tx_data[0] = reg | 0b10000000;
 80020f6:	4d0d      	ldr	r5, [pc, #52]	; (800212c <read8+0x3c>)
 80020f8:	425b      	negs	r3, r3
 80020fa:	4303      	orrs	r3, r0
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 80020fc:	05ff      	lsls	r7, r7, #23
 80020fe:	0038      	movs	r0, r7
	tx_data[0] = reg | 0b10000000;
 8002100:	702b      	strb	r3, [r5, #0]
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 8002102:	2200      	movs	r2, #0
{
 8002104:	000c      	movs	r4, r1
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 8002106:	f000 fe27 	bl	8002d58 <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(&hspi1, tx_data, rx_data, 3, 0x10);
 800210a:	2310      	movs	r3, #16
 800210c:	4e08      	ldr	r6, [pc, #32]	; (8002130 <read8+0x40>)
 800210e:	0029      	movs	r1, r5
 8002110:	0032      	movs	r2, r6
 8002112:	9300      	str	r3, [sp, #0]
 8002114:	4807      	ldr	r0, [pc, #28]	; (8002134 <read8+0x44>)
 8002116:	3b0d      	subs	r3, #13
 8002118:	f001 fad4 	bl	80036c4 <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_SET);
 800211c:	0038      	movs	r0, r7
 800211e:	2201      	movs	r2, #1
 8002120:	0021      	movs	r1, r4
 8002122:	f000 fe19 	bl	8002d58 <HAL_GPIO_WritePin>
	value = rx_data[2];
  return value;
 8002126:	78b0      	ldrb	r0, [r6, #2]

}
 8002128:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800212a:	46c0      	nop			; (mov r8, r8)
 800212c:	20000020 	.word	0x20000020
 8002130:	20000000 	.word	0x20000000
 8002134:	20000278 	.word	0x20000278

08002138 <read16>:
uint16_t read16(unsigned char reg,uint16_t GPIO_Pin)
{
  uint16_t value;
	tx_data[0] = reg | 0b10000000;
 8002138:	2380      	movs	r3, #128	; 0x80
{
 800213a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800213c:	2790      	movs	r7, #144	; 0x90
	tx_data[0] = reg | 0b10000000;
 800213e:	4e0f      	ldr	r6, [pc, #60]	; (800217c <read16+0x44>)
 8002140:	425b      	negs	r3, r3
 8002142:	4303      	orrs	r3, r0
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 8002144:	05ff      	lsls	r7, r7, #23
 8002146:	0038      	movs	r0, r7
	tx_data[0] = reg | 0b10000000;
 8002148:	7033      	strb	r3, [r6, #0]
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800214a:	2200      	movs	r2, #0
{
 800214c:	000c      	movs	r4, r1
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800214e:	f000 fe03 	bl	8002d58 <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(&hspi1, tx_data, rx_data, 4, 0x10);
 8002152:	2310      	movs	r3, #16
 8002154:	4d0a      	ldr	r5, [pc, #40]	; (8002180 <read16+0x48>)
 8002156:	0031      	movs	r1, r6
 8002158:	002a      	movs	r2, r5
 800215a:	9300      	str	r3, [sp, #0]
 800215c:	4809      	ldr	r0, [pc, #36]	; (8002184 <read16+0x4c>)
 800215e:	3b0c      	subs	r3, #12
 8002160:	f001 fab0 	bl	80036c4 <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_SET);
 8002164:	0038      	movs	r0, r7
 8002166:	2201      	movs	r2, #1
 8002168:	0021      	movs	r1, r4
 800216a:	f000 fdf5 	bl	8002d58 <HAL_GPIO_WritePin>
	value = (rx_data[3]<<8) + rx_data[2];
 800216e:	78eb      	ldrb	r3, [r5, #3]
 8002170:	78a8      	ldrb	r0, [r5, #2]
 8002172:	021b      	lsls	r3, r3, #8
 8002174:	18c0      	adds	r0, r0, r3
  return value;
 8002176:	b280      	uxth	r0, r0
}
 8002178:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800217a:	46c0      	nop			; (mov r8, r8)
 800217c:	20000020 	.word	0x20000020
 8002180:	20000000 	.word	0x20000000
 8002184:	20000278 	.word	0x20000278

08002188 <read32>:

uint32_t read32(unsigned char reg,uint16_t GPIO_Pin)
{
  uint32_t value;
	tx_data[0] = reg | 0b10000000;
 8002188:	2380      	movs	r3, #128	; 0x80
{
 800218a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800218c:	2790      	movs	r7, #144	; 0x90
	tx_data[0] = reg | 0b10000000;
 800218e:	4e10      	ldr	r6, [pc, #64]	; (80021d0 <read32+0x48>)
 8002190:	425b      	negs	r3, r3
 8002192:	4303      	orrs	r3, r0
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 8002194:	05ff      	lsls	r7, r7, #23
 8002196:	0038      	movs	r0, r7
	tx_data[0] = reg | 0b10000000;
 8002198:	7033      	strb	r3, [r6, #0]
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800219a:	2200      	movs	r2, #0
{
 800219c:	000d      	movs	r5, r1
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_RESET);
 800219e:	f000 fddb 	bl	8002d58 <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(&hspi1, tx_data, rx_data, 5, 0x10);
 80021a2:	2310      	movs	r3, #16
 80021a4:	4c0b      	ldr	r4, [pc, #44]	; (80021d4 <read32+0x4c>)
 80021a6:	0031      	movs	r1, r6
 80021a8:	0022      	movs	r2, r4
 80021aa:	9300      	str	r3, [sp, #0]
 80021ac:	480a      	ldr	r0, [pc, #40]	; (80021d8 <read32+0x50>)
 80021ae:	3b0b      	subs	r3, #11
 80021b0:	f001 fa88 	bl	80036c4 <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, GPIO_Pin, GPIO_PIN_SET);
 80021b4:	0038      	movs	r0, r7
 80021b6:	0029      	movs	r1, r5
 80021b8:	2201      	movs	r2, #1
 80021ba:	f000 fdcd 	bl	8002d58 <HAL_GPIO_WritePin>
	value = (rx_data[4]<<16) + (rx_data[3]<<8) + rx_data[2];
 80021be:	7920      	ldrb	r0, [r4, #4]
 80021c0:	78e3      	ldrb	r3, [r4, #3]
 80021c2:	0400      	lsls	r0, r0, #16
 80021c4:	021b      	lsls	r3, r3, #8
 80021c6:	18c0      	adds	r0, r0, r3
 80021c8:	78a3      	ldrb	r3, [r4, #2]
 80021ca:	18c0      	adds	r0, r0, r3
  return value;
}
 80021cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80021ce:	46c0      	nop			; (mov r8, r8)
 80021d0:	20000020 	.word	0x20000020
 80021d4:	20000000 	.word	0x20000000
 80021d8:	20000278 	.word	0x20000278

080021dc <BMP390_Init>:


uint8_t BMP390_Init(uint16_t GPIO_Pin)
{
 80021dc:	b570      	push	{r4, r5, r6, lr}
 80021de:	0004      	movs	r4, r0
	uint8_t BMP390_ID;
	write8(CMD_Addr,0x36,GPIO_Pin);//RESET
 80021e0:	0002      	movs	r2, r0
 80021e2:	2136      	movs	r1, #54	; 0x36
 80021e4:	207e      	movs	r0, #126	; 0x7e
 80021e6:	f7ff ff63 	bl	80020b0 <write8>
	BMP390_ID = read8(CHIP_ID_Addr,GPIO_Pin);//Read the CHIP_ID-0x60
 80021ea:	0021      	movs	r1, r4
 80021ec:	2080      	movs	r0, #128	; 0x80
 80021ee:	f7ff ff7f 	bl	80020f0 <read8>
 80021f2:	0005      	movs	r5, r0
	write8(PWR_CTRL_Addr,0x33,GPIO_Pin);//Set Working mode and state of sensor（P:E, T:E，normal mode）
 80021f4:	0022      	movs	r2, r4
 80021f6:	2133      	movs	r1, #51	; 0x33
 80021f8:	201b      	movs	r0, #27
 80021fa:	f7ff ff59 	bl	80020b0 <write8>
	write8(IF_CONF_Addr,0x00,GPIO_Pin);//Serial interface settings
 80021fe:	0022      	movs	r2, r4
 8002200:	2100      	movs	r1, #0
 8002202:	201a      	movs	r0, #26
 8002204:	f7ff ff54 	bl	80020b0 <write8>
	write8(OSR_Addr,0x00,GPIO_Pin);//Set the PM-RATE and PM-PRC,Set the TMPI-RATE and TMP-PRC P:16,T:16
 8002208:	0022      	movs	r2, r4
 800220a:	2100      	movs	r1, #0
 800220c:	201c      	movs	r0, #28
 800220e:	f7ff ff4f 	bl	80020b0 <write8>
	write8(ODR_Addr,0x00,GPIO_Pin);//Set the configuration of the output data rates by means of setting the subdivision/subsampling.（200HZ） 50HZ
 8002212:	0022      	movs	r2, r4
 8002214:	2100      	movs	r1, #0
 8002216:	201d      	movs	r0, #29
 8002218:	f7ff ff4a 	bl	80020b0 <write8>
	write8(CONFIG_Addr,0x00,GPIO_Pin);//IIR filter coeffcients（IIR0）
 800221c:	0022      	movs	r2, r4
 800221e:	2100      	movs	r1, #0
 8002220:	201f      	movs	r0, #31
 8002222:	f7ff ff45 	bl	80020b0 <write8>
	return BMP390_ID;
}
 8002226:	0028      	movs	r0, r5
 8002228:	bd70      	pop	{r4, r5, r6, pc}

0800222a <Parameter_Reading>:



void Parameter_Reading(int *Pressure_Para,int *Temperature_Para)
{
 800222a:	b570      	push	{r4, r5, r6, lr}
 800222c:	0004      	movs	r4, r0
 800222e:	000d      	movs	r5, r1

	//Temperature coefficients
	Temperature_Para[0] = read16(BMP390_REGISTER_DIG_T1,SPI_CS1_Pin);//T1
 8002230:	2031      	movs	r0, #49	; 0x31
 8002232:	2101      	movs	r1, #1
 8002234:	f7ff ff80 	bl	8002138 <read16>
	Temperature_Para[1] = read16(BMP390_REGISTER_DIG_T2,SPI_CS1_Pin);//T2
 8002238:	2101      	movs	r1, #1
	Temperature_Para[0] = read16(BMP390_REGISTER_DIG_T1,SPI_CS1_Pin);//T1
 800223a:	6028      	str	r0, [r5, #0]
	Temperature_Para[1] = read16(BMP390_REGISTER_DIG_T2,SPI_CS1_Pin);//T2
 800223c:	2033      	movs	r0, #51	; 0x33
 800223e:	f7ff ff7b 	bl	8002138 <read16>
	Temperature_Para[2] = read8(BMP390_REGISTER_DIG_T3,SPI_CS1_Pin);//T3
 8002242:	2101      	movs	r1, #1
	Temperature_Para[1] = read16(BMP390_REGISTER_DIG_T2,SPI_CS1_Pin);//T2
 8002244:	6068      	str	r0, [r5, #4]
	Temperature_Para[2] = read8(BMP390_REGISTER_DIG_T3,SPI_CS1_Pin);//T3
 8002246:	2035      	movs	r0, #53	; 0x35
 8002248:	f7ff ff52 	bl	80020f0 <read8>
	//if(Temperature_Para[2]&0x80) Temperature_Para[2] = Temperature_Para[2]-Total_Number_8;
	//Pressure coefficients
	//Coefficient P1
	Pressure_Para[0] = read16(BMP390_REGISTER_DIG_P1,SPI_CS1_Pin);//P1
 800224c:	2101      	movs	r1, #1
	Temperature_Para[2] = read8(BMP390_REGISTER_DIG_T3,SPI_CS1_Pin);//T3
 800224e:	60a8      	str	r0, [r5, #8]
	Pressure_Para[0] = read16(BMP390_REGISTER_DIG_P1,SPI_CS1_Pin);//P1
 8002250:	2036      	movs	r0, #54	; 0x36
 8002252:	f7ff ff71 	bl	8002138 <read16>
	//if(Pressure_Para[0]&0x8000) Pressure_Para[0] = Pressure_Para[0] - Total_Number_16;//P1
	//Coefficient P2
	Pressure_Para[1] = read16(BMP390_REGISTER_DIG_P2,SPI_CS1_Pin);//P2
 8002256:	2101      	movs	r1, #1
	Pressure_Para[0] = read16(BMP390_REGISTER_DIG_P1,SPI_CS1_Pin);//P1
 8002258:	6020      	str	r0, [r4, #0]
	Pressure_Para[1] = read16(BMP390_REGISTER_DIG_P2,SPI_CS1_Pin);//P2
 800225a:	2038      	movs	r0, #56	; 0x38
 800225c:	f7ff ff6c 	bl	8002138 <read16>
	//if(Pressure_Para[1]&0x8000) Pressure_Para[1] = Pressure_Para[1] - Total_Number_16;//P2
	//Coefficient P3
	Pressure_Para[2] = read8(BMP390_REGISTER_DIG_P3,SPI_CS1_Pin);//P3
 8002260:	2101      	movs	r1, #1
	Pressure_Para[1] = read16(BMP390_REGISTER_DIG_P2,SPI_CS1_Pin);//P2
 8002262:	6060      	str	r0, [r4, #4]
	Pressure_Para[2] = read8(BMP390_REGISTER_DIG_P3,SPI_CS1_Pin);//P3
 8002264:	203a      	movs	r0, #58	; 0x3a
 8002266:	f7ff ff43 	bl	80020f0 <read8>
	//if(Pressure_Para[2]&0x80) Pressure_Para[2] = Pressure_Para[2] - Total_Number_8;//P3
	//Coefficient P4
	Pressure_Para[3] = read8(BMP390_REGISTER_DIG_P4,SPI_CS1_Pin);//P4
 800226a:	2101      	movs	r1, #1
	Pressure_Para[2] = read8(BMP390_REGISTER_DIG_P3,SPI_CS1_Pin);//P3
 800226c:	60a0      	str	r0, [r4, #8]
	Pressure_Para[3] = read8(BMP390_REGISTER_DIG_P4,SPI_CS1_Pin);//P4
 800226e:	203b      	movs	r0, #59	; 0x3b
 8002270:	f7ff ff3e 	bl	80020f0 <read8>
	//if(Pressure_Para[3]&0x80) Pressure_Para[3] = Pressure_Para[3] - Total_Number_8;//P4
	//Coefficient P5
	Pressure_Para[4] = read16(BMP390_REGISTER_DIG_P5,SPI_CS1_Pin);//P5
 8002274:	2101      	movs	r1, #1
	Pressure_Para[3] = read8(BMP390_REGISTER_DIG_P4,SPI_CS1_Pin);//P4
 8002276:	60e0      	str	r0, [r4, #12]
	Pressure_Para[4] = read16(BMP390_REGISTER_DIG_P5,SPI_CS1_Pin);//P5
 8002278:	203c      	movs	r0, #60	; 0x3c
 800227a:	f7ff ff5d 	bl	8002138 <read16>
	//Coefficient P6
	Pressure_Para[5] = read16(BMP390_REGISTER_DIG_P6,SPI_CS1_Pin);//P6
 800227e:	2101      	movs	r1, #1
	Pressure_Para[4] = read16(BMP390_REGISTER_DIG_P5,SPI_CS1_Pin);//P5
 8002280:	6120      	str	r0, [r4, #16]
	Pressure_Para[5] = read16(BMP390_REGISTER_DIG_P6,SPI_CS1_Pin);//P6
 8002282:	203e      	movs	r0, #62	; 0x3e
 8002284:	f7ff ff58 	bl	8002138 <read16>
	//Coefficient P7
	Pressure_Para[6] = read8(BMP390_REGISTER_DIG_P7,SPI_CS1_Pin);//P7
 8002288:	2101      	movs	r1, #1
	Pressure_Para[5] = read16(BMP390_REGISTER_DIG_P6,SPI_CS1_Pin);//P6
 800228a:	6160      	str	r0, [r4, #20]
	Pressure_Para[6] = read8(BMP390_REGISTER_DIG_P7,SPI_CS1_Pin);//P7
 800228c:	2040      	movs	r0, #64	; 0x40
 800228e:	f7ff ff2f 	bl	80020f0 <read8>
	//if(Pressure_Para[6]&0x80) Pressure_Para[6] = Pressure_Para[6] - Total_Number_8;//P7
	//Coefficient P8
	Pressure_Para[7] = read8(BMP390_REGISTER_DIG_P8,SPI_CS1_Pin);//P8
 8002292:	2101      	movs	r1, #1
	Pressure_Para[6] = read8(BMP390_REGISTER_DIG_P7,SPI_CS1_Pin);//P7
 8002294:	61a0      	str	r0, [r4, #24]
	Pressure_Para[7] = read8(BMP390_REGISTER_DIG_P8,SPI_CS1_Pin);//P8
 8002296:	2041      	movs	r0, #65	; 0x41
 8002298:	f7ff ff2a 	bl	80020f0 <read8>
	//if(Pressure_Para[7]&0x80) Pressure_Para[7] = Pressure_Para[7] - Total_Number_8;//P8
	//Coefficient P9
	Pressure_Para[8] = read16(BMP390_REGISTER_DIG_P9,SPI_CS1_Pin);//P9
 800229c:	2101      	movs	r1, #1
	Pressure_Para[7] = read8(BMP390_REGISTER_DIG_P8,SPI_CS1_Pin);//P8
 800229e:	61e0      	str	r0, [r4, #28]
	Pressure_Para[8] = read16(BMP390_REGISTER_DIG_P9,SPI_CS1_Pin);//P9
 80022a0:	2042      	movs	r0, #66	; 0x42
 80022a2:	f7ff ff49 	bl	8002138 <read16>
	//if(Pressure_Para[8]&0x8000) Pressure_Para[8] = Pressure_Para[8] - Total_Number_16;//P9
	//Coefficient P10
	Pressure_Para[9] = read8(BMP390_REGISTER_DIG_P10,SPI_CS1_Pin);//P10
 80022a6:	2101      	movs	r1, #1
	Pressure_Para[8] = read16(BMP390_REGISTER_DIG_P9,SPI_CS1_Pin);//P9
 80022a8:	6220      	str	r0, [r4, #32]
	Pressure_Para[9] = read8(BMP390_REGISTER_DIG_P10,SPI_CS1_Pin);//P10
 80022aa:	2044      	movs	r0, #68	; 0x44
 80022ac:	f7ff ff20 	bl	80020f0 <read8>
	//if(Pressure_Para[9]&0x80) Pressure_Para[9] = Pressure_Para[9] - Total_Number_8;//P10
	//Coefficient P11
	Pressure_Para[10] = read8(BMP390_REGISTER_DIG_P11,SPI_CS1_Pin);//P11
 80022b0:	2101      	movs	r1, #1
	Pressure_Para[9] = read8(BMP390_REGISTER_DIG_P10,SPI_CS1_Pin);//P10
 80022b2:	6260      	str	r0, [r4, #36]	; 0x24
	Pressure_Para[10] = read8(BMP390_REGISTER_DIG_P11,SPI_CS1_Pin);//P11
 80022b4:	2045      	movs	r0, #69	; 0x45
 80022b6:	f7ff ff1b 	bl	80020f0 <read8>
 80022ba:	62a0      	str	r0, [r4, #40]	; 0x28
	//if(Pressure_Para[10]&0x80) Pressure_Para[10] = Pressure_Para[10] - Total_Number_8;//P11
}
 80022bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080022c0 <Correcting_Pressure>:
double Correcting_Pressure(uint32_t Pressure,int *Pressure_Para,double Corr_Temperature)
{
 80022c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022c2:	b089      	sub	sp, #36	; 0x24
 80022c4:	0014      	movs	r4, r2
 80022c6:	001d      	movs	r5, r3
 80022c8:	9101      	str	r1, [sp, #4]
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;

	  partial_data1 = PAR_P2*Corr_Temperature;
	  partial_data2 = PAR_P3*Corr_Temperature*Corr_Temperature;
	  partial_data3 = PAR_P4*Corr_Temperature*Corr_Temperature*Corr_Temperature;
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 80022ca:	f7ff fead 	bl	8002028 <__aeabi_ui2d>

	  partial_data1 = (double)(Pressure)*(double)(Pressure);
 80022ce:	0002      	movs	r2, r0
 80022d0:	000b      	movs	r3, r1
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 80022d2:	9002      	str	r0, [sp, #8]
 80022d4:	9103      	str	r1, [sp, #12]
	  partial_data1 = (double)(Pressure)*(double)(Pressure);
 80022d6:	f7ff f825 	bl	8001324 <__aeabi_dmul>
	  PAR_P2 = (Pressure_Para[1]-Total_Number_14)/Total_Number_29;
 80022da:	9b01      	ldr	r3, [sp, #4]
	  partial_data1 = (double)(Pressure)*(double)(Pressure);
 80022dc:	9004      	str	r0, [sp, #16]
 80022de:	9105      	str	r1, [sp, #20]
	  PAR_P2 = (Pressure_Para[1]-Total_Number_14)/Total_Number_29;
 80022e0:	6858      	ldr	r0, [r3, #4]
 80022e2:	f7ff fe71 	bl	8001fc8 <__aeabi_i2d>
 80022e6:	2200      	movs	r2, #0
 80022e8:	4b85      	ldr	r3, [pc, #532]	; (8002500 <Correcting_Pressure+0x240>)
 80022ea:	f7ff fa87 	bl	80017fc <__aeabi_dsub>
 80022ee:	2200      	movs	r2, #0
 80022f0:	4b84      	ldr	r3, [pc, #528]	; (8002504 <Correcting_Pressure+0x244>)
 80022f2:	f7ff f817 	bl	8001324 <__aeabi_dmul>
	  partial_data1 = PAR_P2*Corr_Temperature;
 80022f6:	0022      	movs	r2, r4
 80022f8:	002b      	movs	r3, r5
 80022fa:	f7ff f813 	bl	8001324 <__aeabi_dmul>
	  PAR_P1 = (Pressure_Para[0]-Total_Number_14)/Total_Number_20;
 80022fe:	9b01      	ldr	r3, [sp, #4]
	  partial_data1 = PAR_P2*Corr_Temperature;
 8002300:	0006      	movs	r6, r0
	  PAR_P1 = (Pressure_Para[0]-Total_Number_14)/Total_Number_20;
 8002302:	6818      	ldr	r0, [r3, #0]
	  partial_data1 = PAR_P2*Corr_Temperature;
 8002304:	000f      	movs	r7, r1
	  PAR_P1 = (Pressure_Para[0]-Total_Number_14)/Total_Number_20;
 8002306:	f7ff fe5f 	bl	8001fc8 <__aeabi_i2d>
 800230a:	2200      	movs	r2, #0
 800230c:	4b7c      	ldr	r3, [pc, #496]	; (8002500 <Correcting_Pressure+0x240>)
 800230e:	f7ff fa75 	bl	80017fc <__aeabi_dsub>
 8002312:	2200      	movs	r2, #0
 8002314:	4b7c      	ldr	r3, [pc, #496]	; (8002508 <Correcting_Pressure+0x248>)
 8002316:	f7ff f805 	bl	8001324 <__aeabi_dmul>
 800231a:	0002      	movs	r2, r0
 800231c:	000b      	movs	r3, r1
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 800231e:	0030      	movs	r0, r6
 8002320:	0039      	movs	r1, r7
 8002322:	f7fe f8c1 	bl	80004a8 <__aeabi_dadd>
	  PAR_P3 = Pressure_Para[2]/Total_Number_32;
 8002326:	9b01      	ldr	r3, [sp, #4]
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 8002328:	0006      	movs	r6, r0
	  PAR_P3 = Pressure_Para[2]/Total_Number_32;
 800232a:	6898      	ldr	r0, [r3, #8]
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 800232c:	000f      	movs	r7, r1
	  PAR_P3 = Pressure_Para[2]/Total_Number_32;
 800232e:	f7ff fe4b 	bl	8001fc8 <__aeabi_i2d>
 8002332:	2200      	movs	r2, #0
 8002334:	4b75      	ldr	r3, [pc, #468]	; (800250c <Correcting_Pressure+0x24c>)
 8002336:	f7fe fff5 	bl	8001324 <__aeabi_dmul>
	  partial_data2 = PAR_P3*Corr_Temperature*Corr_Temperature;
 800233a:	0022      	movs	r2, r4
 800233c:	002b      	movs	r3, r5
 800233e:	f7fe fff1 	bl	8001324 <__aeabi_dmul>
 8002342:	0022      	movs	r2, r4
 8002344:	002b      	movs	r3, r5
 8002346:	f7fe ffed 	bl	8001324 <__aeabi_dmul>
 800234a:	0002      	movs	r2, r0
 800234c:	000b      	movs	r3, r1
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 800234e:	0030      	movs	r0, r6
 8002350:	0039      	movs	r1, r7
 8002352:	f7fe f8a9 	bl	80004a8 <__aeabi_dadd>
	  PAR_P4 = Pressure_Para[3]/Total_Number_32/Total_Number_5;
 8002356:	9b01      	ldr	r3, [sp, #4]
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 8002358:	0006      	movs	r6, r0
	  PAR_P4 = Pressure_Para[3]/Total_Number_32/Total_Number_5;
 800235a:	68d8      	ldr	r0, [r3, #12]
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 800235c:	000f      	movs	r7, r1
	  PAR_P4 = Pressure_Para[3]/Total_Number_32/Total_Number_5;
 800235e:	f7ff fe33 	bl	8001fc8 <__aeabi_i2d>
 8002362:	2200      	movs	r2, #0
 8002364:	4b69      	ldr	r3, [pc, #420]	; (800250c <Correcting_Pressure+0x24c>)
 8002366:	f7fe ffdd 	bl	8001324 <__aeabi_dmul>
 800236a:	2200      	movs	r2, #0
 800236c:	4b68      	ldr	r3, [pc, #416]	; (8002510 <Correcting_Pressure+0x250>)
 800236e:	f7fe ffd9 	bl	8001324 <__aeabi_dmul>
	  partial_data3 = PAR_P4*Corr_Temperature*Corr_Temperature*Corr_Temperature;
 8002372:	0022      	movs	r2, r4
 8002374:	002b      	movs	r3, r5
 8002376:	f7fe ffd5 	bl	8001324 <__aeabi_dmul>
 800237a:	0022      	movs	r2, r4
 800237c:	002b      	movs	r3, r5
 800237e:	f7fe ffd1 	bl	8001324 <__aeabi_dmul>
 8002382:	0022      	movs	r2, r4
 8002384:	002b      	movs	r3, r5
 8002386:	f7fe ffcd 	bl	8001324 <__aeabi_dmul>
 800238a:	0002      	movs	r2, r0
 800238c:	000b      	movs	r3, r1
	  partial_out2 = (double)(Pressure)*(PAR_P1+partial_data1+partial_data2+partial_data3);
 800238e:	0030      	movs	r0, r6
 8002390:	0039      	movs	r1, r7
 8002392:	f7fe f889 	bl	80004a8 <__aeabi_dadd>
 8002396:	9a02      	ldr	r2, [sp, #8]
 8002398:	9b03      	ldr	r3, [sp, #12]
 800239a:	f7fe ffc3 	bl	8001324 <__aeabi_dmul>
 800239e:	9006      	str	r0, [sp, #24]
 80023a0:	9107      	str	r1, [sp, #28]
	  PAR_P6 = Pressure_Para[5]/Total_Number_6;
 80023a2:	9b01      	ldr	r3, [sp, #4]
 80023a4:	6958      	ldr	r0, [r3, #20]
 80023a6:	f7ff fe0f 	bl	8001fc8 <__aeabi_i2d>
 80023aa:	2200      	movs	r2, #0
 80023ac:	4b59      	ldr	r3, [pc, #356]	; (8002514 <Correcting_Pressure+0x254>)
 80023ae:	f7fe ffb9 	bl	8001324 <__aeabi_dmul>
	  partial_data1 = PAR_P6*Corr_Temperature;
 80023b2:	0022      	movs	r2, r4
 80023b4:	002b      	movs	r3, r5
 80023b6:	f7fe ffb5 	bl	8001324 <__aeabi_dmul>
	  PAR_P5 = Pressure_Para[4]/Total_Number_Neg_3;
 80023ba:	9b01      	ldr	r3, [sp, #4]
	  partial_data1 = PAR_P6*Corr_Temperature;
 80023bc:	0006      	movs	r6, r0
	  PAR_P5 = Pressure_Para[4]/Total_Number_Neg_3;
 80023be:	6918      	ldr	r0, [r3, #16]
	  partial_data1 = PAR_P6*Corr_Temperature;
 80023c0:	000f      	movs	r7, r1
	  PAR_P5 = Pressure_Para[4]/Total_Number_Neg_3;
 80023c2:	f7ff fe01 	bl	8001fc8 <__aeabi_i2d>
 80023c6:	2200      	movs	r2, #0
 80023c8:	4b53      	ldr	r3, [pc, #332]	; (8002518 <Correcting_Pressure+0x258>)
 80023ca:	f7fe ffab 	bl	8001324 <__aeabi_dmul>
 80023ce:	0002      	movs	r2, r0
 80023d0:	000b      	movs	r3, r1
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 80023d2:	0030      	movs	r0, r6
 80023d4:	0039      	movs	r1, r7
 80023d6:	f7fe f867 	bl	80004a8 <__aeabi_dadd>
	  PAR_P7 = Pressure_Para[6]/Total_Number_8;
 80023da:	9b01      	ldr	r3, [sp, #4]
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 80023dc:	0006      	movs	r6, r0
	  PAR_P7 = Pressure_Para[6]/Total_Number_8;
 80023de:	6998      	ldr	r0, [r3, #24]
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 80023e0:	000f      	movs	r7, r1
	  PAR_P7 = Pressure_Para[6]/Total_Number_8;
 80023e2:	f7ff fdf1 	bl	8001fc8 <__aeabi_i2d>
 80023e6:	2200      	movs	r2, #0
 80023e8:	4b4c      	ldr	r3, [pc, #304]	; (800251c <Correcting_Pressure+0x25c>)
 80023ea:	f7fe ff9b 	bl	8001324 <__aeabi_dmul>
	  partial_data2 = PAR_P7*Corr_Temperature*Corr_Temperature;
 80023ee:	0022      	movs	r2, r4
 80023f0:	002b      	movs	r3, r5
 80023f2:	f7fe ff97 	bl	8001324 <__aeabi_dmul>
 80023f6:	0022      	movs	r2, r4
 80023f8:	002b      	movs	r3, r5
 80023fa:	f7fe ff93 	bl	8001324 <__aeabi_dmul>
 80023fe:	0002      	movs	r2, r0
 8002400:	000b      	movs	r3, r1
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 8002402:	0030      	movs	r0, r6
 8002404:	0039      	movs	r1, r7
 8002406:	f7fe f84f 	bl	80004a8 <__aeabi_dadd>
	  PAR_P8 = Pressure_Para[7]/Total_Number_15;
 800240a:	9b01      	ldr	r3, [sp, #4]
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 800240c:	0006      	movs	r6, r0
	  PAR_P8 = Pressure_Para[7]/Total_Number_15;
 800240e:	69d8      	ldr	r0, [r3, #28]
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 8002410:	000f      	movs	r7, r1
	  PAR_P8 = Pressure_Para[7]/Total_Number_15;
 8002412:	f7ff fdd9 	bl	8001fc8 <__aeabi_i2d>
 8002416:	23fc      	movs	r3, #252	; 0xfc
 8002418:	2200      	movs	r2, #0
 800241a:	059b      	lsls	r3, r3, #22
 800241c:	f7fe ff82 	bl	8001324 <__aeabi_dmul>
	  partial_data3 = PAR_P8*Corr_Temperature*Corr_Temperature*Corr_Temperature;
 8002420:	0022      	movs	r2, r4
 8002422:	002b      	movs	r3, r5
 8002424:	f7fe ff7e 	bl	8001324 <__aeabi_dmul>
 8002428:	0022      	movs	r2, r4
 800242a:	002b      	movs	r3, r5
 800242c:	f7fe ff7a 	bl	8001324 <__aeabi_dmul>
 8002430:	0022      	movs	r2, r4
 8002432:	002b      	movs	r3, r5
 8002434:	f7fe ff76 	bl	8001324 <__aeabi_dmul>
 8002438:	0002      	movs	r2, r0
 800243a:	000b      	movs	r3, r1
	  partial_out1 = PAR_P5+partial_data1+partial_data2+partial_data3;
 800243c:	0030      	movs	r0, r6
 800243e:	0039      	movs	r1, r7
 8002440:	f7fe f832 	bl	80004a8 <__aeabi_dadd>
 8002444:	0002      	movs	r2, r0
 8002446:	000b      	movs	r3, r1
	  partial_data2 = PAR_P9+PAR_P10*Corr_Temperature;
	  partial_data3 = partial_data1*partial_data2;
	  partial_data4 = partial_data3+(double)(Pressure)*(double)(Pressure)*(double)(Pressure)*PAR_P11;
	  Corr_Pressure = partial_out1+partial_out2+partial_data4;
 8002448:	9806      	ldr	r0, [sp, #24]
 800244a:	9907      	ldr	r1, [sp, #28]
 800244c:	f7fe f82c 	bl	80004a8 <__aeabi_dadd>
	  PAR_P10 =  Pressure_Para[9]/Total_Number_32/Total_Number_16;
 8002450:	9b01      	ldr	r3, [sp, #4]
	  Corr_Pressure = partial_out1+partial_out2+partial_data4;
 8002452:	9006      	str	r0, [sp, #24]
 8002454:	9107      	str	r1, [sp, #28]
	  PAR_P10 =  Pressure_Para[9]/Total_Number_32/Total_Number_16;
 8002456:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002458:	f7ff fdb6 	bl	8001fc8 <__aeabi_i2d>
 800245c:	2200      	movs	r2, #0
 800245e:	4b2b      	ldr	r3, [pc, #172]	; (800250c <Correcting_Pressure+0x24c>)
 8002460:	f7fe ff60 	bl	8001324 <__aeabi_dmul>
 8002464:	2200      	movs	r2, #0
 8002466:	4b2e      	ldr	r3, [pc, #184]	; (8002520 <Correcting_Pressure+0x260>)
 8002468:	f7fe ff5c 	bl	8001324 <__aeabi_dmul>
	  partial_data2 = PAR_P9+PAR_P10*Corr_Temperature;
 800246c:	0022      	movs	r2, r4
 800246e:	002b      	movs	r3, r5
 8002470:	f7fe ff58 	bl	8001324 <__aeabi_dmul>
	  PAR_P9 =  Pressure_Para[8]/Total_Number_32/Total_Number_16;
 8002474:	9b01      	ldr	r3, [sp, #4]
	  partial_data2 = PAR_P9+PAR_P10*Corr_Temperature;
 8002476:	0006      	movs	r6, r0
	  PAR_P9 =  Pressure_Para[8]/Total_Number_32/Total_Number_16;
 8002478:	6a18      	ldr	r0, [r3, #32]
	  partial_data2 = PAR_P9+PAR_P10*Corr_Temperature;
 800247a:	000f      	movs	r7, r1
	  PAR_P9 =  Pressure_Para[8]/Total_Number_32/Total_Number_16;
 800247c:	f7ff fda4 	bl	8001fc8 <__aeabi_i2d>
 8002480:	2200      	movs	r2, #0
 8002482:	4b22      	ldr	r3, [pc, #136]	; (800250c <Correcting_Pressure+0x24c>)
 8002484:	f7fe ff4e 	bl	8001324 <__aeabi_dmul>
 8002488:	2200      	movs	r2, #0
 800248a:	4b25      	ldr	r3, [pc, #148]	; (8002520 <Correcting_Pressure+0x260>)
 800248c:	f7fe ff4a 	bl	8001324 <__aeabi_dmul>
 8002490:	0002      	movs	r2, r0
 8002492:	000b      	movs	r3, r1
	  partial_data2 = PAR_P9+PAR_P10*Corr_Temperature;
 8002494:	0030      	movs	r0, r6
 8002496:	0039      	movs	r1, r7
 8002498:	f7fe f806 	bl	80004a8 <__aeabi_dadd>
	  partial_data3 = partial_data1*partial_data2;
 800249c:	9a04      	ldr	r2, [sp, #16]
 800249e:	9b05      	ldr	r3, [sp, #20]
 80024a0:	f7fe ff40 	bl	8001324 <__aeabi_dmul>
	  PAR_P11 =  Pressure_Para[10]/Total_Number_32/Total_Number_32/Total_Number_1;
 80024a4:	9b01      	ldr	r3, [sp, #4]
	  partial_data3 = partial_data1*partial_data2;
 80024a6:	0006      	movs	r6, r0
	  PAR_P11 =  Pressure_Para[10]/Total_Number_32/Total_Number_32/Total_Number_1;
 80024a8:	6a98      	ldr	r0, [r3, #40]	; 0x28
	  partial_data3 = partial_data1*partial_data2;
 80024aa:	000f      	movs	r7, r1
	  PAR_P11 =  Pressure_Para[10]/Total_Number_32/Total_Number_32/Total_Number_1;
 80024ac:	f7ff fd8c 	bl	8001fc8 <__aeabi_i2d>
 80024b0:	2200      	movs	r2, #0
 80024b2:	4b16      	ldr	r3, [pc, #88]	; (800250c <Correcting_Pressure+0x24c>)
 80024b4:	f7fe ff36 	bl	8001324 <__aeabi_dmul>
 80024b8:	2200      	movs	r2, #0
 80024ba:	4b14      	ldr	r3, [pc, #80]	; (800250c <Correcting_Pressure+0x24c>)
 80024bc:	f7fe ff32 	bl	8001324 <__aeabi_dmul>
 80024c0:	2200      	movs	r2, #0
 80024c2:	4b18      	ldr	r3, [pc, #96]	; (8002524 <Correcting_Pressure+0x264>)
 80024c4:	f7fe ff2e 	bl	8001324 <__aeabi_dmul>
	  partial_data4 = partial_data3+(double)(Pressure)*(double)(Pressure)*(double)(Pressure)*PAR_P11;
 80024c8:	9a04      	ldr	r2, [sp, #16]
 80024ca:	9b05      	ldr	r3, [sp, #20]
	  PAR_P11 =  Pressure_Para[10]/Total_Number_32/Total_Number_32/Total_Number_1;
 80024cc:	0004      	movs	r4, r0
 80024ce:	000d      	movs	r5, r1
	  partial_data4 = partial_data3+(double)(Pressure)*(double)(Pressure)*(double)(Pressure)*PAR_P11;
 80024d0:	9802      	ldr	r0, [sp, #8]
 80024d2:	9903      	ldr	r1, [sp, #12]
 80024d4:	f7fe ff26 	bl	8001324 <__aeabi_dmul>
 80024d8:	0002      	movs	r2, r0
 80024da:	000b      	movs	r3, r1
 80024dc:	0020      	movs	r0, r4
 80024de:	0029      	movs	r1, r5
 80024e0:	f7fe ff20 	bl	8001324 <__aeabi_dmul>
 80024e4:	0002      	movs	r2, r0
 80024e6:	000b      	movs	r3, r1
 80024e8:	0030      	movs	r0, r6
 80024ea:	0039      	movs	r1, r7
 80024ec:	f7fd ffdc 	bl	80004a8 <__aeabi_dadd>
 80024f0:	0002      	movs	r2, r0
 80024f2:	000b      	movs	r3, r1
	  Corr_Pressure = partial_out1+partial_out2+partial_data4;
 80024f4:	9806      	ldr	r0, [sp, #24]
 80024f6:	9907      	ldr	r1, [sp, #28]
 80024f8:	f7fd ffd6 	bl	80004a8 <__aeabi_dadd>
	  return Corr_Pressure;
}
 80024fc:	b009      	add	sp, #36	; 0x24
 80024fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002500:	40d00000 	.word	0x40d00000
 8002504:	3e200000 	.word	0x3e200000
 8002508:	3eb00000 	.word	0x3eb00000
 800250c:	3df00000 	.word	0x3df00000
 8002510:	3fa00000 	.word	0x3fa00000
 8002514:	3f900000 	.word	0x3f900000
 8002518:	40200000 	.word	0x40200000
 800251c:	3f700000 	.word	0x3f700000
 8002520:	3ef00000 	.word	0x3ef00000
 8002524:	3fe00000 	.word	0x3fe00000

08002528 <Correcting_Temperature>:

double Correcting_Temperature(uint32_t Temperature,int *Temperature_Para)
{
 8002528:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800252a:	9101      	str	r1, [sp, #4]

	PAR_T1 = Temperature_Para[0]/Total_Number_Neg_8;
	PAR_T2 = Temperature_Para[1]/Total_Number_30;
	PAR_T3 = Temperature_Para[2]/Total_Number_32/Total_Number_16;
	//Calculation
	partial_data1 = (double)(Temperature)-PAR_T1;
 800252c:	f7ff fd7c 	bl	8002028 <__aeabi_ui2d>
	PAR_T1 = Temperature_Para[0]/Total_Number_Neg_8;
 8002530:	9b01      	ldr	r3, [sp, #4]
	partial_data1 = (double)(Temperature)-PAR_T1;
 8002532:	0006      	movs	r6, r0
	PAR_T1 = Temperature_Para[0]/Total_Number_Neg_8;
 8002534:	6818      	ldr	r0, [r3, #0]
	partial_data1 = (double)(Temperature)-PAR_T1;
 8002536:	000f      	movs	r7, r1
	PAR_T1 = Temperature_Para[0]/Total_Number_Neg_8;
 8002538:	f7ff fd46 	bl	8001fc8 <__aeabi_i2d>
 800253c:	2200      	movs	r2, #0
 800253e:	4b1d      	ldr	r3, [pc, #116]	; (80025b4 <Correcting_Temperature+0x8c>)
 8002540:	f7fe fef0 	bl	8001324 <__aeabi_dmul>
 8002544:	0002      	movs	r2, r0
 8002546:	000b      	movs	r3, r1
	partial_data1 = (double)(Temperature)-PAR_T1;
 8002548:	0030      	movs	r0, r6
 800254a:	0039      	movs	r1, r7
 800254c:	f7ff f956 	bl	80017fc <__aeabi_dsub>
	PAR_T3 = Temperature_Para[2]/Total_Number_32/Total_Number_16;
 8002550:	9b01      	ldr	r3, [sp, #4]
	partial_data1 = (double)(Temperature)-PAR_T1;
 8002552:	0004      	movs	r4, r0
	PAR_T3 = Temperature_Para[2]/Total_Number_32/Total_Number_16;
 8002554:	6898      	ldr	r0, [r3, #8]
	partial_data1 = (double)(Temperature)-PAR_T1;
 8002556:	000d      	movs	r5, r1
	PAR_T3 = Temperature_Para[2]/Total_Number_32/Total_Number_16;
 8002558:	f7ff fd36 	bl	8001fc8 <__aeabi_i2d>
 800255c:	2200      	movs	r2, #0
 800255e:	4b16      	ldr	r3, [pc, #88]	; (80025b8 <Correcting_Temperature+0x90>)
 8002560:	f7fe fee0 	bl	8001324 <__aeabi_dmul>
 8002564:	2200      	movs	r2, #0
 8002566:	4b15      	ldr	r3, [pc, #84]	; (80025bc <Correcting_Temperature+0x94>)
 8002568:	f7fe fedc 	bl	8001324 <__aeabi_dmul>
	parital_data2 = partial_data1*PAR_T2;
	Corr_Temperature = parital_data2+partial_data1*partial_data1*PAR_T3;
 800256c:	0022      	movs	r2, r4
	PAR_T3 = Temperature_Para[2]/Total_Number_32/Total_Number_16;
 800256e:	0006      	movs	r6, r0
 8002570:	000f      	movs	r7, r1
	Corr_Temperature = parital_data2+partial_data1*partial_data1*PAR_T3;
 8002572:	002b      	movs	r3, r5
 8002574:	0020      	movs	r0, r4
 8002576:	0029      	movs	r1, r5
 8002578:	f7fe fed4 	bl	8001324 <__aeabi_dmul>
 800257c:	0002      	movs	r2, r0
 800257e:	000b      	movs	r3, r1
 8002580:	0030      	movs	r0, r6
 8002582:	0039      	movs	r1, r7
 8002584:	f7fe fece 	bl	8001324 <__aeabi_dmul>
	PAR_T2 = Temperature_Para[1]/Total_Number_30;
 8002588:	9b01      	ldr	r3, [sp, #4]
	Corr_Temperature = parital_data2+partial_data1*partial_data1*PAR_T3;
 800258a:	0006      	movs	r6, r0
	PAR_T2 = Temperature_Para[1]/Total_Number_30;
 800258c:	6858      	ldr	r0, [r3, #4]
	Corr_Temperature = parital_data2+partial_data1*partial_data1*PAR_T3;
 800258e:	000f      	movs	r7, r1
	PAR_T2 = Temperature_Para[1]/Total_Number_30;
 8002590:	f7ff fd1a 	bl	8001fc8 <__aeabi_i2d>
 8002594:	2200      	movs	r2, #0
 8002596:	4b0a      	ldr	r3, [pc, #40]	; (80025c0 <Correcting_Temperature+0x98>)
 8002598:	f7fe fec4 	bl	8001324 <__aeabi_dmul>
	parital_data2 = partial_data1*PAR_T2;
 800259c:	0022      	movs	r2, r4
 800259e:	002b      	movs	r3, r5
 80025a0:	f7fe fec0 	bl	8001324 <__aeabi_dmul>
 80025a4:	0002      	movs	r2, r0
 80025a6:	000b      	movs	r3, r1
	Corr_Temperature = parital_data2+partial_data1*partial_data1*PAR_T3;
 80025a8:	0030      	movs	r0, r6
 80025aa:	0039      	movs	r1, r7
 80025ac:	f7fd ff7c 	bl	80004a8 <__aeabi_dadd>
	return Corr_Temperature;
}
 80025b0:	b003      	add	sp, #12
 80025b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025b4:	40700000 	.word	0x40700000
 80025b8:	3df00000 	.word	0x3df00000
 80025bc:	3ef00000 	.word	0x3ef00000
 80025c0:	3e100000 	.word	0x3e100000

080025c4 <Uart1_printf>:

unsigned char printf_temp[64];
void Uart1_printf(const char *format,...)
{
 80025c4:	b40f      	push	{r0, r1, r2, r3}
 80025c6:	b513      	push	{r0, r1, r4, lr}
	unsigned short len;

	va_list args;
	va_start(args, format);
	len = vsnprintf((char*)printf_temp, sizeof(printf_temp)+1, (char*)format,args);
 80025c8:	4c08      	ldr	r4, [pc, #32]	; (80025ec <Uart1_printf+0x28>)
{
 80025ca:	ab04      	add	r3, sp, #16
 80025cc:	cb04      	ldmia	r3!, {r2}
	len = vsnprintf((char*)printf_temp, sizeof(printf_temp)+1, (char*)format,args);
 80025ce:	2141      	movs	r1, #65	; 0x41
 80025d0:	0020      	movs	r0, r4
	va_start(args, format);
 80025d2:	9301      	str	r3, [sp, #4]
	len = vsnprintf((char*)printf_temp, sizeof(printf_temp)+1, (char*)format,args);
 80025d4:	f002 f8c0 	bl	8004758 <vsniprintf>
	va_end(args);

	HAL_UART_Transmit(&huart1, printf_temp, len, 0xFFFF);
 80025d8:	0021      	movs	r1, r4
 80025da:	b282      	uxth	r2, r0
 80025dc:	4b04      	ldr	r3, [pc, #16]	; (80025f0 <Uart1_printf+0x2c>)
 80025de:	4805      	ldr	r0, [pc, #20]	; (80025f4 <Uart1_printf+0x30>)
 80025e0:	f001 faf3 	bl	8003bca <HAL_UART_Transmit>
}
 80025e4:	bc13      	pop	{r0, r1, r4}
 80025e6:	bc08      	pop	{r3}
 80025e8:	b004      	add	sp, #16
 80025ea:	4718      	bx	r3
 80025ec:	20000238 	.word	0x20000238
 80025f0:	0000ffff 	.word	0x0000ffff
 80025f4:	200002e0 	.word	0x200002e0

080025f8 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 80025f8:	b510      	push	{r4, lr}
 80025fa:	b086      	sub	sp, #24

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025fc:	2214      	movs	r2, #20
 80025fe:	2100      	movs	r1, #0
 8002600:	a801      	add	r0, sp, #4
 8002602:	f001 fc07 	bl	8003e14 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002606:	2080      	movs	r0, #128	; 0x80

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin, GPIO_PIN_SET);
 8002608:	2490      	movs	r4, #144	; 0x90
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800260a:	4a0e      	ldr	r2, [pc, #56]	; (8002644 <MX_GPIO_Init+0x4c>)
 800260c:	0280      	lsls	r0, r0, #10
 800260e:	6951      	ldr	r1, [r2, #20]
  HAL_GPIO_WritePin(GPIOA, SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin, GPIO_PIN_SET);
 8002610:	05e4      	lsls	r4, r4, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002612:	4301      	orrs	r1, r0
 8002614:	6151      	str	r1, [r2, #20]
 8002616:	6953      	ldr	r3, [r2, #20]
  HAL_GPIO_WritePin(GPIOA, SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin, GPIO_PIN_SET);
 8002618:	2107      	movs	r1, #7
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800261a:	4003      	ands	r3, r0
  HAL_GPIO_WritePin(GPIOA, SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin, GPIO_PIN_SET);
 800261c:	2201      	movs	r2, #1
 800261e:	0020      	movs	r0, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002620:	9300      	str	r3, [sp, #0]
 8002622:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_WritePin(GPIOA, SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin, GPIO_PIN_SET);
 8002624:	f000 fb98 	bl	8002d58 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = SPI_CS1_Pin|SPI_CS2_Pin|SPI_CS3_Pin;
 8002628:	2307      	movs	r3, #7
 800262a:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800262c:	3b06      	subs	r3, #6
 800262e:	9302      	str	r3, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002630:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002632:	2300      	movs	r3, #0
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002634:	0020      	movs	r0, r4
 8002636:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002638:	9304      	str	r3, [sp, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800263a:	f000 fad7 	bl	8002bec <HAL_GPIO_Init>

}
 800263e:	b006      	add	sp, #24
 8002640:	bd10      	pop	{r4, pc}
 8002642:	46c0      	nop			; (mov r8, r8)
 8002644:	40021000 	.word	0x40021000

08002648 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002648:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800264a:	2610      	movs	r6, #16
{
 800264c:	b096      	sub	sp, #88	; 0x58
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800264e:	222c      	movs	r2, #44	; 0x2c
 8002650:	2100      	movs	r1, #0
 8002652:	a80b      	add	r0, sp, #44	; 0x2c
 8002654:	f001 fbde 	bl	8003e14 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002658:	0032      	movs	r2, r6
 800265a:	2100      	movs	r1, #0
 800265c:	a801      	add	r0, sp, #4
 800265e:	f001 fbd9 	bl	8003e14 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002662:	2100      	movs	r1, #0
 8002664:	2214      	movs	r2, #20
 8002666:	a805      	add	r0, sp, #20
 8002668:	f001 fbd4 	bl	8003e14 <memset>
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800266c:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800266e:	2502      	movs	r5, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002670:	2401      	movs	r4, #1
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002672:	021b      	lsls	r3, r3, #8
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002674:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002676:	950a      	str	r5, [sp, #40]	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002678:	940d      	str	r4, [sp, #52]	; 0x34
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800267a:	960e      	str	r6, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800267c:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800267e:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002680:	f000 fb70 	bl	8002d64 <HAL_RCC_OscConfig>
 8002684:	1e01      	subs	r1, r0, #0
 8002686:	d001      	beq.n	800268c <SystemClock_Config+0x44>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002688:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800268a:	e7fe      	b.n	800268a <SystemClock_Config+0x42>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800268c:	2307      	movs	r3, #7
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800268e:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002690:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002692:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002694:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002696:	9502      	str	r5, [sp, #8]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002698:	f000 fd8e 	bl	80031b8 <HAL_RCC_ClockConfig>
 800269c:	2800      	cmp	r0, #0
 800269e:	d001      	beq.n	80026a4 <SystemClock_Config+0x5c>
 80026a0:	b672      	cpsid	i
  while (1)
 80026a2:	e7fe      	b.n	80026a2 <SystemClock_Config+0x5a>
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 80026a4:	9007      	str	r0, [sp, #28]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80026a6:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80026a8:	9405      	str	r4, [sp, #20]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80026aa:	f000 fe19 	bl	80032e0 <HAL_RCCEx_PeriphCLKConfig>
 80026ae:	2800      	cmp	r0, #0
 80026b0:	d001      	beq.n	80026b6 <SystemClock_Config+0x6e>
 80026b2:	b672      	cpsid	i
  while (1)
 80026b4:	e7fe      	b.n	80026b4 <SystemClock_Config+0x6c>
}
 80026b6:	b016      	add	sp, #88	; 0x58
 80026b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080026bc <main>:
{
 80026bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026be:	b099      	sub	sp, #100	; 0x64
  HAL_Init();
 80026c0:	f000 fa1c 	bl	8002afc <HAL_Init>
  SystemClock_Config();
 80026c4:	f7ff ffc0 	bl	8002648 <SystemClock_Config>
  MX_GPIO_Init();
 80026c8:	f7ff ff96 	bl	80025f8 <MX_GPIO_Init>
  MX_SPI1_Init();
 80026cc:	f000 f890 	bl	80027f0 <MX_SPI1_Init>
  MX_USART1_UART_Init();
 80026d0:	f000 f95e 	bl	8002990 <MX_USART1_UART_Init>
  HAL_Delay(10000);
 80026d4:	4842      	ldr	r0, [pc, #264]	; (80027e0 <main+0x124>)
 80026d6:	f000 fa33 	bl	8002b40 <HAL_Delay>
  HAL_GPIO_WritePin(SPI_CS1_GPIO_Port, SPI_CS1_Pin, GPIO_PIN_SET);
 80026da:	2201      	movs	r2, #1
 80026dc:	2090      	movs	r0, #144	; 0x90
 80026de:	0011      	movs	r1, r2
 80026e0:	05c0      	lsls	r0, r0, #23
 80026e2:	f000 fb39 	bl	8002d58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI_CS2_GPIO_Port, SPI_CS2_Pin, GPIO_PIN_SET);
 80026e6:	2090      	movs	r0, #144	; 0x90
 80026e8:	2201      	movs	r2, #1
 80026ea:	2102      	movs	r1, #2
 80026ec:	05c0      	lsls	r0, r0, #23
 80026ee:	f000 fb33 	bl	8002d58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI_CS3_GPIO_Port, SPI_CS3_Pin, GPIO_PIN_SET);
 80026f2:	2090      	movs	r0, #144	; 0x90
 80026f4:	2201      	movs	r2, #1
 80026f6:	2104      	movs	r1, #4
 80026f8:	05c0      	lsls	r0, r0, #23
 80026fa:	f000 fb2d 	bl	8002d58 <HAL_GPIO_WritePin>
  BMP390_ID1 = BMP390_Init(SPI_CS1_Pin);
 80026fe:	2001      	movs	r0, #1
 8002700:	f7ff fd6c 	bl	80021dc <BMP390_Init>
 8002704:	0004      	movs	r4, r0
  BMP390_ID2 = BMP390_Init(SPI_CS2_Pin);
 8002706:	2002      	movs	r0, #2
 8002708:	f7ff fd68 	bl	80021dc <BMP390_Init>
 800270c:	0005      	movs	r5, r0
  BMP390_ID3 = BMP390_Init(SPI_CS3_Pin);
 800270e:	2004      	movs	r0, #4
 8002710:	f7ff fd64 	bl	80021dc <BMP390_Init>
  r1 = read8(PWR_CTRL_Addr,SPI_CS1_Pin);
 8002714:	2101      	movs	r1, #1
  BMP390_ID3 = BMP390_Init(SPI_CS3_Pin);
 8002716:	0006      	movs	r6, r0
  r1 = read8(PWR_CTRL_Addr,SPI_CS1_Pin);
 8002718:	201b      	movs	r0, #27
 800271a:	f7ff fce9 	bl	80020f0 <read8>
  r2 = read8(CMD_Addr,SPI_CS1_Pin);
 800271e:	2101      	movs	r1, #1
  r1 = read8(PWR_CTRL_Addr,SPI_CS1_Pin);
 8002720:	9004      	str	r0, [sp, #16]
  r2 = read8(CMD_Addr,SPI_CS1_Pin);
 8002722:	207e      	movs	r0, #126	; 0x7e
 8002724:	f7ff fce4 	bl	80020f0 <read8>
 8002728:	0007      	movs	r7, r0
  Parameter_Reading(Pressure_Para,Temperature_Para);
 800272a:	a90a      	add	r1, sp, #40	; 0x28
 800272c:	a80d      	add	r0, sp, #52	; 0x34
 800272e:	f7ff fd7c 	bl	800222a <Parameter_Reading>
  Uart1_printf("chipid1= 0x%x,chipid2= 0x%x,chipid3= 0x%x,r1= 0x%x,r2= 0x%x\r\n",BMP390_ID1,BMP390_ID2,BMP390_ID3,r1,r2);
 8002732:	9b04      	ldr	r3, [sp, #16]
 8002734:	002a      	movs	r2, r5
 8002736:	0021      	movs	r1, r4
 8002738:	9300      	str	r3, [sp, #0]
 800273a:	482a      	ldr	r0, [pc, #168]	; (80027e4 <main+0x128>)
 800273c:	0033      	movs	r3, r6
 800273e:	9701      	str	r7, [sp, #4]
 8002740:	f7ff ff40 	bl	80025c4 <Uart1_printf>
	  Pressure1 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS1_Pin);
 8002744:	2404      	movs	r4, #4
	  Temperature1 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS1_Pin);
 8002746:	2507      	movs	r5, #7
	  Pressure1 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS1_Pin);
 8002748:	2101      	movs	r1, #1
 800274a:	0020      	movs	r0, r4
 800274c:	f7ff fd1c 	bl	8002188 <read32>
	  Temperature1 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS1_Pin);
 8002750:	2101      	movs	r1, #1
	  Pressure1 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS1_Pin);
 8002752:	0006      	movs	r6, r0
	  Temperature1 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS1_Pin);
 8002754:	0028      	movs	r0, r5
 8002756:	f7ff fd17 	bl	8002188 <read32>
	  Pressure2 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS2_Pin);
 800275a:	2102      	movs	r1, #2
	  Temperature1 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS1_Pin);
 800275c:	0007      	movs	r7, r0
	  Pressure2 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS2_Pin);
 800275e:	0020      	movs	r0, r4
 8002760:	f7ff fd12 	bl	8002188 <read32>
	  Temperature2 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS2_Pin);
 8002764:	2102      	movs	r1, #2
	  Pressure2 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS2_Pin);
 8002766:	9004      	str	r0, [sp, #16]
	  Temperature2 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS2_Pin);
 8002768:	0028      	movs	r0, r5
 800276a:	f7ff fd0d 	bl	8002188 <read32>
	  Pressure3 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS3_Pin);
 800276e:	0021      	movs	r1, r4
	  Temperature2 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS2_Pin);
 8002770:	9007      	str	r0, [sp, #28]
	  Pressure3 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS3_Pin);
 8002772:	0020      	movs	r0, r4
 8002774:	f7ff fd08 	bl	8002188 <read32>
	  Temperature3 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS3_Pin);
 8002778:	0021      	movs	r1, r4
	  Pressure3 = read32(BMP390_REGISTER_PRESSUREDATA,SPI_CS3_Pin);
 800277a:	9008      	str	r0, [sp, #32]
	  Temperature3 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS3_Pin);
 800277c:	0028      	movs	r0, r5
 800277e:	f7ff fd03 	bl	8002188 <read32>
	  Correcting_Temp1 = Correcting_Temperature(Temperature1,Temperature_Para);
 8002782:	a90a      	add	r1, sp, #40	; 0x28
	  Temperature3 = read32(BMP390_REGISTER_TEMPDATA,SPI_CS3_Pin);
 8002784:	9009      	str	r0, [sp, #36]	; 0x24
	  Correcting_Temp1 = Correcting_Temperature(Temperature1,Temperature_Para);
 8002786:	0038      	movs	r0, r7
 8002788:	f7ff fece 	bl	8002528 <Correcting_Temperature>
 800278c:	0002      	movs	r2, r0
 800278e:	000b      	movs	r3, r1
	  Correcting_Press1 = Correcting_Pressure(Pressure1,Pressure_Para,Correcting_Temp1);
 8002790:	0030      	movs	r0, r6
 8002792:	a90d      	add	r1, sp, #52	; 0x34
 8002794:	f7ff fd94 	bl	80022c0 <Correcting_Pressure>
 8002798:	0006      	movs	r6, r0
 800279a:	000f      	movs	r7, r1
	  Correcting_Temp2 = Correcting_Temperature(Temperature2,Temperature_Para);
 800279c:	9807      	ldr	r0, [sp, #28]
 800279e:	a90a      	add	r1, sp, #40	; 0x28
 80027a0:	f7ff fec2 	bl	8002528 <Correcting_Temperature>
 80027a4:	0002      	movs	r2, r0
 80027a6:	000b      	movs	r3, r1
	  Correcting_Press2 = Correcting_Pressure(Pressure2,Pressure_Para,Correcting_Temp2);
 80027a8:	9804      	ldr	r0, [sp, #16]
 80027aa:	a90d      	add	r1, sp, #52	; 0x34
 80027ac:	f7ff fd88 	bl	80022c0 <Correcting_Pressure>
 80027b0:	9004      	str	r0, [sp, #16]
 80027b2:	9105      	str	r1, [sp, #20]
	  Correcting_Temp3 = Correcting_Temperature(Temperature3,Temperature_Para);
 80027b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80027b6:	a90a      	add	r1, sp, #40	; 0x28
 80027b8:	f7ff feb6 	bl	8002528 <Correcting_Temperature>
 80027bc:	0002      	movs	r2, r0
 80027be:	000b      	movs	r3, r1
	  Correcting_Press3 = Correcting_Pressure(Pressure3,Pressure_Para,Correcting_Temp3);
 80027c0:	9808      	ldr	r0, [sp, #32]
 80027c2:	a90d      	add	r1, sp, #52	; 0x34
 80027c4:	f7ff fd7c 	bl	80022c0 <Correcting_Pressure>
	  Uart1_printf("{P_C:%f,%f,%f\n}",Correcting_Press1,Correcting_Press2,Correcting_Press3);
 80027c8:	9a04      	ldr	r2, [sp, #16]
 80027ca:	9b05      	ldr	r3, [sp, #20]
 80027cc:	9002      	str	r0, [sp, #8]
 80027ce:	9103      	str	r1, [sp, #12]
 80027d0:	9200      	str	r2, [sp, #0]
 80027d2:	9301      	str	r3, [sp, #4]
 80027d4:	4804      	ldr	r0, [pc, #16]	; (80027e8 <main+0x12c>)
 80027d6:	0032      	movs	r2, r6
 80027d8:	003b      	movs	r3, r7
 80027da:	f7ff fef3 	bl	80025c4 <Uart1_printf>
  while (1)
 80027de:	e7b3      	b.n	8002748 <main+0x8c>
 80027e0:	00002710 	.word	0x00002710
 80027e4:	08006e20 	.word	0x08006e20
 80027e8:	08006e5e 	.word	0x08006e5e

080027ec <Error_Handler>:
 80027ec:	b672      	cpsid	i
  while (1)
 80027ee:	e7fe      	b.n	80027ee <Error_Handler+0x2>

080027f0 <MX_SPI1_Init>:

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
  hspi1.Init.Mode = SPI_MODE_MASTER;
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80027f0:	22e0      	movs	r2, #224	; 0xe0
  hspi1.Instance = SPI1;
 80027f2:	4811      	ldr	r0, [pc, #68]	; (8002838 <MX_SPI1_Init+0x48>)
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80027f4:	00d2      	lsls	r2, r2, #3
{
 80027f6:	b510      	push	{r4, lr}
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80027f8:	60c2      	str	r2, [r0, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80027fa:	2202      	movs	r2, #2
  hspi1.Instance = SPI1;
 80027fc:	4b0f      	ldr	r3, [pc, #60]	; (800283c <MX_SPI1_Init+0x4c>)
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80027fe:	6102      	str	r2, [r0, #16]
  hspi1.Instance = SPI1;
 8002800:	6003      	str	r3, [r0, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002802:	2382      	movs	r3, #130	; 0x82
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8002804:	3a01      	subs	r2, #1
 8002806:	6142      	str	r2, [r0, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002808:	2280      	movs	r2, #128	; 0x80
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800280a:	005b      	lsls	r3, r3, #1
 800280c:	6043      	str	r3, [r0, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800280e:	2300      	movs	r3, #0
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002810:	0092      	lsls	r2, r2, #2
 8002812:	6182      	str	r2, [r0, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 7;
 8002814:	3afa      	subs	r2, #250	; 0xfa
 8002816:	3aff      	subs	r2, #255	; 0xff
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002818:	6083      	str	r3, [r0, #8]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800281a:	61c3      	str	r3, [r0, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800281c:	6203      	str	r3, [r0, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800281e:	6243      	str	r3, [r0, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002820:	6283      	str	r3, [r0, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 8002822:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002824:	6303      	str	r3, [r0, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8002826:	6343      	str	r3, [r0, #52]	; 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002828:	f000 fed4 	bl	80035d4 <HAL_SPI_Init>
 800282c:	2800      	cmp	r0, #0
 800282e:	d001      	beq.n	8002834 <MX_SPI1_Init+0x44>
  {
    Error_Handler();
 8002830:	f7ff ffdc 	bl	80027ec <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002834:	bd10      	pop	{r4, pc}
 8002836:	46c0      	nop			; (mov r8, r8)
 8002838:	20000278 	.word	0x20000278
 800283c:	40013000 	.word	0x40013000

08002840 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002840:	b510      	push	{r4, lr}
 8002842:	0004      	movs	r4, r0
 8002844:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002846:	2214      	movs	r2, #20
 8002848:	2100      	movs	r1, #0
 800284a:	a803      	add	r0, sp, #12
 800284c:	f001 fae2 	bl	8003e14 <memset>
  if(spiHandle->Instance==SPI1)
 8002850:	4b11      	ldr	r3, [pc, #68]	; (8002898 <HAL_SPI_MspInit+0x58>)
 8002852:	6822      	ldr	r2, [r4, #0]
 8002854:	429a      	cmp	r2, r3
 8002856:	d11d      	bne.n	8002894 <HAL_SPI_MspInit+0x54>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002858:	2080      	movs	r0, #128	; 0x80
 800285a:	4b10      	ldr	r3, [pc, #64]	; (800289c <HAL_SPI_MspInit+0x5c>)
 800285c:	0140      	lsls	r0, r0, #5
 800285e:	6999      	ldr	r1, [r3, #24]
 8002860:	4301      	orrs	r1, r0
 8002862:	6199      	str	r1, [r3, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002864:	2180      	movs	r1, #128	; 0x80
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002866:	699a      	ldr	r2, [r3, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002868:	0289      	lsls	r1, r1, #10
    __HAL_RCC_SPI1_CLK_ENABLE();
 800286a:	4002      	ands	r2, r0
 800286c:	9201      	str	r2, [sp, #4]
 800286e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002870:	695a      	ldr	r2, [r3, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002872:	2090      	movs	r0, #144	; 0x90
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002874:	430a      	orrs	r2, r1
 8002876:	615a      	str	r2, [r3, #20]
 8002878:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800287a:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800287c:	400b      	ands	r3, r1
 800287e:	9302      	str	r3, [sp, #8]
 8002880:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8002882:	23e0      	movs	r3, #224	; 0xe0
 8002884:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002886:	3bde      	subs	r3, #222	; 0xde
 8002888:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800288a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800288c:	3301      	adds	r3, #1
 800288e:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002890:	f000 f9ac 	bl	8002bec <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 8002894:	b008      	add	sp, #32
 8002896:	bd10      	pop	{r4, pc}
 8002898:	40013000 	.word	0x40013000
 800289c:	40021000 	.word	0x40021000

080028a0 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028a0:	2001      	movs	r0, #1
 80028a2:	4b0a      	ldr	r3, [pc, #40]	; (80028cc <HAL_MspInit+0x2c>)
{
 80028a4:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028a6:	6999      	ldr	r1, [r3, #24]
 80028a8:	4301      	orrs	r1, r0
 80028aa:	6199      	str	r1, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028ac:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028ae:	699a      	ldr	r2, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028b0:	0549      	lsls	r1, r1, #21
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028b2:	4002      	ands	r2, r0
 80028b4:	9200      	str	r2, [sp, #0]
 80028b6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028b8:	69da      	ldr	r2, [r3, #28]
 80028ba:	430a      	orrs	r2, r1
 80028bc:	61da      	str	r2, [r3, #28]
 80028be:	69db      	ldr	r3, [r3, #28]
 80028c0:	400b      	ands	r3, r1
 80028c2:	9301      	str	r3, [sp, #4]
 80028c4:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80028c6:	b002      	add	sp, #8
 80028c8:	4770      	bx	lr
 80028ca:	46c0      	nop			; (mov r8, r8)
 80028cc:	40021000 	.word	0x40021000

080028d0 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80028d0:	e7fe      	b.n	80028d0 <NMI_Handler>

080028d2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80028d2:	e7fe      	b.n	80028d2 <HardFault_Handler>

080028d4 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80028d4:	4770      	bx	lr

080028d6 <PendSV_Handler>:
 80028d6:	4770      	bx	lr

080028d8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80028d8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80028da:	f000 f91f 	bl	8002b1c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80028de:	bd10      	pop	{r4, pc}

080028e0 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 80028e0:	2001      	movs	r0, #1
 80028e2:	4770      	bx	lr

080028e4 <_kill>:

int _kill(int pid, int sig)
{
 80028e4:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80028e6:	f001 fa6b 	bl	8003dc0 <__errno>
 80028ea:	2316      	movs	r3, #22
 80028ec:	6003      	str	r3, [r0, #0]
  return -1;
 80028ee:	2001      	movs	r0, #1
}
 80028f0:	4240      	negs	r0, r0
 80028f2:	bd10      	pop	{r4, pc}

080028f4 <_exit>:

void _exit (int status)
{
 80028f4:	b510      	push	{r4, lr}
  errno = EINVAL;
 80028f6:	f001 fa63 	bl	8003dc0 <__errno>
 80028fa:	2316      	movs	r3, #22
 80028fc:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 80028fe:	e7fe      	b.n	80028fe <_exit+0xa>

08002900 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002900:	b570      	push	{r4, r5, r6, lr}
 8002902:	000e      	movs	r6, r1
 8002904:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002906:	2500      	movs	r5, #0
 8002908:	42a5      	cmp	r5, r4
 800290a:	db01      	blt.n	8002910 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 800290c:	0020      	movs	r0, r4
 800290e:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8002910:	e000      	b.n	8002914 <_read+0x14>
 8002912:	bf00      	nop
 8002914:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002916:	3501      	adds	r5, #1
 8002918:	e7f6      	b.n	8002908 <_read+0x8>

0800291a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800291a:	b570      	push	{r4, r5, r6, lr}
 800291c:	000e      	movs	r6, r1
 800291e:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002920:	2500      	movs	r5, #0
 8002922:	42a5      	cmp	r5, r4
 8002924:	db01      	blt.n	800292a <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8002926:	0020      	movs	r0, r4
 8002928:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 800292a:	5d70      	ldrb	r0, [r6, r5]
 800292c:	e000      	b.n	8002930 <_write+0x16>
 800292e:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002930:	3501      	adds	r5, #1
 8002932:	e7f6      	b.n	8002922 <_write+0x8>

08002934 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 8002934:	2001      	movs	r0, #1
}
 8002936:	4240      	negs	r0, r0
 8002938:	4770      	bx	lr

0800293a <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800293a:	2380      	movs	r3, #128	; 0x80
 800293c:	019b      	lsls	r3, r3, #6
  return 0;
}
 800293e:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8002940:	604b      	str	r3, [r1, #4]
}
 8002942:	4770      	bx	lr

08002944 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8002944:	2001      	movs	r0, #1
 8002946:	4770      	bx	lr

08002948 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8002948:	2000      	movs	r0, #0
 800294a:	4770      	bx	lr

0800294c <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800294c:	4a0b      	ldr	r2, [pc, #44]	; (800297c <_sbrk+0x30>)
 800294e:	490c      	ldr	r1, [pc, #48]	; (8002980 <_sbrk+0x34>)
{
 8002950:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002952:	1a89      	subs	r1, r1, r2
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002954:	4a0b      	ldr	r2, [pc, #44]	; (8002984 <_sbrk+0x38>)
{
 8002956:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8002958:	6810      	ldr	r0, [r2, #0]
 800295a:	2800      	cmp	r0, #0
 800295c:	d101      	bne.n	8002962 <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 800295e:	480a      	ldr	r0, [pc, #40]	; (8002988 <_sbrk+0x3c>)
 8002960:	6010      	str	r0, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002962:	6810      	ldr	r0, [r2, #0]
 8002964:	18c3      	adds	r3, r0, r3
 8002966:	428b      	cmp	r3, r1
 8002968:	d906      	bls.n	8002978 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 800296a:	f001 fa29 	bl	8003dc0 <__errno>
 800296e:	230c      	movs	r3, #12
 8002970:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8002972:	2001      	movs	r0, #1
 8002974:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8002976:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8002978:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800297a:	e7fc      	b.n	8002976 <_sbrk+0x2a>
 800297c:	00000400 	.word	0x00000400
 8002980:	20001800 	.word	0x20001800
 8002984:	200002dc 	.word	0x200002dc
 8002988:	20000380 	.word	0x20000380

0800298c <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 800298c:	4770      	bx	lr
	...

08002990 <MX_USART1_UART_Init>:
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002990:	480b      	ldr	r0, [pc, #44]	; (80029c0 <MX_USART1_UART_Init+0x30>)
 8002992:	4b0c      	ldr	r3, [pc, #48]	; (80029c4 <MX_USART1_UART_Init+0x34>)
{
 8002994:	b510      	push	{r4, lr}
  huart1.Instance = USART1;
 8002996:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 230400;
 8002998:	23e1      	movs	r3, #225	; 0xe1
 800299a:	029b      	lsls	r3, r3, #10
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
  huart1.Init.StopBits = UART_STOPBITS_1;
  huart1.Init.Parity = UART_PARITY_NONE;
  huart1.Init.Mode = UART_MODE_TX_RX;
 800299c:	220c      	movs	r2, #12
  huart1.Init.BaudRate = 230400;
 800299e:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80029a0:	2300      	movs	r3, #0
  huart1.Init.Mode = UART_MODE_TX_RX;
 80029a2:	6142      	str	r2, [r0, #20]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80029a4:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80029a6:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80029a8:	6103      	str	r3, [r0, #16]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80029aa:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80029ac:	61c3      	str	r3, [r0, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80029ae:	6203      	str	r3, [r0, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80029b0:	6243      	str	r3, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80029b2:	f001 f9d3 	bl	8003d5c <HAL_UART_Init>
 80029b6:	2800      	cmp	r0, #0
 80029b8:	d001      	beq.n	80029be <MX_USART1_UART_Init+0x2e>
  {
    Error_Handler();
 80029ba:	f7ff ff17 	bl	80027ec <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80029be:	bd10      	pop	{r4, pc}
 80029c0:	200002e0 	.word	0x200002e0
 80029c4:	40013800 	.word	0x40013800

080029c8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80029c8:	b510      	push	{r4, lr}
 80029ca:	0004      	movs	r4, r0
 80029cc:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029ce:	2214      	movs	r2, #20
 80029d0:	2100      	movs	r1, #0
 80029d2:	a803      	add	r0, sp, #12
 80029d4:	f001 fa1e 	bl	8003e14 <memset>
  if(uartHandle->Instance==USART1)
 80029d8:	4b13      	ldr	r3, [pc, #76]	; (8002a28 <HAL_UART_MspInit+0x60>)
 80029da:	6822      	ldr	r2, [r4, #0]
 80029dc:	429a      	cmp	r2, r3
 80029de:	d120      	bne.n	8002a22 <HAL_UART_MspInit+0x5a>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80029e0:	2080      	movs	r0, #128	; 0x80
 80029e2:	4b12      	ldr	r3, [pc, #72]	; (8002a2c <HAL_UART_MspInit+0x64>)
 80029e4:	01c0      	lsls	r0, r0, #7
 80029e6:	6999      	ldr	r1, [r3, #24]
 80029e8:	4301      	orrs	r1, r0
 80029ea:	6199      	str	r1, [r3, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029ec:	2180      	movs	r1, #128	; 0x80
    __HAL_RCC_USART1_CLK_ENABLE();
 80029ee:	699a      	ldr	r2, [r3, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029f0:	0289      	lsls	r1, r1, #10
    __HAL_RCC_USART1_CLK_ENABLE();
 80029f2:	4002      	ands	r2, r0
 80029f4:	9201      	str	r2, [sp, #4]
 80029f6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029f8:	695a      	ldr	r2, [r3, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029fa:	2090      	movs	r0, #144	; 0x90
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029fc:	430a      	orrs	r2, r1
 80029fe:	615a      	str	r2, [r3, #20]
 8002a00:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a02:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a04:	400b      	ands	r3, r1
 8002a06:	9302      	str	r3, [sp, #8]
 8002a08:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002a0a:	23c0      	movs	r3, #192	; 0xc0
 8002a0c:	00db      	lsls	r3, r3, #3
 8002a0e:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a10:	2302      	movs	r3, #2
 8002a12:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002a14:	3301      	adds	r3, #1
 8002a16:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a18:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 8002a1a:	3b02      	subs	r3, #2
 8002a1c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a1e:	f000 f8e5 	bl	8002bec <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8002a22:	b008      	add	sp, #32
 8002a24:	bd10      	pop	{r4, pc}
 8002a26:	46c0      	nop			; (mov r8, r8)
 8002a28:	40013800 	.word	0x40013800
 8002a2c:	40021000 	.word	0x40021000

08002a30 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002a30:	4813      	ldr	r0, [pc, #76]	; (8002a80 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002a32:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002a34:	f7ff ffaa 	bl	800298c <SystemInit>

/*Check if boot space corresponds to test memory*/
 
    LDR R0,=0x00000004
 8002a38:	4812      	ldr	r0, [pc, #72]	; (8002a84 <LoopForever+0x6>)
    LDR R1, [R0]
 8002a3a:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8002a3c:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8002a3e:	4a12      	ldr	r2, [pc, #72]	; (8002a88 <LoopForever+0xa>)
    CMP R1, R2
 8002a40:	4291      	cmp	r1, r2
    BNE ApplicationStart
 8002a42:	d105      	bne.n	8002a50 <ApplicationStart>

 /*SYSCFG clock enable*/

    LDR R0,=0x40021018
 8002a44:	4811      	ldr	r0, [pc, #68]	; (8002a8c <LoopForever+0xe>)
    LDR R1,=0x00000001
 8002a46:	4912      	ldr	r1, [pc, #72]	; (8002a90 <LoopForever+0x12>)
    STR R1, [R0]
 8002a48:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 8002a4a:	4812      	ldr	r0, [pc, #72]	; (8002a94 <LoopForever+0x16>)
    LDR R1,=0x00000000
 8002a4c:	4912      	ldr	r1, [pc, #72]	; (8002a98 <LoopForever+0x1a>)
    STR R1, [R0]
 8002a4e:	6001      	str	r1, [r0, #0]

08002a50 <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002a50:	4812      	ldr	r0, [pc, #72]	; (8002a9c <LoopForever+0x1e>)
  ldr r1, =_edata
 8002a52:	4913      	ldr	r1, [pc, #76]	; (8002aa0 <LoopForever+0x22>)
  ldr r2, =_sidata
 8002a54:	4a13      	ldr	r2, [pc, #76]	; (8002aa4 <LoopForever+0x26>)
  movs r3, #0
 8002a56:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002a58:	e002      	b.n	8002a60 <LoopCopyDataInit>

08002a5a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002a5a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002a5c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002a5e:	3304      	adds	r3, #4

08002a60 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002a60:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002a62:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002a64:	d3f9      	bcc.n	8002a5a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002a66:	4a10      	ldr	r2, [pc, #64]	; (8002aa8 <LoopForever+0x2a>)
  ldr r4, =_ebss
 8002a68:	4c10      	ldr	r4, [pc, #64]	; (8002aac <LoopForever+0x2e>)
  movs r3, #0
 8002a6a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002a6c:	e001      	b.n	8002a72 <LoopFillZerobss>

08002a6e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002a6e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002a70:	3204      	adds	r2, #4

08002a72 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002a72:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002a74:	d3fb      	bcc.n	8002a6e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002a76:	f001 f9a9 	bl	8003dcc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002a7a:	f7ff fe1f 	bl	80026bc <main>

08002a7e <LoopForever>:

LoopForever:
    b LoopForever
 8002a7e:	e7fe      	b.n	8002a7e <LoopForever>
  ldr   r0, =_estack
 8002a80:	20001800 	.word	0x20001800
    LDR R0,=0x00000004
 8002a84:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 8002a88:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021018
 8002a8c:	40021018 	.word	0x40021018
    LDR R1,=0x00000001
 8002a90:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 8002a94:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 8002a98:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 8002a9c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002aa0:	2000021c 	.word	0x2000021c
  ldr r2, =_sidata
 8002aa4:	0800728c 	.word	0x0800728c
  ldr r2, =_sbss
 8002aa8:	2000021c 	.word	0x2000021c
  ldr r4, =_ebss
 8002aac:	2000037c 	.word	0x2000037c

08002ab0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002ab0:	e7fe      	b.n	8002ab0 <ADC1_IRQHandler>
	...

08002ab4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002ab4:	b570      	push	{r4, r5, r6, lr}
 8002ab6:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002ab8:	20fa      	movs	r0, #250	; 0xfa
 8002aba:	4b0d      	ldr	r3, [pc, #52]	; (8002af0 <HAL_InitTick+0x3c>)
 8002abc:	0080      	lsls	r0, r0, #2
 8002abe:	7819      	ldrb	r1, [r3, #0]
 8002ac0:	f7fd fb3e 	bl	8000140 <__udivsi3>
 8002ac4:	4b0b      	ldr	r3, [pc, #44]	; (8002af4 <HAL_InitTick+0x40>)
 8002ac6:	0001      	movs	r1, r0
 8002ac8:	6818      	ldr	r0, [r3, #0]
 8002aca:	f7fd fb39 	bl	8000140 <__udivsi3>
 8002ace:	f000 f873 	bl	8002bb8 <HAL_SYSTICK_Config>
 8002ad2:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002ad4:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002ad6:	2c00      	cmp	r4, #0
 8002ad8:	d109      	bne.n	8002aee <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002ada:	2d03      	cmp	r5, #3
 8002adc:	d807      	bhi.n	8002aee <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002ade:	3802      	subs	r0, #2
 8002ae0:	0022      	movs	r2, r4
 8002ae2:	0029      	movs	r1, r5
 8002ae4:	f000 f83e 	bl	8002b64 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002ae8:	0020      	movs	r0, r4
 8002aea:	4b03      	ldr	r3, [pc, #12]	; (8002af8 <HAL_InitTick+0x44>)
 8002aec:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 8002aee:	bd70      	pop	{r4, r5, r6, pc}
 8002af0:	20000044 	.word	0x20000044
 8002af4:	20000040 	.word	0x20000040
 8002af8:	20000048 	.word	0x20000048

08002afc <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002afc:	2310      	movs	r3, #16
 8002afe:	4a06      	ldr	r2, [pc, #24]	; (8002b18 <HAL_Init+0x1c>)
{
 8002b00:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b02:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002b04:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b06:	430b      	orrs	r3, r1
 8002b08:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002b0a:	f7ff ffd3 	bl	8002ab4 <HAL_InitTick>
  HAL_MspInit();
 8002b0e:	f7ff fec7 	bl	80028a0 <HAL_MspInit>
}
 8002b12:	2000      	movs	r0, #0
 8002b14:	bd10      	pop	{r4, pc}
 8002b16:	46c0      	nop			; (mov r8, r8)
 8002b18:	40022000 	.word	0x40022000

08002b1c <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002b1c:	4a03      	ldr	r2, [pc, #12]	; (8002b2c <HAL_IncTick+0x10>)
 8002b1e:	4b04      	ldr	r3, [pc, #16]	; (8002b30 <HAL_IncTick+0x14>)
 8002b20:	6811      	ldr	r1, [r2, #0]
 8002b22:	781b      	ldrb	r3, [r3, #0]
 8002b24:	185b      	adds	r3, r3, r1
 8002b26:	6013      	str	r3, [r2, #0]
}
 8002b28:	4770      	bx	lr
 8002b2a:	46c0      	nop			; (mov r8, r8)
 8002b2c:	20000368 	.word	0x20000368
 8002b30:	20000044 	.word	0x20000044

08002b34 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002b34:	4b01      	ldr	r3, [pc, #4]	; (8002b3c <HAL_GetTick+0x8>)
 8002b36:	6818      	ldr	r0, [r3, #0]
}
 8002b38:	4770      	bx	lr
 8002b3a:	46c0      	nop			; (mov r8, r8)
 8002b3c:	20000368 	.word	0x20000368

08002b40 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002b40:	b570      	push	{r4, r5, r6, lr}
 8002b42:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8002b44:	f7ff fff6 	bl	8002b34 <HAL_GetTick>
 8002b48:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002b4a:	1c63      	adds	r3, r4, #1
 8002b4c:	d002      	beq.n	8002b54 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8002b4e:	4b04      	ldr	r3, [pc, #16]	; (8002b60 <HAL_Delay+0x20>)
 8002b50:	781b      	ldrb	r3, [r3, #0]
 8002b52:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002b54:	f7ff ffee 	bl	8002b34 <HAL_GetTick>
 8002b58:	1b40      	subs	r0, r0, r5
 8002b5a:	42a0      	cmp	r0, r4
 8002b5c:	d3fa      	bcc.n	8002b54 <HAL_Delay+0x14>
  {
  }
}
 8002b5e:	bd70      	pop	{r4, r5, r6, pc}
 8002b60:	20000044 	.word	0x20000044

08002b64 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002b64:	b530      	push	{r4, r5, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b66:	25ff      	movs	r5, #255	; 0xff
 8002b68:	2403      	movs	r4, #3
 8002b6a:	002a      	movs	r2, r5
 8002b6c:	4004      	ands	r4, r0
 8002b6e:	00e4      	lsls	r4, r4, #3
 8002b70:	40a2      	lsls	r2, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002b72:	0189      	lsls	r1, r1, #6
 8002b74:	4029      	ands	r1, r5
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b76:	43d2      	mvns	r2, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002b78:	40a1      	lsls	r1, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b7a:	b2c3      	uxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 8002b7c:	2800      	cmp	r0, #0
 8002b7e:	db0a      	blt.n	8002b96 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b80:	24c0      	movs	r4, #192	; 0xc0
 8002b82:	4b0b      	ldr	r3, [pc, #44]	; (8002bb0 <HAL_NVIC_SetPriority+0x4c>)
 8002b84:	0880      	lsrs	r0, r0, #2
 8002b86:	0080      	lsls	r0, r0, #2
 8002b88:	18c0      	adds	r0, r0, r3
 8002b8a:	00a4      	lsls	r4, r4, #2
 8002b8c:	5903      	ldr	r3, [r0, r4]
 8002b8e:	401a      	ands	r2, r3
 8002b90:	4311      	orrs	r1, r2
 8002b92:	5101      	str	r1, [r0, r4]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 8002b94:	bd30      	pop	{r4, r5, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b96:	200f      	movs	r0, #15
 8002b98:	4003      	ands	r3, r0
 8002b9a:	3b08      	subs	r3, #8
 8002b9c:	4805      	ldr	r0, [pc, #20]	; (8002bb4 <HAL_NVIC_SetPriority+0x50>)
 8002b9e:	089b      	lsrs	r3, r3, #2
 8002ba0:	009b      	lsls	r3, r3, #2
 8002ba2:	181b      	adds	r3, r3, r0
 8002ba4:	69d8      	ldr	r0, [r3, #28]
 8002ba6:	4002      	ands	r2, r0
 8002ba8:	4311      	orrs	r1, r2
 8002baa:	61d9      	str	r1, [r3, #28]
 8002bac:	e7f2      	b.n	8002b94 <HAL_NVIC_SetPriority+0x30>
 8002bae:	46c0      	nop			; (mov r8, r8)
 8002bb0:	e000e100 	.word	0xe000e100
 8002bb4:	e000ed00 	.word	0xe000ed00

08002bb8 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002bb8:	2280      	movs	r2, #128	; 0x80
 8002bba:	1e43      	subs	r3, r0, #1
 8002bbc:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8002bbe:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002bc0:	4293      	cmp	r3, r2
 8002bc2:	d20d      	bcs.n	8002be0 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002bc4:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002bc6:	4a07      	ldr	r2, [pc, #28]	; (8002be4 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002bc8:	4807      	ldr	r0, [pc, #28]	; (8002be8 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002bca:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002bcc:	6a03      	ldr	r3, [r0, #32]
 8002bce:	0609      	lsls	r1, r1, #24
 8002bd0:	021b      	lsls	r3, r3, #8
 8002bd2:	0a1b      	lsrs	r3, r3, #8
 8002bd4:	430b      	orrs	r3, r1
 8002bd6:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002bd8:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002bda:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002bdc:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002bde:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8002be0:	4770      	bx	lr
 8002be2:	46c0      	nop			; (mov r8, r8)
 8002be4:	e000e010 	.word	0xe000e010
 8002be8:	e000ed00 	.word	0xe000ed00

08002bec <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8002bec:	2300      	movs	r3, #0
{
 8002bee:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002bf0:	b087      	sub	sp, #28
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002bf2:	680a      	ldr	r2, [r1, #0]
 8002bf4:	0014      	movs	r4, r2
 8002bf6:	40dc      	lsrs	r4, r3
 8002bf8:	d101      	bne.n	8002bfe <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  } 
}
 8002bfa:	b007      	add	sp, #28
 8002bfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002bfe:	2501      	movs	r5, #1
 8002c00:	0014      	movs	r4, r2
 8002c02:	409d      	lsls	r5, r3
 8002c04:	402c      	ands	r4, r5
 8002c06:	9401      	str	r4, [sp, #4]
    if (iocurrent != 0x00u)
 8002c08:	422a      	tst	r2, r5
 8002c0a:	d100      	bne.n	8002c0e <HAL_GPIO_Init+0x22>
 8002c0c:	e095      	b.n	8002d3a <HAL_GPIO_Init+0x14e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002c0e:	684a      	ldr	r2, [r1, #4]
 8002c10:	005e      	lsls	r6, r3, #1
 8002c12:	4694      	mov	ip, r2
 8002c14:	2203      	movs	r2, #3
 8002c16:	4664      	mov	r4, ip
 8002c18:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8002c1a:	2403      	movs	r4, #3
 8002c1c:	40b4      	lsls	r4, r6
 8002c1e:	43e4      	mvns	r4, r4
 8002c20:	9402      	str	r4, [sp, #8]
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002c22:	1e54      	subs	r4, r2, #1
 8002c24:	2c01      	cmp	r4, #1
 8002c26:	d82a      	bhi.n	8002c7e <HAL_GPIO_Init+0x92>
        temp = GPIOx->OSPEEDR;
 8002c28:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8002c2a:	9c02      	ldr	r4, [sp, #8]
 8002c2c:	4027      	ands	r7, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002c2e:	68cc      	ldr	r4, [r1, #12]
 8002c30:	40b4      	lsls	r4, r6
 8002c32:	433c      	orrs	r4, r7
        GPIOx->OSPEEDR = temp;
 8002c34:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 8002c36:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002c38:	2701      	movs	r7, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002c3a:	43ac      	bics	r4, r5
 8002c3c:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002c3e:	4664      	mov	r4, ip
 8002c40:	0924      	lsrs	r4, r4, #4
 8002c42:	403c      	ands	r4, r7
 8002c44:	409c      	lsls	r4, r3
 8002c46:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8002c48:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8002c4a:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8002c4c:	9c02      	ldr	r4, [sp, #8]
 8002c4e:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8002c50:	688c      	ldr	r4, [r1, #8]
 8002c52:	40b4      	lsls	r4, r6
 8002c54:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 8002c56:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002c58:	2a02      	cmp	r2, #2
 8002c5a:	d112      	bne.n	8002c82 <HAL_GPIO_Init+0x96>
        temp = GPIOx->AFR[position >> 3u];
 8002c5c:	08dc      	lsrs	r4, r3, #3
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002c5e:	2507      	movs	r5, #7
 8002c60:	00a4      	lsls	r4, r4, #2
 8002c62:	1904      	adds	r4, r0, r4
        temp = GPIOx->AFR[position >> 3u];
 8002c64:	6a27      	ldr	r7, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002c66:	9403      	str	r4, [sp, #12]
 8002c68:	240f      	movs	r4, #15
 8002c6a:	401d      	ands	r5, r3
 8002c6c:	00ad      	lsls	r5, r5, #2
 8002c6e:	40ac      	lsls	r4, r5
 8002c70:	43a7      	bics	r7, r4
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8002c72:	690c      	ldr	r4, [r1, #16]
 8002c74:	40ac      	lsls	r4, r5
 8002c76:	4327      	orrs	r7, r4
        GPIOx->AFR[position >> 3u] = temp;
 8002c78:	9c03      	ldr	r4, [sp, #12]
 8002c7a:	6227      	str	r7, [r4, #32]
 8002c7c:	e001      	b.n	8002c82 <HAL_GPIO_Init+0x96>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002c7e:	2a03      	cmp	r2, #3
 8002c80:	d1e3      	bne.n	8002c4a <HAL_GPIO_Init+0x5e>
      temp = GPIOx->MODER;
 8002c82:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8002c84:	9d02      	ldr	r5, [sp, #8]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002c86:	40b2      	lsls	r2, r6
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8002c88:	4025      	ands	r5, r4
 8002c8a:	002c      	movs	r4, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002c8c:	4314      	orrs	r4, r2
      GPIOx->MODER = temp;
 8002c8e:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8002c90:	24c0      	movs	r4, #192	; 0xc0
 8002c92:	4662      	mov	r2, ip
 8002c94:	02a4      	lsls	r4, r4, #10
 8002c96:	4222      	tst	r2, r4
 8002c98:	d04f      	beq.n	8002d3a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002c9a:	2501      	movs	r5, #1
 8002c9c:	4a28      	ldr	r2, [pc, #160]	; (8002d40 <HAL_GPIO_Init+0x154>)
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002c9e:	2790      	movs	r7, #144	; 0x90
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002ca0:	6994      	ldr	r4, [r2, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002ca2:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002ca4:	432c      	orrs	r4, r5
 8002ca6:	6194      	str	r4, [r2, #24]
 8002ca8:	6992      	ldr	r2, [r2, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 8002caa:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002cac:	402a      	ands	r2, r5
 8002cae:	9205      	str	r2, [sp, #20]
 8002cb0:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 8002cb2:	4a24      	ldr	r2, [pc, #144]	; (8002d44 <HAL_GPIO_Init+0x158>)
 8002cb4:	00a4      	lsls	r4, r4, #2
 8002cb6:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8002cb8:	220f      	movs	r2, #15
 8002cba:	3502      	adds	r5, #2
 8002cbc:	401d      	ands	r5, r3
 8002cbe:	00ad      	lsls	r5, r5, #2
 8002cc0:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2u];
 8002cc2:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8002cc4:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	42b8      	cmp	r0, r7
 8002cca:	d00c      	beq.n	8002ce6 <HAL_GPIO_Init+0xfa>
 8002ccc:	4f1e      	ldr	r7, [pc, #120]	; (8002d48 <HAL_GPIO_Init+0x15c>)
 8002cce:	3201      	adds	r2, #1
 8002cd0:	42b8      	cmp	r0, r7
 8002cd2:	d008      	beq.n	8002ce6 <HAL_GPIO_Init+0xfa>
 8002cd4:	4f1d      	ldr	r7, [pc, #116]	; (8002d4c <HAL_GPIO_Init+0x160>)
 8002cd6:	3201      	adds	r2, #1
 8002cd8:	42b8      	cmp	r0, r7
 8002cda:	d004      	beq.n	8002ce6 <HAL_GPIO_Init+0xfa>
 8002cdc:	4f1c      	ldr	r7, [pc, #112]	; (8002d50 <HAL_GPIO_Init+0x164>)
 8002cde:	3201      	adds	r2, #1
 8002ce0:	42b8      	cmp	r0, r7
 8002ce2:	d000      	beq.n	8002ce6 <HAL_GPIO_Init+0xfa>
 8002ce4:	3202      	adds	r2, #2
 8002ce6:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8002ce8:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002cea:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2u] = temp;
 8002cec:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 8002cee:	4a19      	ldr	r2, [pc, #100]	; (8002d54 <HAL_GPIO_Init+0x168>)
        temp &= ~(iocurrent);
 8002cf0:	9c01      	ldr	r4, [sp, #4]
        temp = EXTI->RTSR;
 8002cf2:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 8002cf4:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(iocurrent);
 8002cf6:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 8002cf8:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8002cfa:	02ff      	lsls	r7, r7, #11
 8002cfc:	d401      	bmi.n	8002d02 <HAL_GPIO_Init+0x116>
        temp &= ~(iocurrent);
 8002cfe:	0035      	movs	r5, r6
 8002d00:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002d02:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 8002d04:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 8002d06:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 8002d08:	9d01      	ldr	r5, [sp, #4]
 8002d0a:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002d0c:	02bf      	lsls	r7, r7, #10
 8002d0e:	d401      	bmi.n	8002d14 <HAL_GPIO_Init+0x128>
        temp &= ~(iocurrent);
 8002d10:	0035      	movs	r5, r6
 8002d12:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8002d14:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 8002d16:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 8002d18:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 8002d1a:	9d01      	ldr	r5, [sp, #4]
 8002d1c:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8002d1e:	03bf      	lsls	r7, r7, #14
 8002d20:	d401      	bmi.n	8002d26 <HAL_GPIO_Init+0x13a>
        temp &= ~(iocurrent);
 8002d22:	0035      	movs	r5, r6
 8002d24:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8002d26:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 8002d28:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 8002d2a:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 8002d2c:	9e01      	ldr	r6, [sp, #4]
 8002d2e:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8002d30:	03ff      	lsls	r7, r7, #15
 8002d32:	d401      	bmi.n	8002d38 <HAL_GPIO_Init+0x14c>
        temp &= ~(iocurrent);
 8002d34:	4025      	ands	r5, r4
 8002d36:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 8002d38:	6016      	str	r6, [r2, #0]
    position++;
 8002d3a:	3301      	adds	r3, #1
 8002d3c:	e759      	b.n	8002bf2 <HAL_GPIO_Init+0x6>
 8002d3e:	46c0      	nop			; (mov r8, r8)
 8002d40:	40021000 	.word	0x40021000
 8002d44:	40010000 	.word	0x40010000
 8002d48:	48000400 	.word	0x48000400
 8002d4c:	48000800 	.word	0x48000800
 8002d50:	48000c00 	.word	0x48000c00
 8002d54:	40010400 	.word	0x40010400

08002d58 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002d58:	2a00      	cmp	r2, #0
 8002d5a:	d001      	beq.n	8002d60 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8002d5c:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8002d5e:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8002d60:	6281      	str	r1, [r0, #40]	; 0x28
}
 8002d62:	e7fc      	b.n	8002d5e <HAL_GPIO_WritePin+0x6>

08002d64 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d66:	0004      	movs	r4, r0
 8002d68:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002d6a:	2800      	cmp	r0, #0
 8002d6c:	d04a      	beq.n	8002e04 <HAL_RCC_OscConfig+0xa0>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002d6e:	6803      	ldr	r3, [r0, #0]
 8002d70:	07db      	lsls	r3, r3, #31
 8002d72:	d42f      	bmi.n	8002dd4 <HAL_RCC_OscConfig+0x70>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002d74:	6823      	ldr	r3, [r4, #0]
 8002d76:	079b      	lsls	r3, r3, #30
 8002d78:	d500      	bpl.n	8002d7c <HAL_RCC_OscConfig+0x18>
 8002d7a:	e086      	b.n	8002e8a <HAL_RCC_OscConfig+0x126>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002d7c:	6823      	ldr	r3, [r4, #0]
 8002d7e:	071b      	lsls	r3, r3, #28
 8002d80:	d500      	bpl.n	8002d84 <HAL_RCC_OscConfig+0x20>
 8002d82:	e0c6      	b.n	8002f12 <HAL_RCC_OscConfig+0x1ae>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002d84:	6823      	ldr	r3, [r4, #0]
 8002d86:	075b      	lsls	r3, r3, #29
 8002d88:	d500      	bpl.n	8002d8c <HAL_RCC_OscConfig+0x28>
 8002d8a:	e0e9      	b.n	8002f60 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_DISABLE();
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8002d8c:	6823      	ldr	r3, [r4, #0]
 8002d8e:	06db      	lsls	r3, r3, #27
 8002d90:	d51a      	bpl.n	8002dc8 <HAL_RCC_OscConfig+0x64>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8002d92:	6962      	ldr	r2, [r4, #20]
 8002d94:	2304      	movs	r3, #4
 8002d96:	4dba      	ldr	r5, [pc, #744]	; (8003080 <HAL_RCC_OscConfig+0x31c>)
 8002d98:	2a01      	cmp	r2, #1
 8002d9a:	d000      	beq.n	8002d9e <HAL_RCC_OscConfig+0x3a>
 8002d9c:	e154      	b.n	8003048 <HAL_RCC_OscConfig+0x2e4>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8002d9e:	6b69      	ldr	r1, [r5, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002da0:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8002da2:	430b      	orrs	r3, r1
 8002da4:	636b      	str	r3, [r5, #52]	; 0x34
      __HAL_RCC_HSI14_ENABLE();
 8002da6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002da8:	431a      	orrs	r2, r3
 8002daa:	636a      	str	r2, [r5, #52]	; 0x34
      tickstart = HAL_GetTick();
 8002dac:	f7ff fec2 	bl	8002b34 <HAL_GetTick>
 8002db0:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002db2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002db4:	423b      	tst	r3, r7
 8002db6:	d100      	bne.n	8002dba <HAL_RCC_OscConfig+0x56>
 8002db8:	e13f      	b.n	800303a <HAL_RCC_OscConfig+0x2d6>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002dba:	21f8      	movs	r1, #248	; 0xf8
 8002dbc:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8002dbe:	69a3      	ldr	r3, [r4, #24]
 8002dc0:	438a      	bics	r2, r1
 8002dc2:	00db      	lsls	r3, r3, #3
 8002dc4:	4313      	orrs	r3, r2
 8002dc6:	636b      	str	r3, [r5, #52]	; 0x34
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002dc8:	6a23      	ldr	r3, [r4, #32]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d000      	beq.n	8002dd0 <HAL_RCC_OscConfig+0x6c>
 8002dce:	e163      	b.n	8003098 <HAL_RCC_OscConfig+0x334>
        }
      }
    }
  }

  return HAL_OK;
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	e02f      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8002dd4:	210c      	movs	r1, #12
 8002dd6:	4daa      	ldr	r5, [pc, #680]	; (8003080 <HAL_RCC_OscConfig+0x31c>)
 8002dd8:	686a      	ldr	r2, [r5, #4]
 8002dda:	400a      	ands	r2, r1
 8002ddc:	2a04      	cmp	r2, #4
 8002dde:	d00b      	beq.n	8002df8 <HAL_RCC_OscConfig+0x94>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8002de0:	686b      	ldr	r3, [r5, #4]
 8002de2:	400b      	ands	r3, r1
 8002de4:	2b08      	cmp	r3, #8
 8002de6:	d10f      	bne.n	8002e08 <HAL_RCC_OscConfig+0xa4>
 8002de8:	22c0      	movs	r2, #192	; 0xc0
 8002dea:	686b      	ldr	r3, [r5, #4]
 8002dec:	0252      	lsls	r2, r2, #9
 8002dee:	4013      	ands	r3, r2
 8002df0:	2280      	movs	r2, #128	; 0x80
 8002df2:	0252      	lsls	r2, r2, #9
 8002df4:	4293      	cmp	r3, r2
 8002df6:	d107      	bne.n	8002e08 <HAL_RCC_OscConfig+0xa4>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002df8:	682b      	ldr	r3, [r5, #0]
 8002dfa:	039b      	lsls	r3, r3, #14
 8002dfc:	d5ba      	bpl.n	8002d74 <HAL_RCC_OscConfig+0x10>
 8002dfe:	6863      	ldr	r3, [r4, #4]
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d1b7      	bne.n	8002d74 <HAL_RCC_OscConfig+0x10>
          return HAL_ERROR;
 8002e04:	2001      	movs	r0, #1
 8002e06:	e015      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e08:	6863      	ldr	r3, [r4, #4]
 8002e0a:	2b01      	cmp	r3, #1
 8002e0c:	d114      	bne.n	8002e38 <HAL_RCC_OscConfig+0xd4>
 8002e0e:	2380      	movs	r3, #128	; 0x80
 8002e10:	682a      	ldr	r2, [r5, #0]
 8002e12:	025b      	lsls	r3, r3, #9
 8002e14:	4313      	orrs	r3, r2
 8002e16:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002e18:	f7ff fe8c 	bl	8002b34 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002e1c:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8002e1e:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002e20:	02bf      	lsls	r7, r7, #10
 8002e22:	682b      	ldr	r3, [r5, #0]
 8002e24:	423b      	tst	r3, r7
 8002e26:	d1a5      	bne.n	8002d74 <HAL_RCC_OscConfig+0x10>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002e28:	f7ff fe84 	bl	8002b34 <HAL_GetTick>
 8002e2c:	1b80      	subs	r0, r0, r6
 8002e2e:	2864      	cmp	r0, #100	; 0x64
 8002e30:	d9f7      	bls.n	8002e22 <HAL_RCC_OscConfig+0xbe>
            return HAL_TIMEOUT;
 8002e32:	2003      	movs	r0, #3
}
 8002e34:	b005      	add	sp, #20
 8002e36:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d116      	bne.n	8002e6a <HAL_RCC_OscConfig+0x106>
 8002e3c:	682b      	ldr	r3, [r5, #0]
 8002e3e:	4a91      	ldr	r2, [pc, #580]	; (8003084 <HAL_RCC_OscConfig+0x320>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002e40:	2780      	movs	r7, #128	; 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e42:	4013      	ands	r3, r2
 8002e44:	602b      	str	r3, [r5, #0]
 8002e46:	682b      	ldr	r3, [r5, #0]
 8002e48:	4a8f      	ldr	r2, [pc, #572]	; (8003088 <HAL_RCC_OscConfig+0x324>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002e4a:	02bf      	lsls	r7, r7, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e4c:	4013      	ands	r3, r2
 8002e4e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002e50:	f7ff fe70 	bl	8002b34 <HAL_GetTick>
 8002e54:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002e56:	682b      	ldr	r3, [r5, #0]
 8002e58:	423b      	tst	r3, r7
 8002e5a:	d100      	bne.n	8002e5e <HAL_RCC_OscConfig+0xfa>
 8002e5c:	e78a      	b.n	8002d74 <HAL_RCC_OscConfig+0x10>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002e5e:	f7ff fe69 	bl	8002b34 <HAL_GetTick>
 8002e62:	1b80      	subs	r0, r0, r6
 8002e64:	2864      	cmp	r0, #100	; 0x64
 8002e66:	d9f6      	bls.n	8002e56 <HAL_RCC_OscConfig+0xf2>
 8002e68:	e7e3      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e6a:	2b05      	cmp	r3, #5
 8002e6c:	d105      	bne.n	8002e7a <HAL_RCC_OscConfig+0x116>
 8002e6e:	2380      	movs	r3, #128	; 0x80
 8002e70:	682a      	ldr	r2, [r5, #0]
 8002e72:	02db      	lsls	r3, r3, #11
 8002e74:	4313      	orrs	r3, r2
 8002e76:	602b      	str	r3, [r5, #0]
 8002e78:	e7c9      	b.n	8002e0e <HAL_RCC_OscConfig+0xaa>
 8002e7a:	682b      	ldr	r3, [r5, #0]
 8002e7c:	4a81      	ldr	r2, [pc, #516]	; (8003084 <HAL_RCC_OscConfig+0x320>)
 8002e7e:	4013      	ands	r3, r2
 8002e80:	602b      	str	r3, [r5, #0]
 8002e82:	682b      	ldr	r3, [r5, #0]
 8002e84:	4a80      	ldr	r2, [pc, #512]	; (8003088 <HAL_RCC_OscConfig+0x324>)
 8002e86:	4013      	ands	r3, r2
 8002e88:	e7c5      	b.n	8002e16 <HAL_RCC_OscConfig+0xb2>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8002e8a:	220c      	movs	r2, #12
 8002e8c:	4d7c      	ldr	r5, [pc, #496]	; (8003080 <HAL_RCC_OscConfig+0x31c>)
 8002e8e:	686b      	ldr	r3, [r5, #4]
 8002e90:	4213      	tst	r3, r2
 8002e92:	d00b      	beq.n	8002eac <HAL_RCC_OscConfig+0x148>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8002e94:	686b      	ldr	r3, [r5, #4]
 8002e96:	4013      	ands	r3, r2
 8002e98:	2b08      	cmp	r3, #8
 8002e9a:	d115      	bne.n	8002ec8 <HAL_RCC_OscConfig+0x164>
 8002e9c:	22c0      	movs	r2, #192	; 0xc0
 8002e9e:	686b      	ldr	r3, [r5, #4]
 8002ea0:	0252      	lsls	r2, r2, #9
 8002ea2:	4013      	ands	r3, r2
 8002ea4:	2280      	movs	r2, #128	; 0x80
 8002ea6:	0212      	lsls	r2, r2, #8
 8002ea8:	4293      	cmp	r3, r2
 8002eaa:	d10d      	bne.n	8002ec8 <HAL_RCC_OscConfig+0x164>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002eac:	682b      	ldr	r3, [r5, #0]
 8002eae:	079b      	lsls	r3, r3, #30
 8002eb0:	d502      	bpl.n	8002eb8 <HAL_RCC_OscConfig+0x154>
 8002eb2:	68e3      	ldr	r3, [r4, #12]
 8002eb4:	2b01      	cmp	r3, #1
 8002eb6:	d1a5      	bne.n	8002e04 <HAL_RCC_OscConfig+0xa0>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002eb8:	21f8      	movs	r1, #248	; 0xf8
 8002eba:	682a      	ldr	r2, [r5, #0]
 8002ebc:	6923      	ldr	r3, [r4, #16]
 8002ebe:	438a      	bics	r2, r1
 8002ec0:	00db      	lsls	r3, r3, #3
 8002ec2:	4313      	orrs	r3, r2
 8002ec4:	602b      	str	r3, [r5, #0]
 8002ec6:	e759      	b.n	8002d7c <HAL_RCC_OscConfig+0x18>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8002ec8:	68e2      	ldr	r2, [r4, #12]
 8002eca:	2301      	movs	r3, #1
 8002ecc:	2a00      	cmp	r2, #0
 8002ece:	d00f      	beq.n	8002ef0 <HAL_RCC_OscConfig+0x18c>
        __HAL_RCC_HSI_ENABLE();
 8002ed0:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002ed2:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 8002ed4:	4313      	orrs	r3, r2
 8002ed6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002ed8:	f7ff fe2c 	bl	8002b34 <HAL_GetTick>
 8002edc:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002ede:	682b      	ldr	r3, [r5, #0]
 8002ee0:	423b      	tst	r3, r7
 8002ee2:	d1e9      	bne.n	8002eb8 <HAL_RCC_OscConfig+0x154>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002ee4:	f7ff fe26 	bl	8002b34 <HAL_GetTick>
 8002ee8:	1b80      	subs	r0, r0, r6
 8002eea:	2802      	cmp	r0, #2
 8002eec:	d9f7      	bls.n	8002ede <HAL_RCC_OscConfig+0x17a>
 8002eee:	e7a0      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
        __HAL_RCC_HSI_DISABLE();
 8002ef0:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002ef2:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 8002ef4:	439a      	bics	r2, r3
 8002ef6:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 8002ef8:	f7ff fe1c 	bl	8002b34 <HAL_GetTick>
 8002efc:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002efe:	682b      	ldr	r3, [r5, #0]
 8002f00:	423b      	tst	r3, r7
 8002f02:	d100      	bne.n	8002f06 <HAL_RCC_OscConfig+0x1a2>
 8002f04:	e73a      	b.n	8002d7c <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002f06:	f7ff fe15 	bl	8002b34 <HAL_GetTick>
 8002f0a:	1b80      	subs	r0, r0, r6
 8002f0c:	2802      	cmp	r0, #2
 8002f0e:	d9f6      	bls.n	8002efe <HAL_RCC_OscConfig+0x19a>
 8002f10:	e78f      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002f12:	69e2      	ldr	r2, [r4, #28]
 8002f14:	2301      	movs	r3, #1
 8002f16:	4d5a      	ldr	r5, [pc, #360]	; (8003080 <HAL_RCC_OscConfig+0x31c>)
 8002f18:	2a00      	cmp	r2, #0
 8002f1a:	d010      	beq.n	8002f3e <HAL_RCC_OscConfig+0x1da>
      __HAL_RCC_LSI_ENABLE();
 8002f1c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002f1e:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 8002f20:	4313      	orrs	r3, r2
 8002f22:	626b      	str	r3, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 8002f24:	f7ff fe06 	bl	8002b34 <HAL_GetTick>
 8002f28:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002f2a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002f2c:	423b      	tst	r3, r7
 8002f2e:	d000      	beq.n	8002f32 <HAL_RCC_OscConfig+0x1ce>
 8002f30:	e728      	b.n	8002d84 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002f32:	f7ff fdff 	bl	8002b34 <HAL_GetTick>
 8002f36:	1b80      	subs	r0, r0, r6
 8002f38:	2802      	cmp	r0, #2
 8002f3a:	d9f6      	bls.n	8002f2a <HAL_RCC_OscConfig+0x1c6>
 8002f3c:	e779      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
      __HAL_RCC_LSI_DISABLE();
 8002f3e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002f40:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 8002f42:	439a      	bics	r2, r3
 8002f44:	626a      	str	r2, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 8002f46:	f7ff fdf5 	bl	8002b34 <HAL_GetTick>
 8002f4a:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002f4c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002f4e:	423b      	tst	r3, r7
 8002f50:	d100      	bne.n	8002f54 <HAL_RCC_OscConfig+0x1f0>
 8002f52:	e717      	b.n	8002d84 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002f54:	f7ff fdee 	bl	8002b34 <HAL_GetTick>
 8002f58:	1b80      	subs	r0, r0, r6
 8002f5a:	2802      	cmp	r0, #2
 8002f5c:	d9f6      	bls.n	8002f4c <HAL_RCC_OscConfig+0x1e8>
 8002f5e:	e768      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f60:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002f62:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f64:	4d46      	ldr	r5, [pc, #280]	; (8003080 <HAL_RCC_OscConfig+0x31c>)
 8002f66:	0552      	lsls	r2, r2, #21
 8002f68:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 8002f6a:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f6c:	4213      	tst	r3, r2
 8002f6e:	d108      	bne.n	8002f82 <HAL_RCC_OscConfig+0x21e>
      __HAL_RCC_PWR_CLK_ENABLE();
 8002f70:	69eb      	ldr	r3, [r5, #28]
 8002f72:	4313      	orrs	r3, r2
 8002f74:	61eb      	str	r3, [r5, #28]
 8002f76:	69eb      	ldr	r3, [r5, #28]
 8002f78:	4013      	ands	r3, r2
 8002f7a:	9303      	str	r3, [sp, #12]
 8002f7c:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8002f7e:	2301      	movs	r3, #1
 8002f80:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002f82:	2780      	movs	r7, #128	; 0x80
 8002f84:	4e41      	ldr	r6, [pc, #260]	; (800308c <HAL_RCC_OscConfig+0x328>)
 8002f86:	007f      	lsls	r7, r7, #1
 8002f88:	6833      	ldr	r3, [r6, #0]
 8002f8a:	423b      	tst	r3, r7
 8002f8c:	d006      	beq.n	8002f9c <HAL_RCC_OscConfig+0x238>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002f8e:	68a3      	ldr	r3, [r4, #8]
 8002f90:	2b01      	cmp	r3, #1
 8002f92:	d113      	bne.n	8002fbc <HAL_RCC_OscConfig+0x258>
 8002f94:	6a2a      	ldr	r2, [r5, #32]
 8002f96:	4313      	orrs	r3, r2
 8002f98:	622b      	str	r3, [r5, #32]
 8002f9a:	e030      	b.n	8002ffe <HAL_RCC_OscConfig+0x29a>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002f9c:	6833      	ldr	r3, [r6, #0]
 8002f9e:	433b      	orrs	r3, r7
 8002fa0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8002fa2:	f7ff fdc7 	bl	8002b34 <HAL_GetTick>
 8002fa6:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002fa8:	6833      	ldr	r3, [r6, #0]
 8002faa:	423b      	tst	r3, r7
 8002fac:	d1ef      	bne.n	8002f8e <HAL_RCC_OscConfig+0x22a>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002fae:	f7ff fdc1 	bl	8002b34 <HAL_GetTick>
 8002fb2:	9b01      	ldr	r3, [sp, #4]
 8002fb4:	1ac0      	subs	r0, r0, r3
 8002fb6:	2864      	cmp	r0, #100	; 0x64
 8002fb8:	d9f6      	bls.n	8002fa8 <HAL_RCC_OscConfig+0x244>
 8002fba:	e73a      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002fbc:	2201      	movs	r2, #1
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	d114      	bne.n	8002fec <HAL_RCC_OscConfig+0x288>
 8002fc2:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002fc4:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002fc6:	4393      	bics	r3, r2
 8002fc8:	622b      	str	r3, [r5, #32]
 8002fca:	6a2b      	ldr	r3, [r5, #32]
 8002fcc:	3203      	adds	r2, #3
 8002fce:	4393      	bics	r3, r2
 8002fd0:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8002fd2:	f7ff fdaf 	bl	8002b34 <HAL_GetTick>
 8002fd6:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002fd8:	6a2b      	ldr	r3, [r5, #32]
 8002fda:	423b      	tst	r3, r7
 8002fdc:	d016      	beq.n	800300c <HAL_RCC_OscConfig+0x2a8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002fde:	f7ff fda9 	bl	8002b34 <HAL_GetTick>
 8002fe2:	4b2b      	ldr	r3, [pc, #172]	; (8003090 <HAL_RCC_OscConfig+0x32c>)
 8002fe4:	1b80      	subs	r0, r0, r6
 8002fe6:	4298      	cmp	r0, r3
 8002fe8:	d9f6      	bls.n	8002fd8 <HAL_RCC_OscConfig+0x274>
 8002fea:	e722      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002fec:	2b05      	cmp	r3, #5
 8002fee:	d116      	bne.n	800301e <HAL_RCC_OscConfig+0x2ba>
 8002ff0:	6a29      	ldr	r1, [r5, #32]
 8002ff2:	3b01      	subs	r3, #1
 8002ff4:	430b      	orrs	r3, r1
 8002ff6:	622b      	str	r3, [r5, #32]
 8002ff8:	6a2b      	ldr	r3, [r5, #32]
 8002ffa:	431a      	orrs	r2, r3
 8002ffc:	622a      	str	r2, [r5, #32]
      tickstart = HAL_GetTick();
 8002ffe:	f7ff fd99 	bl	8002b34 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003002:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 8003004:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003006:	6a2b      	ldr	r3, [r5, #32]
 8003008:	423b      	tst	r3, r7
 800300a:	d00f      	beq.n	800302c <HAL_RCC_OscConfig+0x2c8>
    if(pwrclkchanged == SET)
 800300c:	9b00      	ldr	r3, [sp, #0]
 800300e:	2b01      	cmp	r3, #1
 8003010:	d000      	beq.n	8003014 <HAL_RCC_OscConfig+0x2b0>
 8003012:	e6bb      	b.n	8002d8c <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8003014:	69eb      	ldr	r3, [r5, #28]
 8003016:	4a1f      	ldr	r2, [pc, #124]	; (8003094 <HAL_RCC_OscConfig+0x330>)
 8003018:	4013      	ands	r3, r2
 800301a:	61eb      	str	r3, [r5, #28]
 800301c:	e6b6      	b.n	8002d8c <HAL_RCC_OscConfig+0x28>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800301e:	6a2b      	ldr	r3, [r5, #32]
 8003020:	4393      	bics	r3, r2
 8003022:	2204      	movs	r2, #4
 8003024:	622b      	str	r3, [r5, #32]
 8003026:	6a2b      	ldr	r3, [r5, #32]
 8003028:	4393      	bics	r3, r2
 800302a:	e7b5      	b.n	8002f98 <HAL_RCC_OscConfig+0x234>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800302c:	f7ff fd82 	bl	8002b34 <HAL_GetTick>
 8003030:	4b17      	ldr	r3, [pc, #92]	; (8003090 <HAL_RCC_OscConfig+0x32c>)
 8003032:	1b80      	subs	r0, r0, r6
 8003034:	4298      	cmp	r0, r3
 8003036:	d9e6      	bls.n	8003006 <HAL_RCC_OscConfig+0x2a2>
 8003038:	e6fb      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800303a:	f7ff fd7b 	bl	8002b34 <HAL_GetTick>
 800303e:	1b80      	subs	r0, r0, r6
 8003040:	2802      	cmp	r0, #2
 8003042:	d800      	bhi.n	8003046 <HAL_RCC_OscConfig+0x2e2>
 8003044:	e6b5      	b.n	8002db2 <HAL_RCC_OscConfig+0x4e>
 8003046:	e6f4      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003048:	3205      	adds	r2, #5
 800304a:	d103      	bne.n	8003054 <HAL_RCC_OscConfig+0x2f0>
      __HAL_RCC_HSI14ADC_ENABLE();
 800304c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 800304e:	439a      	bics	r2, r3
 8003050:	636a      	str	r2, [r5, #52]	; 0x34
 8003052:	e6b2      	b.n	8002dba <HAL_RCC_OscConfig+0x56>
      __HAL_RCC_HSI14ADC_DISABLE();
 8003054:	6b6a      	ldr	r2, [r5, #52]	; 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003056:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8003058:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 800305a:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 800305c:	636b      	str	r3, [r5, #52]	; 0x34
      __HAL_RCC_HSI14_DISABLE();
 800305e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003060:	4393      	bics	r3, r2
 8003062:	636b      	str	r3, [r5, #52]	; 0x34
      tickstart = HAL_GetTick();
 8003064:	f7ff fd66 	bl	8002b34 <HAL_GetTick>
 8003068:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800306a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800306c:	423b      	tst	r3, r7
 800306e:	d100      	bne.n	8003072 <HAL_RCC_OscConfig+0x30e>
 8003070:	e6aa      	b.n	8002dc8 <HAL_RCC_OscConfig+0x64>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003072:	f7ff fd5f 	bl	8002b34 <HAL_GetTick>
 8003076:	1b80      	subs	r0, r0, r6
 8003078:	2802      	cmp	r0, #2
 800307a:	d9f6      	bls.n	800306a <HAL_RCC_OscConfig+0x306>
 800307c:	e6d9      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
 800307e:	46c0      	nop			; (mov r8, r8)
 8003080:	40021000 	.word	0x40021000
 8003084:	fffeffff 	.word	0xfffeffff
 8003088:	fffbffff 	.word	0xfffbffff
 800308c:	40007000 	.word	0x40007000
 8003090:	00001388 	.word	0x00001388
 8003094:	efffffff 	.word	0xefffffff
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003098:	210c      	movs	r1, #12
 800309a:	4d34      	ldr	r5, [pc, #208]	; (800316c <HAL_RCC_OscConfig+0x408>)
 800309c:	686a      	ldr	r2, [r5, #4]
 800309e:	400a      	ands	r2, r1
 80030a0:	2a08      	cmp	r2, #8
 80030a2:	d047      	beq.n	8003134 <HAL_RCC_OscConfig+0x3d0>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80030a4:	4a32      	ldr	r2, [pc, #200]	; (8003170 <HAL_RCC_OscConfig+0x40c>)
 80030a6:	2b02      	cmp	r3, #2
 80030a8:	d132      	bne.n	8003110 <HAL_RCC_OscConfig+0x3ac>
        __HAL_RCC_PLL_DISABLE();
 80030aa:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80030ac:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 80030ae:	4013      	ands	r3, r2
 80030b0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80030b2:	f7ff fd3f 	bl	8002b34 <HAL_GetTick>
 80030b6:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80030b8:	04bf      	lsls	r7, r7, #18
 80030ba:	682b      	ldr	r3, [r5, #0]
 80030bc:	423b      	tst	r3, r7
 80030be:	d121      	bne.n	8003104 <HAL_RCC_OscConfig+0x3a0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030c0:	220f      	movs	r2, #15
 80030c2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80030c4:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030c6:	4393      	bics	r3, r2
 80030c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80030ca:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030cc:	4313      	orrs	r3, r2
 80030ce:	62eb      	str	r3, [r5, #44]	; 0x2c
 80030d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80030d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80030d4:	686a      	ldr	r2, [r5, #4]
 80030d6:	430b      	orrs	r3, r1
 80030d8:	4926      	ldr	r1, [pc, #152]	; (8003174 <HAL_RCC_OscConfig+0x410>)
 80030da:	400a      	ands	r2, r1
 80030dc:	4313      	orrs	r3, r2
 80030de:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80030e0:	2380      	movs	r3, #128	; 0x80
 80030e2:	682a      	ldr	r2, [r5, #0]
 80030e4:	045b      	lsls	r3, r3, #17
 80030e6:	4313      	orrs	r3, r2
 80030e8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80030ea:	f7ff fd23 	bl	8002b34 <HAL_GetTick>
 80030ee:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80030f0:	682b      	ldr	r3, [r5, #0]
 80030f2:	4233      	tst	r3, r6
 80030f4:	d000      	beq.n	80030f8 <HAL_RCC_OscConfig+0x394>
 80030f6:	e66b      	b.n	8002dd0 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80030f8:	f7ff fd1c 	bl	8002b34 <HAL_GetTick>
 80030fc:	1b00      	subs	r0, r0, r4
 80030fe:	2802      	cmp	r0, #2
 8003100:	d9f6      	bls.n	80030f0 <HAL_RCC_OscConfig+0x38c>
 8003102:	e696      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003104:	f7ff fd16 	bl	8002b34 <HAL_GetTick>
 8003108:	1b80      	subs	r0, r0, r6
 800310a:	2802      	cmp	r0, #2
 800310c:	d9d5      	bls.n	80030ba <HAL_RCC_OscConfig+0x356>
 800310e:	e690      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
        __HAL_RCC_PLL_DISABLE();
 8003110:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003112:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8003114:	4013      	ands	r3, r2
 8003116:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003118:	f7ff fd0c 	bl	8002b34 <HAL_GetTick>
 800311c:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800311e:	04b6      	lsls	r6, r6, #18
 8003120:	682b      	ldr	r3, [r5, #0]
 8003122:	4233      	tst	r3, r6
 8003124:	d100      	bne.n	8003128 <HAL_RCC_OscConfig+0x3c4>
 8003126:	e653      	b.n	8002dd0 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003128:	f7ff fd04 	bl	8002b34 <HAL_GetTick>
 800312c:	1b00      	subs	r0, r0, r4
 800312e:	2802      	cmp	r0, #2
 8003130:	d9f6      	bls.n	8003120 <HAL_RCC_OscConfig+0x3bc>
 8003132:	e67e      	b.n	8002e32 <HAL_RCC_OscConfig+0xce>
        return HAL_ERROR;
 8003134:	0018      	movs	r0, r3
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003136:	2b01      	cmp	r3, #1
 8003138:	d100      	bne.n	800313c <HAL_RCC_OscConfig+0x3d8>
 800313a:	e67b      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800313c:	21c0      	movs	r1, #192	; 0xc0
        pll_config  = RCC->CFGR;
 800313e:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003140:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8003142:	0249      	lsls	r1, r1, #9
        pll_config2 = RCC->CFGR2;
 8003144:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003146:	4019      	ands	r1, r3
 8003148:	4281      	cmp	r1, r0
 800314a:	d000      	beq.n	800314e <HAL_RCC_OscConfig+0x3ea>
 800314c:	e65a      	b.n	8002e04 <HAL_RCC_OscConfig+0xa0>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800314e:	210f      	movs	r1, #15
 8003150:	400a      	ands	r2, r1
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003152:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8003154:	428a      	cmp	r2, r1
 8003156:	d000      	beq.n	800315a <HAL_RCC_OscConfig+0x3f6>
 8003158:	e654      	b.n	8002e04 <HAL_RCC_OscConfig+0xa0>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 800315a:	22f0      	movs	r2, #240	; 0xf0
 800315c:	0392      	lsls	r2, r2, #14
 800315e:	4013      	ands	r3, r2
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003160:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003162:	4293      	cmp	r3, r2
 8003164:	d100      	bne.n	8003168 <HAL_RCC_OscConfig+0x404>
 8003166:	e633      	b.n	8002dd0 <HAL_RCC_OscConfig+0x6c>
 8003168:	e64c      	b.n	8002e04 <HAL_RCC_OscConfig+0xa0>
 800316a:	46c0      	nop			; (mov r8, r8)
 800316c:	40021000 	.word	0x40021000
 8003170:	feffffff 	.word	0xfeffffff
 8003174:	ffc27fff 	.word	0xffc27fff

08003178 <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003178:	220c      	movs	r2, #12
  tmpreg = RCC->CFGR;
 800317a:	490b      	ldr	r1, [pc, #44]	; (80031a8 <HAL_RCC_GetSysClockFreq+0x30>)
{
 800317c:	b510      	push	{r4, lr}
  tmpreg = RCC->CFGR;
 800317e:	684b      	ldr	r3, [r1, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8003180:	401a      	ands	r2, r3
 8003182:	2a08      	cmp	r2, #8
 8003184:	d10d      	bne.n	80031a2 <HAL_RCC_GetSysClockFreq+0x2a>
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003186:	6aca      	ldr	r2, [r1, #44]	; 0x2c
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003188:	210f      	movs	r1, #15
 800318a:	0c9b      	lsrs	r3, r3, #18
 800318c:	400b      	ands	r3, r1
 800318e:	4807      	ldr	r0, [pc, #28]	; (80031ac <HAL_RCC_GetSysClockFreq+0x34>)
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003190:	4011      	ands	r1, r2
 8003192:	4a07      	ldr	r2, [pc, #28]	; (80031b0 <HAL_RCC_GetSysClockFreq+0x38>)
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003194:	5cc4      	ldrb	r4, [r0, r3]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003196:	5c51      	ldrb	r1, [r2, r1]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003198:	4806      	ldr	r0, [pc, #24]	; (80031b4 <HAL_RCC_GetSysClockFreq+0x3c>)
 800319a:	f7fc ffd1 	bl	8000140 <__udivsi3>
 800319e:	4360      	muls	r0, r4
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80031a0:	bd10      	pop	{r4, pc}
      sysclockfreq = HSE_VALUE;
 80031a2:	4804      	ldr	r0, [pc, #16]	; (80031b4 <HAL_RCC_GetSysClockFreq+0x3c>)
  return sysclockfreq;
 80031a4:	e7fc      	b.n	80031a0 <HAL_RCC_GetSysClockFreq+0x28>
 80031a6:	46c0      	nop			; (mov r8, r8)
 80031a8:	40021000 	.word	0x40021000
 80031ac:	08006e86 	.word	0x08006e86
 80031b0:	08006e96 	.word	0x08006e96
 80031b4:	007a1200 	.word	0x007a1200

080031b8 <HAL_RCC_ClockConfig>:
{
 80031b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80031ba:	0004      	movs	r4, r0
 80031bc:	000e      	movs	r6, r1
  if(RCC_ClkInitStruct == NULL)
 80031be:	2800      	cmp	r0, #0
 80031c0:	d101      	bne.n	80031c6 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 80031c2:	2001      	movs	r0, #1
}
 80031c4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80031c6:	2201      	movs	r2, #1
 80031c8:	4d37      	ldr	r5, [pc, #220]	; (80032a8 <HAL_RCC_ClockConfig+0xf0>)
 80031ca:	682b      	ldr	r3, [r5, #0]
 80031cc:	4013      	ands	r3, r2
 80031ce:	428b      	cmp	r3, r1
 80031d0:	d31c      	bcc.n	800320c <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80031d2:	6821      	ldr	r1, [r4, #0]
 80031d4:	078b      	lsls	r3, r1, #30
 80031d6:	d422      	bmi.n	800321e <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80031d8:	07cb      	lsls	r3, r1, #31
 80031da:	d42f      	bmi.n	800323c <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80031dc:	2301      	movs	r3, #1
 80031de:	682a      	ldr	r2, [r5, #0]
 80031e0:	401a      	ands	r2, r3
 80031e2:	42b2      	cmp	r2, r6
 80031e4:	d851      	bhi.n	800328a <HAL_RCC_ClockConfig+0xd2>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80031e6:	6823      	ldr	r3, [r4, #0]
 80031e8:	4d30      	ldr	r5, [pc, #192]	; (80032ac <HAL_RCC_ClockConfig+0xf4>)
 80031ea:	075b      	lsls	r3, r3, #29
 80031ec:	d454      	bmi.n	8003298 <HAL_RCC_ClockConfig+0xe0>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 80031ee:	f7ff ffc3 	bl	8003178 <HAL_RCC_GetSysClockFreq>
 80031f2:	686b      	ldr	r3, [r5, #4]
 80031f4:	4a2e      	ldr	r2, [pc, #184]	; (80032b0 <HAL_RCC_ClockConfig+0xf8>)
 80031f6:	061b      	lsls	r3, r3, #24
 80031f8:	0f1b      	lsrs	r3, r3, #28
 80031fa:	5cd3      	ldrb	r3, [r2, r3]
 80031fc:	40d8      	lsrs	r0, r3
 80031fe:	4b2d      	ldr	r3, [pc, #180]	; (80032b4 <HAL_RCC_ClockConfig+0xfc>)
 8003200:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8003202:	2003      	movs	r0, #3
 8003204:	f7ff fc56 	bl	8002ab4 <HAL_InitTick>
  return HAL_OK;
 8003208:	2000      	movs	r0, #0
 800320a:	e7db      	b.n	80031c4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800320c:	682b      	ldr	r3, [r5, #0]
 800320e:	4393      	bics	r3, r2
 8003210:	430b      	orrs	r3, r1
 8003212:	602b      	str	r3, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003214:	682b      	ldr	r3, [r5, #0]
 8003216:	4013      	ands	r3, r2
 8003218:	428b      	cmp	r3, r1
 800321a:	d1d2      	bne.n	80031c2 <HAL_RCC_ClockConfig+0xa>
 800321c:	e7d9      	b.n	80031d2 <HAL_RCC_ClockConfig+0x1a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800321e:	4a23      	ldr	r2, [pc, #140]	; (80032ac <HAL_RCC_ClockConfig+0xf4>)
 8003220:	074b      	lsls	r3, r1, #29
 8003222:	d504      	bpl.n	800322e <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003224:	23e0      	movs	r3, #224	; 0xe0
 8003226:	6850      	ldr	r0, [r2, #4]
 8003228:	00db      	lsls	r3, r3, #3
 800322a:	4303      	orrs	r3, r0
 800322c:	6053      	str	r3, [r2, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800322e:	20f0      	movs	r0, #240	; 0xf0
 8003230:	6853      	ldr	r3, [r2, #4]
 8003232:	4383      	bics	r3, r0
 8003234:	68a0      	ldr	r0, [r4, #8]
 8003236:	4303      	orrs	r3, r0
 8003238:	6053      	str	r3, [r2, #4]
 800323a:	e7cd      	b.n	80031d8 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800323c:	4f1b      	ldr	r7, [pc, #108]	; (80032ac <HAL_RCC_ClockConfig+0xf4>)
 800323e:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003240:	683b      	ldr	r3, [r7, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003242:	2a01      	cmp	r2, #1
 8003244:	d119      	bne.n	800327a <HAL_RCC_ClockConfig+0xc2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003246:	039b      	lsls	r3, r3, #14
 8003248:	d5bb      	bpl.n	80031c2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800324a:	2103      	movs	r1, #3
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	438b      	bics	r3, r1
 8003250:	4313      	orrs	r3, r2
 8003252:	607b      	str	r3, [r7, #4]
    tickstart = HAL_GetTick();
 8003254:	f7ff fc6e 	bl	8002b34 <HAL_GetTick>
 8003258:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800325a:	230c      	movs	r3, #12
 800325c:	687a      	ldr	r2, [r7, #4]
 800325e:	401a      	ands	r2, r3
 8003260:	6863      	ldr	r3, [r4, #4]
 8003262:	009b      	lsls	r3, r3, #2
 8003264:	429a      	cmp	r2, r3
 8003266:	d0b9      	beq.n	80031dc <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003268:	f7ff fc64 	bl	8002b34 <HAL_GetTick>
 800326c:	9b01      	ldr	r3, [sp, #4]
 800326e:	1ac0      	subs	r0, r0, r3
 8003270:	4b11      	ldr	r3, [pc, #68]	; (80032b8 <HAL_RCC_ClockConfig+0x100>)
 8003272:	4298      	cmp	r0, r3
 8003274:	d9f1      	bls.n	800325a <HAL_RCC_ClockConfig+0xa2>
        return HAL_TIMEOUT;
 8003276:	2003      	movs	r0, #3
 8003278:	e7a4      	b.n	80031c4 <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800327a:	2a02      	cmp	r2, #2
 800327c:	d102      	bne.n	8003284 <HAL_RCC_ClockConfig+0xcc>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800327e:	019b      	lsls	r3, r3, #6
 8003280:	d4e3      	bmi.n	800324a <HAL_RCC_ClockConfig+0x92>
 8003282:	e79e      	b.n	80031c2 <HAL_RCC_ClockConfig+0xa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003284:	079b      	lsls	r3, r3, #30
 8003286:	d4e0      	bmi.n	800324a <HAL_RCC_ClockConfig+0x92>
 8003288:	e79b      	b.n	80031c2 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800328a:	682a      	ldr	r2, [r5, #0]
 800328c:	439a      	bics	r2, r3
 800328e:	602a      	str	r2, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003290:	682a      	ldr	r2, [r5, #0]
 8003292:	421a      	tst	r2, r3
 8003294:	d0a7      	beq.n	80031e6 <HAL_RCC_ClockConfig+0x2e>
 8003296:	e794      	b.n	80031c2 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003298:	686b      	ldr	r3, [r5, #4]
 800329a:	4a08      	ldr	r2, [pc, #32]	; (80032bc <HAL_RCC_ClockConfig+0x104>)
 800329c:	4013      	ands	r3, r2
 800329e:	68e2      	ldr	r2, [r4, #12]
 80032a0:	4313      	orrs	r3, r2
 80032a2:	606b      	str	r3, [r5, #4]
 80032a4:	e7a3      	b.n	80031ee <HAL_RCC_ClockConfig+0x36>
 80032a6:	46c0      	nop			; (mov r8, r8)
 80032a8:	40022000 	.word	0x40022000
 80032ac:	40021000 	.word	0x40021000
 80032b0:	08006e6e 	.word	0x08006e6e
 80032b4:	20000040 	.word	0x20000040
 80032b8:	00001388 	.word	0x00001388
 80032bc:	fffff8ff 	.word	0xfffff8ff

080032c0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 80032c0:	4b04      	ldr	r3, [pc, #16]	; (80032d4 <HAL_RCC_GetPCLK1Freq+0x14>)
 80032c2:	4a05      	ldr	r2, [pc, #20]	; (80032d8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80032c4:	685b      	ldr	r3, [r3, #4]
 80032c6:	055b      	lsls	r3, r3, #21
 80032c8:	0f5b      	lsrs	r3, r3, #29
 80032ca:	5cd3      	ldrb	r3, [r2, r3]
 80032cc:	4a03      	ldr	r2, [pc, #12]	; (80032dc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80032ce:	6810      	ldr	r0, [r2, #0]
 80032d0:	40d8      	lsrs	r0, r3
}    
 80032d2:	4770      	bx	lr
 80032d4:	40021000 	.word	0x40021000
 80032d8:	08006e7e 	.word	0x08006e7e
 80032dc:	20000040 	.word	0x20000040

080032e0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80032e0:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80032e2:	6803      	ldr	r3, [r0, #0]
{
 80032e4:	0005      	movs	r5, r0
 80032e6:	b085      	sub	sp, #20
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80032e8:	03db      	lsls	r3, r3, #15
 80032ea:	d52a      	bpl.n	8003342 <HAL_RCCEx_PeriphCLKConfig+0x62>
    FlagStatus       pwrclkchanged = RESET;

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80032ec:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 80032ee:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80032f0:	4c3c      	ldr	r4, [pc, #240]	; (80033e4 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 80032f2:	0552      	lsls	r2, r2, #21
 80032f4:	69e3      	ldr	r3, [r4, #28]
    FlagStatus       pwrclkchanged = RESET;
 80032f6:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80032f8:	4213      	tst	r3, r2
 80032fa:	d108      	bne.n	800330e <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 80032fc:	69e3      	ldr	r3, [r4, #28]
 80032fe:	4313      	orrs	r3, r2
 8003300:	61e3      	str	r3, [r4, #28]
 8003302:	69e3      	ldr	r3, [r4, #28]
 8003304:	4013      	ands	r3, r2
 8003306:	9303      	str	r3, [sp, #12]
 8003308:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 800330a:	2301      	movs	r3, #1
 800330c:	9300      	str	r3, [sp, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800330e:	2780      	movs	r7, #128	; 0x80
 8003310:	4e35      	ldr	r6, [pc, #212]	; (80033e8 <HAL_RCCEx_PeriphCLKConfig+0x108>)
 8003312:	007f      	lsls	r7, r7, #1
 8003314:	6833      	ldr	r3, [r6, #0]
 8003316:	423b      	tst	r3, r7
 8003318:	d031      	beq.n	800337e <HAL_RCCEx_PeriphCLKConfig+0x9e>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800331a:	6a22      	ldr	r2, [r4, #32]
 800331c:	23c0      	movs	r3, #192	; 0xc0
 800331e:	0011      	movs	r1, r2
 8003320:	009b      	lsls	r3, r3, #2
 8003322:	4e32      	ldr	r6, [pc, #200]	; (80033ec <HAL_RCCEx_PeriphCLKConfig+0x10c>)
 8003324:	4019      	ands	r1, r3
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003326:	421a      	tst	r2, r3
 8003328:	d13b      	bne.n	80033a2 <HAL_RCCEx_PeriphCLKConfig+0xc2>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800332a:	6a23      	ldr	r3, [r4, #32]
 800332c:	401e      	ands	r6, r3
 800332e:	686b      	ldr	r3, [r5, #4]
 8003330:	431e      	orrs	r6, r3

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003332:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003334:	6226      	str	r6, [r4, #32]
    if(pwrclkchanged == SET)
 8003336:	2b01      	cmp	r3, #1
 8003338:	d103      	bne.n	8003342 <HAL_RCCEx_PeriphCLKConfig+0x62>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800333a:	69e3      	ldr	r3, [r4, #28]
 800333c:	4a2c      	ldr	r2, [pc, #176]	; (80033f0 <HAL_RCCEx_PeriphCLKConfig+0x110>)
 800333e:	4013      	ands	r3, r2
 8003340:	61e3      	str	r3, [r4, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003342:	682a      	ldr	r2, [r5, #0]
 8003344:	07d3      	lsls	r3, r2, #31
 8003346:	d506      	bpl.n	8003356 <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8003348:	2003      	movs	r0, #3
 800334a:	4926      	ldr	r1, [pc, #152]	; (80033e4 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 800334c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 800334e:	4383      	bics	r3, r0
 8003350:	68a8      	ldr	r0, [r5, #8]
 8003352:	4303      	orrs	r3, r0
 8003354:	630b      	str	r3, [r1, #48]	; 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003356:	0693      	lsls	r3, r2, #26
 8003358:	d506      	bpl.n	8003368 <HAL_RCCEx_PeriphCLKConfig+0x88>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800335a:	2010      	movs	r0, #16
 800335c:	4921      	ldr	r1, [pc, #132]	; (80033e4 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 800335e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8003360:	4383      	bics	r3, r0
 8003362:	68e8      	ldr	r0, [r5, #12]
 8003364:	4303      	orrs	r3, r0
 8003366:	630b      	str	r3, [r1, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8003368:	2000      	movs	r0, #0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 800336a:	0393      	lsls	r3, r2, #14
 800336c:	d517      	bpl.n	800339e <HAL_RCCEx_PeriphCLKConfig+0xbe>
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 800336e:	2180      	movs	r1, #128	; 0x80
 8003370:	4a1c      	ldr	r2, [pc, #112]	; (80033e4 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 8003372:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8003374:	438b      	bics	r3, r1
 8003376:	6929      	ldr	r1, [r5, #16]
 8003378:	430b      	orrs	r3, r1
 800337a:	6313      	str	r3, [r2, #48]	; 0x30
 800337c:	e00f      	b.n	800339e <HAL_RCCEx_PeriphCLKConfig+0xbe>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800337e:	6833      	ldr	r3, [r6, #0]
 8003380:	433b      	orrs	r3, r7
 8003382:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8003384:	f7ff fbd6 	bl	8002b34 <HAL_GetTick>
 8003388:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800338a:	6833      	ldr	r3, [r6, #0]
 800338c:	423b      	tst	r3, r7
 800338e:	d1c4      	bne.n	800331a <HAL_RCCEx_PeriphCLKConfig+0x3a>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003390:	f7ff fbd0 	bl	8002b34 <HAL_GetTick>
 8003394:	9b01      	ldr	r3, [sp, #4]
 8003396:	1ac0      	subs	r0, r0, r3
 8003398:	2864      	cmp	r0, #100	; 0x64
 800339a:	d9f6      	bls.n	800338a <HAL_RCCEx_PeriphCLKConfig+0xaa>
          return HAL_TIMEOUT;
 800339c:	2003      	movs	r0, #3
}
 800339e:	b005      	add	sp, #20
 80033a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80033a2:	686a      	ldr	r2, [r5, #4]
 80033a4:	4013      	ands	r3, r2
 80033a6:	428b      	cmp	r3, r1
 80033a8:	d0bf      	beq.n	800332a <HAL_RCCEx_PeriphCLKConfig+0x4a>
      __HAL_RCC_BACKUPRESET_FORCE();
 80033aa:	2380      	movs	r3, #128	; 0x80
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80033ac:	6a22      	ldr	r2, [r4, #32]
      __HAL_RCC_BACKUPRESET_FORCE();
 80033ae:	6a20      	ldr	r0, [r4, #32]
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80033b0:	0011      	movs	r1, r2
      __HAL_RCC_BACKUPRESET_FORCE();
 80033b2:	025b      	lsls	r3, r3, #9
 80033b4:	4303      	orrs	r3, r0
 80033b6:	6223      	str	r3, [r4, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 80033b8:	6a23      	ldr	r3, [r4, #32]
 80033ba:	480e      	ldr	r0, [pc, #56]	; (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x114>)
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80033bc:	4031      	ands	r1, r6
      __HAL_RCC_BACKUPRESET_RELEASE();
 80033be:	4003      	ands	r3, r0
 80033c0:	6223      	str	r3, [r4, #32]
      RCC->BDCR = temp_reg;
 80033c2:	6221      	str	r1, [r4, #32]
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 80033c4:	07d3      	lsls	r3, r2, #31
 80033c6:	d5b0      	bpl.n	800332a <HAL_RCCEx_PeriphCLKConfig+0x4a>
        tickstart = HAL_GetTick();
 80033c8:	f7ff fbb4 	bl	8002b34 <HAL_GetTick>
 80033cc:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80033ce:	2202      	movs	r2, #2
 80033d0:	6a23      	ldr	r3, [r4, #32]
 80033d2:	4213      	tst	r3, r2
 80033d4:	d1a9      	bne.n	800332a <HAL_RCCEx_PeriphCLKConfig+0x4a>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80033d6:	f7ff fbad 	bl	8002b34 <HAL_GetTick>
 80033da:	4b07      	ldr	r3, [pc, #28]	; (80033f8 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 80033dc:	1bc0      	subs	r0, r0, r7
 80033de:	4298      	cmp	r0, r3
 80033e0:	d9f5      	bls.n	80033ce <HAL_RCCEx_PeriphCLKConfig+0xee>
 80033e2:	e7db      	b.n	800339c <HAL_RCCEx_PeriphCLKConfig+0xbc>
 80033e4:	40021000 	.word	0x40021000
 80033e8:	40007000 	.word	0x40007000
 80033ec:	fffffcff 	.word	0xfffffcff
 80033f0:	efffffff 	.word	0xefffffff
 80033f4:	fffeffff 	.word	0xfffeffff
 80033f8:	00001388 	.word	0x00001388

080033fc <SPI_WaitFifoStateUntilTimeout.constprop.0>:
  * @param  State Fifo state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 80033fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033fe:	0017      	movs	r7, r2
{
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 8003400:	2200      	movs	r2, #0
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 8003402:	b085      	sub	sp, #20
 8003404:	001d      	movs	r5, r3
  __IO uint8_t  tmpreg8 = 0;
 8003406:	ab02      	add	r3, sp, #8
 8003408:	70da      	strb	r2, [r3, #3]
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 800340a:	0004      	movs	r4, r0
 800340c:	000e      	movs	r6, r1

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 800340e:	f7ff fb91 	bl	8002b34 <HAL_GetTick>
 8003412:	19ed      	adds	r5, r5, r7
 8003414:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8003416:	f7ff fb8d 	bl	8002b34 <HAL_GetTick>

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 800341a:	2223      	movs	r2, #35	; 0x23
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 800341c:	6823      	ldr	r3, [r4, #0]
  tmp_tickstart = HAL_GetTick();
 800341e:	9000      	str	r0, [sp, #0]
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 8003420:	9301      	str	r3, [sp, #4]
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8003422:	4b2a      	ldr	r3, [pc, #168]	; (80034cc <SPI_WaitFifoStateUntilTimeout.constprop.0+0xd0>)
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	4353      	muls	r3, r2
 8003428:	0d1b      	lsrs	r3, r3, #20
 800342a:	436b      	muls	r3, r5
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 800342c:	9303      	str	r3, [sp, #12]
  while ((hspi->Instance->SR & Fifo) != State)
 800342e:	6821      	ldr	r1, [r4, #0]
      tmpreg8 = *ptmpreg8;
 8003430:	ab02      	add	r3, sp, #8
 8003432:	1cda      	adds	r2, r3, #3
  while ((hspi->Instance->SR & Fifo) != State)
 8003434:	688b      	ldr	r3, [r1, #8]
 8003436:	0018      	movs	r0, r3
 8003438:	4030      	ands	r0, r6
 800343a:	4233      	tst	r3, r6
 800343c:	d03b      	beq.n	80034b6 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xba>
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 800343e:	23c0      	movs	r3, #192	; 0xc0
 8003440:	00db      	lsls	r3, r3, #3
 8003442:	429e      	cmp	r6, r3
 8003444:	d104      	bne.n	8003450 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
      tmpreg8 = *ptmpreg8;
 8003446:	9b01      	ldr	r3, [sp, #4]
 8003448:	7b1b      	ldrb	r3, [r3, #12]
 800344a:	b2db      	uxtb	r3, r3
 800344c:	7013      	strb	r3, [r2, #0]
      UNUSED(tmpreg8);
 800344e:	7813      	ldrb	r3, [r2, #0]
    if (Timeout != HAL_MAX_DELAY)
 8003450:	1c7b      	adds	r3, r7, #1
 8003452:	d0ef      	beq.n	8003434 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8003454:	f7ff fb6e 	bl	8002b34 <HAL_GetTick>
 8003458:	9b00      	ldr	r3, [sp, #0]
 800345a:	1ac0      	subs	r0, r0, r3
 800345c:	42a8      	cmp	r0, r5
 800345e:	d32c      	bcc.n	80034ba <SPI_WaitFifoStateUntilTimeout.constprop.0+0xbe>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8003460:	21e0      	movs	r1, #224	; 0xe0
 8003462:	6823      	ldr	r3, [r4, #0]
 8003464:	685a      	ldr	r2, [r3, #4]
 8003466:	438a      	bics	r2, r1
 8003468:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800346a:	2282      	movs	r2, #130	; 0x82
 800346c:	6861      	ldr	r1, [r4, #4]
 800346e:	0052      	lsls	r2, r2, #1
 8003470:	4291      	cmp	r1, r2
 8003472:	d10c      	bne.n	800348e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x92>
 8003474:	2180      	movs	r1, #128	; 0x80
 8003476:	68a2      	ldr	r2, [r4, #8]
 8003478:	0209      	lsls	r1, r1, #8
 800347a:	428a      	cmp	r2, r1
 800347c:	d003      	beq.n	8003486 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8a>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800347e:	2180      	movs	r1, #128	; 0x80
 8003480:	00c9      	lsls	r1, r1, #3
 8003482:	428a      	cmp	r2, r1
 8003484:	d103      	bne.n	800348e <SPI_WaitFifoStateUntilTimeout.constprop.0+0x92>
          __HAL_SPI_DISABLE(hspi);
 8003486:	2140      	movs	r1, #64	; 0x40
 8003488:	681a      	ldr	r2, [r3, #0]
 800348a:	438a      	bics	r2, r1
 800348c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800348e:	2180      	movs	r1, #128	; 0x80
 8003490:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003492:	0189      	lsls	r1, r1, #6
 8003494:	428a      	cmp	r2, r1
 8003496:	d106      	bne.n	80034a6 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xaa>
          SPI_RESET_CRC(hspi);
 8003498:	6819      	ldr	r1, [r3, #0]
 800349a:	480d      	ldr	r0, [pc, #52]	; (80034d0 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xd4>)
 800349c:	4001      	ands	r1, r0
 800349e:	6019      	str	r1, [r3, #0]
 80034a0:	6819      	ldr	r1, [r3, #0]
 80034a2:	430a      	orrs	r2, r1
 80034a4:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80034a6:	0023      	movs	r3, r4
 80034a8:	2201      	movs	r2, #1
 80034aa:	335d      	adds	r3, #93	; 0x5d
 80034ac:	701a      	strb	r2, [r3, #0]
        __HAL_UNLOCK(hspi);
 80034ae:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 80034b0:	2003      	movs	r0, #3
        __HAL_UNLOCK(hspi);
 80034b2:	345c      	adds	r4, #92	; 0x5c
 80034b4:	7023      	strb	r3, [r4, #0]
    }
  }

  return HAL_OK;
}
 80034b6:	b005      	add	sp, #20
 80034b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 80034ba:	9b03      	ldr	r3, [sp, #12]
        tmp_timeout = 0U;
 80034bc:	1e5a      	subs	r2, r3, #1
 80034be:	4193      	sbcs	r3, r2
 80034c0:	425b      	negs	r3, r3
 80034c2:	401d      	ands	r5, r3
      count--;
 80034c4:	9b03      	ldr	r3, [sp, #12]
 80034c6:	3b01      	subs	r3, #1
 80034c8:	e7b0      	b.n	800342c <SPI_WaitFifoStateUntilTimeout.constprop.0+0x30>
 80034ca:	46c0      	nop			; (mov r8, r8)
 80034cc:	20000040 	.word	0x20000040
 80034d0:	ffffdfff 	.word	0xffffdfff

080034d4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80034d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80034d6:	000e      	movs	r6, r1
 80034d8:	b085      	sub	sp, #20
 80034da:	0015      	movs	r5, r2
 80034dc:	0004      	movs	r4, r0
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80034de:	f7ff fb29 	bl	8002b34 <HAL_GetTick>
 80034e2:	19ad      	adds	r5, r5, r6
 80034e4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 80034e6:	f7ff fb25 	bl	8002b34 <HAL_GetTick>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80034ea:	2780      	movs	r7, #128	; 0x80
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80034ec:	4b25      	ldr	r3, [pc, #148]	; (8003584 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb0>)
  tmp_tickstart = HAL_GetTick();
 80034ee:	9001      	str	r0, [sp, #4]
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	015b      	lsls	r3, r3, #5
 80034f4:	0d1b      	lsrs	r3, r3, #20
 80034f6:	436b      	muls	r3, r5
 80034f8:	9303      	str	r3, [sp, #12]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80034fa:	6822      	ldr	r2, [r4, #0]
 80034fc:	6893      	ldr	r3, [r2, #8]
 80034fe:	0018      	movs	r0, r3
 8003500:	4038      	ands	r0, r7
 8003502:	423b      	tst	r3, r7
 8003504:	d032      	beq.n	800356c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
    if (Timeout != HAL_MAX_DELAY)
 8003506:	1c73      	adds	r3, r6, #1
 8003508:	d0f8      	beq.n	80034fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800350a:	f7ff fb13 	bl	8002b34 <HAL_GetTick>
 800350e:	9b01      	ldr	r3, [sp, #4]
 8003510:	1ac0      	subs	r0, r0, r3
 8003512:	42a8      	cmp	r0, r5
 8003514:	d32c      	bcc.n	8003570 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x9c>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8003516:	21e0      	movs	r1, #224	; 0xe0
 8003518:	6823      	ldr	r3, [r4, #0]
 800351a:	685a      	ldr	r2, [r3, #4]
 800351c:	438a      	bics	r2, r1
 800351e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8003520:	2282      	movs	r2, #130	; 0x82
 8003522:	6861      	ldr	r1, [r4, #4]
 8003524:	0052      	lsls	r2, r2, #1
 8003526:	4291      	cmp	r1, r2
 8003528:	d10c      	bne.n	8003544 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x70>
 800352a:	2180      	movs	r1, #128	; 0x80
 800352c:	68a2      	ldr	r2, [r4, #8]
 800352e:	0209      	lsls	r1, r1, #8
 8003530:	428a      	cmp	r2, r1
 8003532:	d003      	beq.n	800353c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x68>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8003534:	2180      	movs	r1, #128	; 0x80
 8003536:	00c9      	lsls	r1, r1, #3
 8003538:	428a      	cmp	r2, r1
 800353a:	d103      	bne.n	8003544 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x70>
          __HAL_SPI_DISABLE(hspi);
 800353c:	2140      	movs	r1, #64	; 0x40
 800353e:	681a      	ldr	r2, [r3, #0]
 8003540:	438a      	bics	r2, r1
 8003542:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8003544:	2180      	movs	r1, #128	; 0x80
 8003546:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003548:	0189      	lsls	r1, r1, #6
 800354a:	428a      	cmp	r2, r1
 800354c:	d106      	bne.n	800355c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
          SPI_RESET_CRC(hspi);
 800354e:	6819      	ldr	r1, [r3, #0]
 8003550:	480d      	ldr	r0, [pc, #52]	; (8003588 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb4>)
 8003552:	4001      	ands	r1, r0
 8003554:	6019      	str	r1, [r3, #0]
 8003556:	6819      	ldr	r1, [r3, #0]
 8003558:	430a      	orrs	r2, r1
 800355a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800355c:	0023      	movs	r3, r4
 800355e:	2201      	movs	r2, #1
 8003560:	335d      	adds	r3, #93	; 0x5d
 8003562:	701a      	strb	r2, [r3, #0]
        __HAL_UNLOCK(hspi);
 8003564:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8003566:	2003      	movs	r0, #3
        __HAL_UNLOCK(hspi);
 8003568:	345c      	adds	r4, #92	; 0x5c
 800356a:	7023      	strb	r3, [r4, #0]
}
 800356c:	b005      	add	sp, #20
 800356e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8003570:	9b03      	ldr	r3, [sp, #12]
        tmp_timeout = 0U;
 8003572:	1e5a      	subs	r2, r3, #1
 8003574:	4193      	sbcs	r3, r2
 8003576:	425b      	negs	r3, r3
 8003578:	401d      	ands	r5, r3
      count--;
 800357a:	9b03      	ldr	r3, [sp, #12]
 800357c:	3b01      	subs	r3, #1
 800357e:	9303      	str	r3, [sp, #12]
 8003580:	e7bb      	b.n	80034fa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 8003582:	46c0      	nop			; (mov r8, r8)
 8003584:	20000040 	.word	0x20000040
 8003588:	ffffdfff 	.word	0xffffdfff

0800358c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800358c:	b570      	push	{r4, r5, r6, lr}
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800358e:	0013      	movs	r3, r2
{
 8003590:	000d      	movs	r5, r1
 8003592:	0016      	movs	r6, r2
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8003594:	000a      	movs	r2, r1
 8003596:	21c0      	movs	r1, #192	; 0xc0
 8003598:	0149      	lsls	r1, r1, #5
{
 800359a:	0004      	movs	r4, r0
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800359c:	f7ff ff2e 	bl	80033fc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 80035a0:	2800      	cmp	r0, #0
 80035a2:	d005      	beq.n	80035b0 <SPI_EndRxTxTransaction+0x24>
  }

  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80035a4:	2320      	movs	r3, #32
 80035a6:	6e22      	ldr	r2, [r4, #96]	; 0x60
    return HAL_TIMEOUT;
 80035a8:	2003      	movs	r0, #3
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80035aa:	4313      	orrs	r3, r2
 80035ac:	6623      	str	r3, [r4, #96]	; 0x60
    return HAL_TIMEOUT;
 80035ae:	e00f      	b.n	80035d0 <SPI_EndRxTxTransaction+0x44>
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80035b0:	0032      	movs	r2, r6
 80035b2:	0029      	movs	r1, r5
 80035b4:	0020      	movs	r0, r4
 80035b6:	f7ff ff8d 	bl	80034d4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80035ba:	2800      	cmp	r0, #0
 80035bc:	d1f2      	bne.n	80035a4 <SPI_EndRxTxTransaction+0x18>
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 80035be:	21c0      	movs	r1, #192	; 0xc0
 80035c0:	0033      	movs	r3, r6
 80035c2:	002a      	movs	r2, r5
 80035c4:	0020      	movs	r0, r4
 80035c6:	00c9      	lsls	r1, r1, #3
 80035c8:	f7ff ff18 	bl	80033fc <SPI_WaitFifoStateUntilTimeout.constprop.0>
 80035cc:	2800      	cmp	r0, #0
 80035ce:	d1e9      	bne.n	80035a4 <SPI_EndRxTxTransaction+0x18>
  }

  return HAL_OK;
}
 80035d0:	bd70      	pop	{r4, r5, r6, pc}
	...

080035d4 <HAL_SPI_Init>:
{
 80035d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035d6:	0004      	movs	r4, r0
    return HAL_ERROR;
 80035d8:	2001      	movs	r0, #1
  if (hspi == NULL)
 80035da:	2c00      	cmp	r4, #0
 80035dc:	d067      	beq.n	80036ae <HAL_SPI_Init+0xda>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80035de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d165      	bne.n	80036b0 <HAL_SPI_Init+0xdc>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80035e4:	2282      	movs	r2, #130	; 0x82
 80035e6:	6861      	ldr	r1, [r4, #4]
 80035e8:	0052      	lsls	r2, r2, #1
 80035ea:	4291      	cmp	r1, r2
 80035ec:	d000      	beq.n	80035f0 <HAL_SPI_Init+0x1c>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80035ee:	61e3      	str	r3, [r4, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80035f0:	2300      	movs	r3, #0
  if (hspi->State == HAL_SPI_STATE_RESET)
 80035f2:	0025      	movs	r5, r4
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80035f4:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80035f6:	355d      	adds	r5, #93	; 0x5d
 80035f8:	782b      	ldrb	r3, [r5, #0]
 80035fa:	b2da      	uxtb	r2, r3
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d105      	bne.n	800360c <HAL_SPI_Init+0x38>
    hspi->Lock = HAL_UNLOCKED;
 8003600:	0023      	movs	r3, r4
 8003602:	335c      	adds	r3, #92	; 0x5c
    HAL_SPI_MspInit(hspi);
 8003604:	0020      	movs	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 8003606:	701a      	strb	r2, [r3, #0]
    HAL_SPI_MspInit(hspi);
 8003608:	f7ff f91a 	bl	8002840 <HAL_SPI_MspInit>
  hspi->State = HAL_SPI_STATE_BUSY;
 800360c:	2302      	movs	r3, #2
  __HAL_SPI_DISABLE(hspi);
 800360e:	2140      	movs	r1, #64	; 0x40
  hspi->State = HAL_SPI_STATE_BUSY;
 8003610:	702b      	strb	r3, [r5, #0]
  __HAL_SPI_DISABLE(hspi);
 8003612:	6822      	ldr	r2, [r4, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8003614:	68e5      	ldr	r5, [r4, #12]
  __HAL_SPI_DISABLE(hspi);
 8003616:	6813      	ldr	r3, [r2, #0]
 8003618:	438b      	bics	r3, r1
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800361a:	21e0      	movs	r1, #224	; 0xe0
  __HAL_SPI_DISABLE(hspi);
 800361c:	6013      	str	r3, [r2, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800361e:	00c9      	lsls	r1, r1, #3
 8003620:	2300      	movs	r3, #0
 8003622:	428d      	cmp	r5, r1
 8003624:	d848      	bhi.n	80036b8 <HAL_SPI_Init+0xe4>
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8003626:	2080      	movs	r0, #128	; 0x80
 8003628:	0140      	lsls	r0, r0, #5
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 800362a:	428d      	cmp	r5, r1
 800362c:	d000      	beq.n	8003630 <HAL_SPI_Init+0x5c>
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800362e:	62a3      	str	r3, [r4, #40]	; 0x28
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8003630:	2382      	movs	r3, #130	; 0x82
 8003632:	6866      	ldr	r6, [r4, #4]
 8003634:	005b      	lsls	r3, r3, #1
 8003636:	4033      	ands	r3, r6
 8003638:	2684      	movs	r6, #132	; 0x84
 800363a:	68a7      	ldr	r7, [r4, #8]
 800363c:	0236      	lsls	r6, r6, #8
 800363e:	403e      	ands	r6, r7
 8003640:	4333      	orrs	r3, r6
 8003642:	2602      	movs	r6, #2
 8003644:	6927      	ldr	r7, [r4, #16]
 8003646:	69a1      	ldr	r1, [r4, #24]
 8003648:	403e      	ands	r6, r7
 800364a:	4333      	orrs	r3, r6
 800364c:	2601      	movs	r6, #1
 800364e:	6967      	ldr	r7, [r4, #20]
 8003650:	46b4      	mov	ip, r6
 8003652:	4037      	ands	r7, r6
 8003654:	433b      	orrs	r3, r7
 8003656:	2780      	movs	r7, #128	; 0x80
 8003658:	00bf      	lsls	r7, r7, #2
 800365a:	400f      	ands	r7, r1
 800365c:	433b      	orrs	r3, r7
 800365e:	2738      	movs	r7, #56	; 0x38
 8003660:	69e6      	ldr	r6, [r4, #28]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8003662:	0c09      	lsrs	r1, r1, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8003664:	4037      	ands	r7, r6
 8003666:	433b      	orrs	r3, r7
 8003668:	2780      	movs	r7, #128	; 0x80
 800366a:	6a26      	ldr	r6, [r4, #32]
 800366c:	4037      	ands	r7, r6
 800366e:	433b      	orrs	r3, r7
 8003670:	2780      	movs	r7, #128	; 0x80
 8003672:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003674:	01bf      	lsls	r7, r7, #6
 8003676:	4037      	ands	r7, r6
 8003678:	433b      	orrs	r3, r7
 800367a:	6013      	str	r3, [r2, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 800367c:	2310      	movs	r3, #16
 800367e:	2708      	movs	r7, #8
 8003680:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003682:	4033      	ands	r3, r6
 8003684:	6b66      	ldr	r6, [r4, #52]	; 0x34
 8003686:	4037      	ands	r7, r6
 8003688:	433b      	orrs	r3, r7
 800368a:	27f0      	movs	r7, #240	; 0xf0
 800368c:	013f      	lsls	r7, r7, #4
 800368e:	403d      	ands	r5, r7
 8003690:	431d      	orrs	r5, r3
 8003692:	2304      	movs	r3, #4
 8003694:	4019      	ands	r1, r3
 8003696:	4329      	orrs	r1, r5
 8003698:	4308      	orrs	r0, r1
 800369a:	6050      	str	r0, [r2, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800369c:	69d3      	ldr	r3, [r2, #28]
 800369e:	4908      	ldr	r1, [pc, #32]	; (80036c0 <HAL_SPI_Init+0xec>)
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80036a0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80036a2:	400b      	ands	r3, r1
 80036a4:	61d3      	str	r3, [r2, #28]
  hspi->State     = HAL_SPI_STATE_READY;
 80036a6:	4663      	mov	r3, ip
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80036a8:	6620      	str	r0, [r4, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 80036aa:	345d      	adds	r4, #93	; 0x5d
 80036ac:	7023      	strb	r3, [r4, #0]
}
 80036ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80036b0:	2300      	movs	r3, #0
 80036b2:	6123      	str	r3, [r4, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80036b4:	6163      	str	r3, [r4, #20]
 80036b6:	e79b      	b.n	80035f0 <HAL_SPI_Init+0x1c>
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80036b8:	21f0      	movs	r1, #240	; 0xf0
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80036ba:	0018      	movs	r0, r3
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80036bc:	0109      	lsls	r1, r1, #4
 80036be:	e7b4      	b.n	800362a <HAL_SPI_Init+0x56>
 80036c0:	fffff7ff 	.word	0xfffff7ff

080036c4 <HAL_SPI_TransmitReceive>:
{
 80036c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036c6:	001e      	movs	r6, r3
  __HAL_LOCK(hspi);
 80036c8:	0003      	movs	r3, r0
 80036ca:	335c      	adds	r3, #92	; 0x5c
{
 80036cc:	0017      	movs	r7, r2
  __HAL_LOCK(hspi);
 80036ce:	781a      	ldrb	r2, [r3, #0]
{
 80036d0:	0004      	movs	r4, r0
 80036d2:	000d      	movs	r5, r1
  __HAL_LOCK(hspi);
 80036d4:	2002      	movs	r0, #2
 80036d6:	2a01      	cmp	r2, #1
 80036d8:	d01b      	beq.n	8003712 <HAL_SPI_TransmitReceive+0x4e>
 80036da:	2201      	movs	r2, #1
 80036dc:	701a      	strb	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80036de:	f7ff fa29 	bl	8002b34 <HAL_GetTick>
  tmp_state           = hspi->State;
 80036e2:	0023      	movs	r3, r4
  tickstart = HAL_GetTick();
 80036e4:	9001      	str	r0, [sp, #4]
  tmp_state           = hspi->State;
 80036e6:	335d      	adds	r3, #93	; 0x5d
 80036e8:	781b      	ldrb	r3, [r3, #0]
  tmp_mode            = hspi->Init.Mode;
 80036ea:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 80036ec:	b2da      	uxtb	r2, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80036ee:	2b01      	cmp	r3, #1
 80036f0:	d009      	beq.n	8003706 <HAL_SPI_TransmitReceive+0x42>
 80036f2:	2382      	movs	r3, #130	; 0x82
    errorcode = HAL_BUSY;
 80036f4:	2002      	movs	r0, #2
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80036f6:	005b      	lsls	r3, r3, #1
 80036f8:	4299      	cmp	r1, r3
 80036fa:	d107      	bne.n	800370c <HAL_SPI_TransmitReceive+0x48>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80036fc:	68a3      	ldr	r3, [r4, #8]
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d104      	bne.n	800370c <HAL_SPI_TransmitReceive+0x48>
 8003702:	2a04      	cmp	r2, #4
 8003704:	d102      	bne.n	800370c <HAL_SPI_TransmitReceive+0x48>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8003706:	2d00      	cmp	r5, #0
 8003708:	d104      	bne.n	8003714 <HAL_SPI_TransmitReceive+0x50>
    errorcode = HAL_ERROR;
 800370a:	2001      	movs	r0, #1
  __HAL_UNLOCK(hspi);
 800370c:	2300      	movs	r3, #0
 800370e:	345c      	adds	r4, #92	; 0x5c
 8003710:	7023      	strb	r3, [r4, #0]
}
 8003712:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8003714:	2f00      	cmp	r7, #0
 8003716:	d0f8      	beq.n	800370a <HAL_SPI_TransmitReceive+0x46>
 8003718:	2e00      	cmp	r6, #0
 800371a:	d0f6      	beq.n	800370a <HAL_SPI_TransmitReceive+0x46>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800371c:	0023      	movs	r3, r4
 800371e:	335d      	adds	r3, #93	; 0x5d
 8003720:	781a      	ldrb	r2, [r3, #0]
 8003722:	2a04      	cmp	r2, #4
 8003724:	d001      	beq.n	800372a <HAL_SPI_TransmitReceive+0x66>
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8003726:	2205      	movs	r2, #5
 8003728:	701a      	strb	r2, [r3, #0]
  hspi->RxXferCount = Size;
 800372a:	0022      	movs	r2, r4
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800372c:	2300      	movs	r3, #0
  hspi->RxXferCount = Size;
 800372e:	3208      	adds	r2, #8
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8003730:	6623      	str	r3, [r4, #96]	; 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8003732:	6427      	str	r7, [r4, #64]	; 0x40
  hspi->RxXferCount = Size;
 8003734:	87d6      	strh	r6, [r2, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8003736:	1da2      	adds	r2, r4, #6
 8003738:	87d6      	strh	r6, [r2, #62]	; 0x3e
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800373a:	22e0      	movs	r2, #224	; 0xe0
 800373c:	68e0      	ldr	r0, [r4, #12]
  hspi->RxISR       = NULL;
 800373e:	64e3      	str	r3, [r4, #76]	; 0x4c
  hspi->TxISR       = NULL;
 8003740:	6523      	str	r3, [r4, #80]	; 0x50
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8003742:	63a5      	str	r5, [r4, #56]	; 0x38
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8003744:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferCount = Size;
 8003746:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8003748:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800374a:	00d2      	lsls	r2, r2, #3
 800374c:	4290      	cmp	r0, r2
 800374e:	d935      	bls.n	80037bc <HAL_SPI_TransmitReceive+0xf8>
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8003750:	685a      	ldr	r2, [r3, #4]
 8003752:	4f62      	ldr	r7, [pc, #392]	; (80038dc <HAL_SPI_TransmitReceive+0x218>)
 8003754:	403a      	ands	r2, r7
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8003756:	605a      	str	r2, [r3, #4]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8003758:	2240      	movs	r2, #64	; 0x40
 800375a:	681f      	ldr	r7, [r3, #0]
 800375c:	4217      	tst	r7, r2
 800375e:	d102      	bne.n	8003766 <HAL_SPI_TransmitReceive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 8003760:	681f      	ldr	r7, [r3, #0]
 8003762:	433a      	orrs	r2, r7
 8003764:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8003766:	22e0      	movs	r2, #224	; 0xe0
 8003768:	00d2      	lsls	r2, r2, #3
 800376a:	4290      	cmp	r0, r2
 800376c:	d961      	bls.n	8003832 <HAL_SPI_TransmitReceive+0x16e>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800376e:	2900      	cmp	r1, #0
 8003770:	d001      	beq.n	8003776 <HAL_SPI_TransmitReceive+0xb2>
 8003772:	2e01      	cmp	r6, #1
 8003774:	d107      	bne.n	8003786 <HAL_SPI_TransmitReceive+0xc2>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8003776:	882a      	ldrh	r2, [r5, #0]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8003778:	3502      	adds	r5, #2
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800377a:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800377c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800377e:	63a5      	str	r5, [r4, #56]	; 0x38
      hspi->TxXferCount--;
 8003780:	3b01      	subs	r3, #1
 8003782:	b29b      	uxth	r3, r3
 8003784:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8003786:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8003788:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800378a:	002e      	movs	r6, r5
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800378c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800378e:	2b00      	cmp	r3, #0
 8003790:	d119      	bne.n	80037c6 <HAL_SPI_TransmitReceive+0x102>
 8003792:	0023      	movs	r3, r4
 8003794:	3308      	adds	r3, #8
 8003796:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003798:	2b00      	cmp	r3, #0
 800379a:	d114      	bne.n	80037c6 <HAL_SPI_TransmitReceive+0x102>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800379c:	0020      	movs	r0, r4
 800379e:	9a01      	ldr	r2, [sp, #4]
 80037a0:	9908      	ldr	r1, [sp, #32]
 80037a2:	f7ff fef3 	bl	800358c <SPI_EndRxTxTransaction>
 80037a6:	2800      	cmp	r0, #0
 80037a8:	d000      	beq.n	80037ac <HAL_SPI_TransmitReceive+0xe8>
 80037aa:	e093      	b.n	80038d4 <HAL_SPI_TransmitReceive+0x210>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80037ac:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	d1ab      	bne.n	800370a <HAL_SPI_TransmitReceive+0x46>
    hspi->State = HAL_SPI_STATE_READY;
 80037b2:	0023      	movs	r3, r4
 80037b4:	2201      	movs	r2, #1
 80037b6:	335d      	adds	r3, #93	; 0x5d
 80037b8:	701a      	strb	r2, [r3, #0]
 80037ba:	e7a7      	b.n	800370c <HAL_SPI_TransmitReceive+0x48>
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80037bc:	2280      	movs	r2, #128	; 0x80
 80037be:	685f      	ldr	r7, [r3, #4]
 80037c0:	0152      	lsls	r2, r2, #5
 80037c2:	433a      	orrs	r2, r7
 80037c4:	e7c7      	b.n	8003756 <HAL_SPI_TransmitReceive+0x92>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80037c6:	6820      	ldr	r0, [r4, #0]
 80037c8:	6883      	ldr	r3, [r0, #8]
 80037ca:	423b      	tst	r3, r7
 80037cc:	d00e      	beq.n	80037ec <HAL_SPI_TransmitReceive+0x128>
 80037ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	d00b      	beq.n	80037ec <HAL_SPI_TransmitReceive+0x128>
 80037d4:	2d01      	cmp	r5, #1
 80037d6:	d109      	bne.n	80037ec <HAL_SPI_TransmitReceive+0x128>
        txallowed = 0U;
 80037d8:	2500      	movs	r5, #0
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80037da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80037dc:	881a      	ldrh	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80037de:	3302      	adds	r3, #2
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80037e0:	60c2      	str	r2, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80037e2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->TxXferCount--;
 80037e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80037e6:	3b01      	subs	r3, #1
 80037e8:	b29b      	uxth	r3, r3
 80037ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80037ec:	6883      	ldr	r3, [r0, #8]
 80037ee:	0019      	movs	r1, r3
 80037f0:	4031      	ands	r1, r6
 80037f2:	4233      	tst	r3, r6
 80037f4:	d00e      	beq.n	8003814 <HAL_SPI_TransmitReceive+0x150>
 80037f6:	0022      	movs	r2, r4
 80037f8:	3208      	adds	r2, #8
 80037fa:	8fd3      	ldrh	r3, [r2, #62]	; 0x3e
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d009      	beq.n	8003814 <HAL_SPI_TransmitReceive+0x150>
        txallowed = 1U;
 8003800:	000d      	movs	r5, r1
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8003802:	68c0      	ldr	r0, [r0, #12]
 8003804:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003806:	8018      	strh	r0, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8003808:	3302      	adds	r3, #2
 800380a:	6423      	str	r3, [r4, #64]	; 0x40
        hspi->RxXferCount--;
 800380c:	8fd3      	ldrh	r3, [r2, #62]	; 0x3e
 800380e:	3b01      	subs	r3, #1
 8003810:	b29b      	uxth	r3, r3
 8003812:	87d3      	strh	r3, [r2, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8003814:	f7ff f98e 	bl	8002b34 <HAL_GetTick>
 8003818:	9b01      	ldr	r3, [sp, #4]
 800381a:	1ac0      	subs	r0, r0, r3
 800381c:	9b08      	ldr	r3, [sp, #32]
 800381e:	4298      	cmp	r0, r3
 8003820:	d3b4      	bcc.n	800378c <HAL_SPI_TransmitReceive+0xc8>
 8003822:	3301      	adds	r3, #1
 8003824:	d0b2      	beq.n	800378c <HAL_SPI_TransmitReceive+0xc8>
        hspi->State = HAL_SPI_STATE_READY;
 8003826:	0023      	movs	r3, r4
 8003828:	2201      	movs	r2, #1
 800382a:	335d      	adds	r3, #93	; 0x5d
        errorcode = HAL_TIMEOUT;
 800382c:	2003      	movs	r0, #3
        hspi->State = HAL_SPI_STATE_READY;
 800382e:	701a      	strb	r2, [r3, #0]
        goto error;
 8003830:	e76c      	b.n	800370c <HAL_SPI_TransmitReceive+0x48>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8003832:	2900      	cmp	r1, #0
 8003834:	d001      	beq.n	800383a <HAL_SPI_TransmitReceive+0x176>
 8003836:	2e01      	cmp	r6, #1
 8003838:	d108      	bne.n	800384c <HAL_SPI_TransmitReceive+0x188>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800383a:	782a      	ldrb	r2, [r5, #0]
 800383c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800383e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003840:	3301      	adds	r3, #1
 8003842:	63a3      	str	r3, [r4, #56]	; 0x38
      hspi->TxXferCount--;
 8003844:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8003846:	3b01      	subs	r3, #1
 8003848:	b29b      	uxth	r3, r3
 800384a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800384c:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800384e:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8003850:	002e      	movs	r6, r5
 8003852:	e032      	b.n	80038ba <HAL_SPI_TransmitReceive+0x1f6>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8003854:	6823      	ldr	r3, [r4, #0]
 8003856:	689a      	ldr	r2, [r3, #8]
 8003858:	423a      	tst	r2, r7
 800385a:	d00f      	beq.n	800387c <HAL_SPI_TransmitReceive+0x1b8>
 800385c:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800385e:	2a00      	cmp	r2, #0
 8003860:	d00c      	beq.n	800387c <HAL_SPI_TransmitReceive+0x1b8>
 8003862:	2d01      	cmp	r5, #1
 8003864:	d10a      	bne.n	800387c <HAL_SPI_TransmitReceive+0x1b8>
        txallowed = 0U;
 8003866:	2500      	movs	r5, #0
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8003868:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800386a:	7812      	ldrb	r2, [r2, #0]
 800386c:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr++;
 800386e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003870:	3301      	adds	r3, #1
 8003872:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->TxXferCount--;
 8003874:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8003876:	3b01      	subs	r3, #1
 8003878:	b29b      	uxth	r3, r3
 800387a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800387c:	6823      	ldr	r3, [r4, #0]
 800387e:	689a      	ldr	r2, [r3, #8]
 8003880:	0011      	movs	r1, r2
 8003882:	4031      	ands	r1, r6
 8003884:	4232      	tst	r2, r6
 8003886:	d00f      	beq.n	80038a8 <HAL_SPI_TransmitReceive+0x1e4>
 8003888:	0022      	movs	r2, r4
 800388a:	3208      	adds	r2, #8
 800388c:	8fd0      	ldrh	r0, [r2, #62]	; 0x3e
 800388e:	2800      	cmp	r0, #0
 8003890:	d00a      	beq.n	80038a8 <HAL_SPI_TransmitReceive+0x1e4>
        txallowed = 1U;
 8003892:	000d      	movs	r5, r1
        (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8003894:	7b1b      	ldrb	r3, [r3, #12]
 8003896:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8003898:	7003      	strb	r3, [r0, #0]
        hspi->pRxBuffPtr++;
 800389a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800389c:	3301      	adds	r3, #1
 800389e:	6423      	str	r3, [r4, #64]	; 0x40
        hspi->RxXferCount--;
 80038a0:	8fd3      	ldrh	r3, [r2, #62]	; 0x3e
 80038a2:	3b01      	subs	r3, #1
 80038a4:	b29b      	uxth	r3, r3
 80038a6:	87d3      	strh	r3, [r2, #62]	; 0x3e
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80038a8:	f7ff f944 	bl	8002b34 <HAL_GetTick>
 80038ac:	9b01      	ldr	r3, [sp, #4]
 80038ae:	1ac0      	subs	r0, r0, r3
 80038b0:	9b08      	ldr	r3, [sp, #32]
 80038b2:	4298      	cmp	r0, r3
 80038b4:	d30a      	bcc.n	80038cc <HAL_SPI_TransmitReceive+0x208>
 80038b6:	3301      	adds	r3, #1
 80038b8:	d1b5      	bne.n	8003826 <HAL_SPI_TransmitReceive+0x162>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80038ba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d1c9      	bne.n	8003854 <HAL_SPI_TransmitReceive+0x190>
 80038c0:	0023      	movs	r3, r4
 80038c2:	3308      	adds	r3, #8
 80038c4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d1c4      	bne.n	8003854 <HAL_SPI_TransmitReceive+0x190>
 80038ca:	e767      	b.n	800379c <HAL_SPI_TransmitReceive+0xd8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80038cc:	9b08      	ldr	r3, [sp, #32]
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d1f3      	bne.n	80038ba <HAL_SPI_TransmitReceive+0x1f6>
 80038d2:	e7a8      	b.n	8003826 <HAL_SPI_TransmitReceive+0x162>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80038d4:	2320      	movs	r3, #32
    errorcode = HAL_ERROR;
 80038d6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80038d8:	6623      	str	r3, [r4, #96]	; 0x60
 80038da:	e767      	b.n	80037ac <HAL_SPI_TransmitReceive+0xe8>
 80038dc:	ffffefff 	.word	0xffffefff

080038e0 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 80038e0:	b530      	push	{r4, r5, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80038e2:	f3ef 8410 	mrs	r4, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80038e6:	2201      	movs	r2, #1
 80038e8:	f382 8810 	msr	PRIMASK, r2
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80038ec:	6801      	ldr	r1, [r0, #0]
 80038ee:	4d12      	ldr	r5, [pc, #72]	; (8003938 <UART_EndRxTransfer+0x58>)
 80038f0:	680b      	ldr	r3, [r1, #0]
 80038f2:	402b      	ands	r3, r5
 80038f4:	600b      	str	r3, [r1, #0]
 80038f6:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80038fa:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80038fe:	f382 8810 	msr	PRIMASK, r2
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003902:	6801      	ldr	r1, [r0, #0]
 8003904:	688b      	ldr	r3, [r1, #8]
 8003906:	4393      	bics	r3, r2
 8003908:	608b      	str	r3, [r1, #8]
 800390a:	f384 8810 	msr	PRIMASK, r4

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800390e:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003910:	4293      	cmp	r3, r2
 8003912:	d10a      	bne.n	800392a <UART_EndRxTransfer+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003914:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003918:	f383 8810 	msr	PRIMASK, r3
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800391c:	2410      	movs	r4, #16
 800391e:	6802      	ldr	r2, [r0, #0]
 8003920:	6813      	ldr	r3, [r2, #0]
 8003922:	43a3      	bics	r3, r4
 8003924:	6013      	str	r3, [r2, #0]
 8003926:	f381 8810 	msr	PRIMASK, r1
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800392a:	2220      	movs	r2, #32
 800392c:	1d03      	adds	r3, r0, #4
 800392e:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003930:	2300      	movs	r3, #0
 8003932:	6603      	str	r3, [r0, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8003934:	6683      	str	r3, [r0, #104]	; 0x68
}
 8003936:	bd30      	pop	{r4, r5, pc}
 8003938:	fffffedf 	.word	0xfffffedf

0800393c <UART_SetConfig>:
{
 800393c:	b570      	push	{r4, r5, r6, lr}
 800393e:	0004      	movs	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003940:	6925      	ldr	r5, [r4, #16]
 8003942:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003944:	6801      	ldr	r1, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003946:	432a      	orrs	r2, r5
 8003948:	6965      	ldr	r5, [r4, #20]
 800394a:	69c3      	ldr	r3, [r0, #28]
 800394c:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800394e:	6808      	ldr	r0, [r1, #0]
 8003950:	4d3e      	ldr	r5, [pc, #248]	; (8003a4c <UART_SetConfig+0x110>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003952:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003954:	4028      	ands	r0, r5
 8003956:	4302      	orrs	r2, r0
 8003958:	600a      	str	r2, [r1, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800395a:	684a      	ldr	r2, [r1, #4]
 800395c:	483c      	ldr	r0, [pc, #240]	; (8003a50 <UART_SetConfig+0x114>)
  tmpreg |= huart->Init.OneBitSampling;
 800395e:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003960:	4002      	ands	r2, r0
 8003962:	68e0      	ldr	r0, [r4, #12]
 8003964:	4302      	orrs	r2, r0
 8003966:	604a      	str	r2, [r1, #4]
  tmpreg |= huart->Init.OneBitSampling;
 8003968:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800396a:	6888      	ldr	r0, [r1, #8]
  tmpreg |= huart->Init.OneBitSampling;
 800396c:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800396e:	4d39      	ldr	r5, [pc, #228]	; (8003a54 <UART_SetConfig+0x118>)
 8003970:	4028      	ands	r0, r5
 8003972:	4302      	orrs	r2, r0
 8003974:	608a      	str	r2, [r1, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003976:	4a38      	ldr	r2, [pc, #224]	; (8003a58 <UART_SetConfig+0x11c>)
 8003978:	4291      	cmp	r1, r2
 800397a:	d115      	bne.n	80039a8 <UART_SetConfig+0x6c>
 800397c:	2103      	movs	r1, #3
 800397e:	4a37      	ldr	r2, [pc, #220]	; (8003a5c <UART_SetConfig+0x120>)
 8003980:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8003982:	400a      	ands	r2, r1
 8003984:	2180      	movs	r1, #128	; 0x80
 8003986:	3a01      	subs	r2, #1
 8003988:	0209      	lsls	r1, r1, #8
 800398a:	2a02      	cmp	r2, #2
 800398c:	d852      	bhi.n	8003a34 <UART_SetConfig+0xf8>
 800398e:	4834      	ldr	r0, [pc, #208]	; (8003a60 <UART_SetConfig+0x124>)
 8003990:	5c80      	ldrb	r0, [r0, r2]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003992:	428b      	cmp	r3, r1
 8003994:	d014      	beq.n	80039c0 <UART_SetConfig+0x84>
    switch (clocksource)
 8003996:	2808      	cmp	r0, #8
 8003998:	d84a      	bhi.n	8003a30 <UART_SetConfig+0xf4>
 800399a:	f7fc fbbd 	bl	8000118 <__gnu_thumb1_case_uqi>
 800399e:	490c      	.short	0x490c
 80039a0:	49444947 	.word	0x49444947
 80039a4:	4949      	.short	0x4949
 80039a6:	34          	.byte	0x34
 80039a7:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 80039a8:	4a2e      	ldr	r2, [pc, #184]	; (8003a64 <UART_SetConfig+0x128>)
 80039aa:	4291      	cmp	r1, r2
 80039ac:	d140      	bne.n	8003a30 <UART_SetConfig+0xf4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80039ae:	2280      	movs	r2, #128	; 0x80
 80039b0:	0212      	lsls	r2, r2, #8
 80039b2:	4293      	cmp	r3, r2
 80039b4:	d040      	beq.n	8003a38 <UART_SetConfig+0xfc>
        pclk = HAL_RCC_GetPCLK1Freq();
 80039b6:	f7ff fc83 	bl	80032c0 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80039ba:	2800      	cmp	r0, #0
 80039bc:	d040      	beq.n	8003a40 <UART_SetConfig+0x104>
 80039be:	e024      	b.n	8003a0a <UART_SetConfig+0xce>
    switch (clocksource)
 80039c0:	2808      	cmp	r0, #8
 80039c2:	d835      	bhi.n	8003a30 <UART_SetConfig+0xf4>
 80039c4:	f7fc fba8 	bl	8000118 <__gnu_thumb1_case_uqi>
 80039c8:	34083438 	.word	0x34083438
 80039cc:	34343405 	.word	0x34343405
 80039d0:	09          	.byte	0x09
 80039d1:	00          	.byte	0x00
        pclk = HAL_RCC_GetSysClockFreq();
 80039d2:	f7ff fbd1 	bl	8003178 <HAL_RCC_GetSysClockFreq>
 80039d6:	e031      	b.n	8003a3c <UART_SetConfig+0x100>
    switch (clocksource)
 80039d8:	4b23      	ldr	r3, [pc, #140]	; (8003a68 <UART_SetConfig+0x12c>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80039da:	0058      	lsls	r0, r3, #1
 80039dc:	6863      	ldr	r3, [r4, #4]
 80039de:	6861      	ldr	r1, [r4, #4]
 80039e0:	085b      	lsrs	r3, r3, #1
 80039e2:	18c0      	adds	r0, r0, r3
 80039e4:	f7fc fbac 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80039e8:	0002      	movs	r2, r0
 80039ea:	4b20      	ldr	r3, [pc, #128]	; (8003a6c <UART_SetConfig+0x130>)
 80039ec:	3a10      	subs	r2, #16
 80039ee:	429a      	cmp	r2, r3
 80039f0:	d81e      	bhi.n	8003a30 <UART_SetConfig+0xf4>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80039f2:	230f      	movs	r3, #15
 80039f4:	0002      	movs	r2, r0
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80039f6:	0700      	lsls	r0, r0, #28
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80039f8:	439a      	bics	r2, r3
 80039fa:	b293      	uxth	r3, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80039fc:	0f40      	lsrs	r0, r0, #29
        huart->Instance->BRR = brrtemp;
 80039fe:	6822      	ldr	r2, [r4, #0]
 8003a00:	4318      	orrs	r0, r3
 8003a02:	60d0      	str	r0, [r2, #12]
 8003a04:	e01c      	b.n	8003a40 <UART_SetConfig+0x104>
    switch (clocksource)
 8003a06:	2080      	movs	r0, #128	; 0x80
 8003a08:	0200      	lsls	r0, r0, #8
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003a0a:	6863      	ldr	r3, [r4, #4]
 8003a0c:	6861      	ldr	r1, [r4, #4]
 8003a0e:	085b      	lsrs	r3, r3, #1
 8003a10:	1818      	adds	r0, r3, r0
 8003a12:	f7fc fb95 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003a16:	0002      	movs	r2, r0
 8003a18:	4b14      	ldr	r3, [pc, #80]	; (8003a6c <UART_SetConfig+0x130>)
 8003a1a:	3a10      	subs	r2, #16
 8003a1c:	429a      	cmp	r2, r3
 8003a1e:	d807      	bhi.n	8003a30 <UART_SetConfig+0xf4>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8003a20:	6823      	ldr	r3, [r4, #0]
 8003a22:	60d8      	str	r0, [r3, #12]
 8003a24:	e00c      	b.n	8003a40 <UART_SetConfig+0x104>
        pclk = HAL_RCC_GetSysClockFreq();
 8003a26:	f7ff fba7 	bl	8003178 <HAL_RCC_GetSysClockFreq>
        break;
 8003a2a:	e7c6      	b.n	80039ba <UART_SetConfig+0x7e>
        pclk = (uint32_t) HSI_VALUE;
 8003a2c:	480e      	ldr	r0, [pc, #56]	; (8003a68 <UART_SetConfig+0x12c>)
 8003a2e:	e7ec      	b.n	8003a0a <UART_SetConfig+0xce>
    switch (clocksource)
 8003a30:	2001      	movs	r0, #1
 8003a32:	e006      	b.n	8003a42 <UART_SetConfig+0x106>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003a34:	428b      	cmp	r3, r1
 8003a36:	d1be      	bne.n	80039b6 <UART_SetConfig+0x7a>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003a38:	f7ff fc42 	bl	80032c0 <HAL_RCC_GetPCLK1Freq>
        pclk = HAL_RCC_GetSysClockFreq();
 8003a3c:	1e03      	subs	r3, r0, #0
    if (pclk != 0U)
 8003a3e:	d1cc      	bne.n	80039da <UART_SetConfig+0x9e>
 8003a40:	2000      	movs	r0, #0
  huart->RxISR = NULL;
 8003a42:	2300      	movs	r3, #0
 8003a44:	66a3      	str	r3, [r4, #104]	; 0x68
  huart->TxISR = NULL;
 8003a46:	66e3      	str	r3, [r4, #108]	; 0x6c
}
 8003a48:	bd70      	pop	{r4, r5, r6, pc}
 8003a4a:	46c0      	nop			; (mov r8, r8)
 8003a4c:	efff69f3 	.word	0xefff69f3
 8003a50:	ffffcfff 	.word	0xffffcfff
 8003a54:	fffff4ff 	.word	0xfffff4ff
 8003a58:	40013800 	.word	0x40013800
 8003a5c:	40021000 	.word	0x40021000
 8003a60:	08006ea6 	.word	0x08006ea6
 8003a64:	40004400 	.word	0x40004400
 8003a68:	007a1200 	.word	0x007a1200
 8003a6c:	0000ffef 	.word	0x0000ffef

08003a70 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003a70:	6a43      	ldr	r3, [r0, #36]	; 0x24
{
 8003a72:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003a74:	07da      	lsls	r2, r3, #31
 8003a76:	d506      	bpl.n	8003a86 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003a78:	6801      	ldr	r1, [r0, #0]
 8003a7a:	4c28      	ldr	r4, [pc, #160]	; (8003b1c <UART_AdvFeatureConfig+0xac>)
 8003a7c:	684a      	ldr	r2, [r1, #4]
 8003a7e:	4022      	ands	r2, r4
 8003a80:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003a82:	4322      	orrs	r2, r4
 8003a84:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003a86:	079a      	lsls	r2, r3, #30
 8003a88:	d506      	bpl.n	8003a98 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003a8a:	6801      	ldr	r1, [r0, #0]
 8003a8c:	4c24      	ldr	r4, [pc, #144]	; (8003b20 <UART_AdvFeatureConfig+0xb0>)
 8003a8e:	684a      	ldr	r2, [r1, #4]
 8003a90:	4022      	ands	r2, r4
 8003a92:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003a94:	4322      	orrs	r2, r4
 8003a96:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003a98:	075a      	lsls	r2, r3, #29
 8003a9a:	d506      	bpl.n	8003aaa <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003a9c:	6801      	ldr	r1, [r0, #0]
 8003a9e:	4c21      	ldr	r4, [pc, #132]	; (8003b24 <UART_AdvFeatureConfig+0xb4>)
 8003aa0:	684a      	ldr	r2, [r1, #4]
 8003aa2:	4022      	ands	r2, r4
 8003aa4:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003aa6:	4322      	orrs	r2, r4
 8003aa8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003aaa:	071a      	lsls	r2, r3, #28
 8003aac:	d506      	bpl.n	8003abc <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003aae:	6801      	ldr	r1, [r0, #0]
 8003ab0:	4c1d      	ldr	r4, [pc, #116]	; (8003b28 <UART_AdvFeatureConfig+0xb8>)
 8003ab2:	684a      	ldr	r2, [r1, #4]
 8003ab4:	4022      	ands	r2, r4
 8003ab6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003ab8:	4322      	orrs	r2, r4
 8003aba:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003abc:	06da      	lsls	r2, r3, #27
 8003abe:	d506      	bpl.n	8003ace <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003ac0:	6801      	ldr	r1, [r0, #0]
 8003ac2:	4c1a      	ldr	r4, [pc, #104]	; (8003b2c <UART_AdvFeatureConfig+0xbc>)
 8003ac4:	688a      	ldr	r2, [r1, #8]
 8003ac6:	4022      	ands	r2, r4
 8003ac8:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003aca:	4322      	orrs	r2, r4
 8003acc:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003ace:	069a      	lsls	r2, r3, #26
 8003ad0:	d506      	bpl.n	8003ae0 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003ad2:	6801      	ldr	r1, [r0, #0]
 8003ad4:	4c16      	ldr	r4, [pc, #88]	; (8003b30 <UART_AdvFeatureConfig+0xc0>)
 8003ad6:	688a      	ldr	r2, [r1, #8]
 8003ad8:	4022      	ands	r2, r4
 8003ada:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003adc:	4322      	orrs	r2, r4
 8003ade:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003ae0:	065a      	lsls	r2, r3, #25
 8003ae2:	d510      	bpl.n	8003b06 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003ae4:	6801      	ldr	r1, [r0, #0]
 8003ae6:	4d13      	ldr	r5, [pc, #76]	; (8003b34 <UART_AdvFeatureConfig+0xc4>)
 8003ae8:	684a      	ldr	r2, [r1, #4]
 8003aea:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003aec:	402a      	ands	r2, r5
 8003aee:	4322      	orrs	r2, r4
 8003af0:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003af2:	2280      	movs	r2, #128	; 0x80
 8003af4:	0352      	lsls	r2, r2, #13
 8003af6:	4294      	cmp	r4, r2
 8003af8:	d105      	bne.n	8003b06 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003afa:	684a      	ldr	r2, [r1, #4]
 8003afc:	4c0e      	ldr	r4, [pc, #56]	; (8003b38 <UART_AdvFeatureConfig+0xc8>)
 8003afe:	4022      	ands	r2, r4
 8003b00:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003b02:	4322      	orrs	r2, r4
 8003b04:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003b06:	061b      	lsls	r3, r3, #24
 8003b08:	d506      	bpl.n	8003b18 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003b0a:	6802      	ldr	r2, [r0, #0]
 8003b0c:	490b      	ldr	r1, [pc, #44]	; (8003b3c <UART_AdvFeatureConfig+0xcc>)
 8003b0e:	6853      	ldr	r3, [r2, #4]
 8003b10:	400b      	ands	r3, r1
 8003b12:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8003b14:	430b      	orrs	r3, r1
 8003b16:	6053      	str	r3, [r2, #4]
}
 8003b18:	bd30      	pop	{r4, r5, pc}
 8003b1a:	46c0      	nop			; (mov r8, r8)
 8003b1c:	fffdffff 	.word	0xfffdffff
 8003b20:	fffeffff 	.word	0xfffeffff
 8003b24:	fffbffff 	.word	0xfffbffff
 8003b28:	ffff7fff 	.word	0xffff7fff
 8003b2c:	ffffefff 	.word	0xffffefff
 8003b30:	ffffdfff 	.word	0xffffdfff
 8003b34:	ffefffff 	.word	0xffefffff
 8003b38:	ff9fffff 	.word	0xff9fffff
 8003b3c:	fff7ffff 	.word	0xfff7ffff

08003b40 <UART_WaitOnFlagUntilTimeout>:
{
 8003b40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003b42:	0004      	movs	r4, r0
 8003b44:	000d      	movs	r5, r1
 8003b46:	0017      	movs	r7, r2
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8003b48:	2608      	movs	r6, #8
{
 8003b4a:	9300      	str	r3, [sp, #0]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003b4c:	6822      	ldr	r2, [r4, #0]
 8003b4e:	69d3      	ldr	r3, [r2, #28]
 8003b50:	402b      	ands	r3, r5
 8003b52:	1b5b      	subs	r3, r3, r5
 8003b54:	4259      	negs	r1, r3
 8003b56:	414b      	adcs	r3, r1
 8003b58:	42bb      	cmp	r3, r7
 8003b5a:	d001      	beq.n	8003b60 <UART_WaitOnFlagUntilTimeout+0x20>
  return HAL_OK;
 8003b5c:	2000      	movs	r0, #0
 8003b5e:	e021      	b.n	8003ba4 <UART_WaitOnFlagUntilTimeout+0x64>
    if (Timeout != HAL_MAX_DELAY)
 8003b60:	9b08      	ldr	r3, [sp, #32]
 8003b62:	3301      	adds	r3, #1
 8003b64:	d0f3      	beq.n	8003b4e <UART_WaitOnFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003b66:	f7fe ffe5 	bl	8002b34 <HAL_GetTick>
 8003b6a:	9b00      	ldr	r3, [sp, #0]
 8003b6c:	1ac0      	subs	r0, r0, r3
 8003b6e:	9b08      	ldr	r3, [sp, #32]
 8003b70:	4298      	cmp	r0, r3
 8003b72:	d828      	bhi.n	8003bc6 <UART_WaitOnFlagUntilTimeout+0x86>
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	d026      	beq.n	8003bc6 <UART_WaitOnFlagUntilTimeout+0x86>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003b78:	2104      	movs	r1, #4
 8003b7a:	6823      	ldr	r3, [r4, #0]
 8003b7c:	681a      	ldr	r2, [r3, #0]
 8003b7e:	420a      	tst	r2, r1
 8003b80:	d0e4      	beq.n	8003b4c <UART_WaitOnFlagUntilTimeout+0xc>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8003b82:	69da      	ldr	r2, [r3, #28]
 8003b84:	0011      	movs	r1, r2
 8003b86:	4031      	ands	r1, r6
 8003b88:	9101      	str	r1, [sp, #4]
 8003b8a:	4232      	tst	r2, r6
 8003b8c:	d00b      	beq.n	8003ba6 <UART_WaitOnFlagUntilTimeout+0x66>
           UART_EndRxTransfer(huart);
 8003b8e:	0020      	movs	r0, r4
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8003b90:	621e      	str	r6, [r3, #32]
           UART_EndRxTransfer(huart);
 8003b92:	f7ff fea5 	bl	80038e0 <UART_EndRxTransfer>
           huart->ErrorCode = HAL_UART_ERROR_ORE;
 8003b96:	0023      	movs	r3, r4
 8003b98:	3308      	adds	r3, #8
 8003b9a:	67de      	str	r6, [r3, #124]	; 0x7c
           __HAL_UNLOCK(huart);
 8003b9c:	2300      	movs	r3, #0
           return HAL_ERROR;
 8003b9e:	2001      	movs	r0, #1
           __HAL_UNLOCK(huart);
 8003ba0:	3478      	adds	r4, #120	; 0x78
 8003ba2:	7023      	strb	r3, [r4, #0]
}
 8003ba4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003ba6:	2280      	movs	r2, #128	; 0x80
 8003ba8:	69d9      	ldr	r1, [r3, #28]
 8003baa:	0112      	lsls	r2, r2, #4
 8003bac:	4211      	tst	r1, r2
 8003bae:	d0cd      	beq.n	8003b4c <UART_WaitOnFlagUntilTimeout+0xc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003bb0:	621a      	str	r2, [r3, #32]
          UART_EndRxTransfer(huart);
 8003bb2:	0020      	movs	r0, r4
 8003bb4:	f7ff fe94 	bl	80038e0 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003bb8:	0023      	movs	r3, r4
 8003bba:	2220      	movs	r2, #32
 8003bbc:	3308      	adds	r3, #8
 8003bbe:	67da      	str	r2, [r3, #124]	; 0x7c
          __HAL_UNLOCK(huart);
 8003bc0:	9b01      	ldr	r3, [sp, #4]
 8003bc2:	3478      	adds	r4, #120	; 0x78
 8003bc4:	7023      	strb	r3, [r4, #0]
        return HAL_TIMEOUT;
 8003bc6:	2003      	movs	r0, #3
 8003bc8:	e7ec      	b.n	8003ba4 <UART_WaitOnFlagUntilTimeout+0x64>

08003bca <HAL_UART_Transmit>:
{
 8003bca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003bcc:	b085      	sub	sp, #20
 8003bce:	9303      	str	r3, [sp, #12]
  if (huart->gState == HAL_UART_STATE_READY)
 8003bd0:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
{
 8003bd2:	0004      	movs	r4, r0
 8003bd4:	000d      	movs	r5, r1
 8003bd6:	0016      	movs	r6, r2
    return HAL_BUSY;
 8003bd8:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 8003bda:	2b20      	cmp	r3, #32
 8003bdc:	d139      	bne.n	8003c52 <HAL_UART_Transmit+0x88>
      return  HAL_ERROR;
 8003bde:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 8003be0:	2900      	cmp	r1, #0
 8003be2:	d036      	beq.n	8003c52 <HAL_UART_Transmit+0x88>
 8003be4:	2a00      	cmp	r2, #0
 8003be6:	d034      	beq.n	8003c52 <HAL_UART_Transmit+0x88>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003be8:	2380      	movs	r3, #128	; 0x80
 8003bea:	68a2      	ldr	r2, [r4, #8]
 8003bec:	015b      	lsls	r3, r3, #5
 8003bee:	429a      	cmp	r2, r3
 8003bf0:	d104      	bne.n	8003bfc <HAL_UART_Transmit+0x32>
 8003bf2:	6923      	ldr	r3, [r4, #16]
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d101      	bne.n	8003bfc <HAL_UART_Transmit+0x32>
      if ((((uint32_t)pData) & 1U) != 0U)
 8003bf8:	4201      	tst	r1, r0
 8003bfa:	d12a      	bne.n	8003c52 <HAL_UART_Transmit+0x88>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003bfc:	0023      	movs	r3, r4
 8003bfe:	2200      	movs	r2, #0
 8003c00:	3308      	adds	r3, #8
 8003c02:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003c04:	2321      	movs	r3, #33	; 0x21
 8003c06:	67e3      	str	r3, [r4, #124]	; 0x7c
    tickstart = HAL_GetTick();
 8003c08:	f7fe ff94 	bl	8002b34 <HAL_GetTick>
    huart->TxXferSize  = Size;
 8003c0c:	0023      	movs	r3, r4
 8003c0e:	3350      	adds	r3, #80	; 0x50
 8003c10:	801e      	strh	r6, [r3, #0]
    huart->TxXferCount = Size;
 8003c12:	3302      	adds	r3, #2
 8003c14:	801e      	strh	r6, [r3, #0]
 8003c16:	9302      	str	r3, [sp, #8]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003c18:	2380      	movs	r3, #128	; 0x80
 8003c1a:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8003c1c:	0007      	movs	r7, r0
      pdata16bits = NULL;
 8003c1e:	2600      	movs	r6, #0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003c20:	015b      	lsls	r3, r3, #5
 8003c22:	429a      	cmp	r2, r3
 8003c24:	d104      	bne.n	8003c30 <HAL_UART_Transmit+0x66>
 8003c26:	6923      	ldr	r3, [r4, #16]
 8003c28:	42b3      	cmp	r3, r6
 8003c2a:	d101      	bne.n	8003c30 <HAL_UART_Transmit+0x66>
 8003c2c:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 8003c2e:	001d      	movs	r5, r3
    while (huart->TxXferCount > 0U)
 8003c30:	0023      	movs	r3, r4
 8003c32:	3352      	adds	r3, #82	; 0x52
 8003c34:	881b      	ldrh	r3, [r3, #0]
 8003c36:	b29a      	uxth	r2, r3
 8003c38:	2b00      	cmp	r3, #0
 8003c3a:	d10c      	bne.n	8003c56 <HAL_UART_Transmit+0x8c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003c3c:	9b03      	ldr	r3, [sp, #12]
 8003c3e:	2140      	movs	r1, #64	; 0x40
 8003c40:	9300      	str	r3, [sp, #0]
 8003c42:	0020      	movs	r0, r4
 8003c44:	003b      	movs	r3, r7
 8003c46:	f7ff ff7b 	bl	8003b40 <UART_WaitOnFlagUntilTimeout>
 8003c4a:	2320      	movs	r3, #32
      huart->gState = HAL_UART_STATE_READY;
 8003c4c:	67e3      	str	r3, [r4, #124]	; 0x7c
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003c4e:	2800      	cmp	r0, #0
 8003c50:	d10d      	bne.n	8003c6e <HAL_UART_Transmit+0xa4>
}
 8003c52:	b005      	add	sp, #20
 8003c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003c56:	9b03      	ldr	r3, [sp, #12]
 8003c58:	2200      	movs	r2, #0
 8003c5a:	9300      	str	r3, [sp, #0]
 8003c5c:	2180      	movs	r1, #128	; 0x80
 8003c5e:	003b      	movs	r3, r7
 8003c60:	0020      	movs	r0, r4
 8003c62:	f7ff ff6d 	bl	8003b40 <UART_WaitOnFlagUntilTimeout>
 8003c66:	2800      	cmp	r0, #0
 8003c68:	d003      	beq.n	8003c72 <HAL_UART_Transmit+0xa8>
        huart->gState = HAL_UART_STATE_READY;
 8003c6a:	2320      	movs	r3, #32
 8003c6c:	67e3      	str	r3, [r4, #124]	; 0x7c
      return HAL_TIMEOUT;
 8003c6e:	2003      	movs	r0, #3
 8003c70:	e7ef      	b.n	8003c52 <HAL_UART_Transmit+0x88>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003c72:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8003c74:	2d00      	cmp	r5, #0
 8003c76:	d10b      	bne.n	8003c90 <HAL_UART_Transmit+0xc6>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003c78:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 8003c7a:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003c7c:	05db      	lsls	r3, r3, #23
 8003c7e:	0ddb      	lsrs	r3, r3, #23
 8003c80:	8513      	strh	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 8003c82:	9b02      	ldr	r3, [sp, #8]
 8003c84:	9a02      	ldr	r2, [sp, #8]
 8003c86:	881b      	ldrh	r3, [r3, #0]
 8003c88:	3b01      	subs	r3, #1
 8003c8a:	b29b      	uxth	r3, r3
 8003c8c:	8013      	strh	r3, [r2, #0]
 8003c8e:	e7cf      	b.n	8003c30 <HAL_UART_Transmit+0x66>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003c90:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 8003c92:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003c94:	8513      	strh	r3, [r2, #40]	; 0x28
        pdata8bits++;
 8003c96:	e7f4      	b.n	8003c82 <HAL_UART_Transmit+0xb8>

08003c98 <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003c98:	0003      	movs	r3, r0
{
 8003c9a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003c9c:	2500      	movs	r5, #0
{
 8003c9e:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ca0:	3308      	adds	r3, #8
 8003ca2:	67dd      	str	r5, [r3, #124]	; 0x7c
  tickstart = HAL_GetTick();
 8003ca4:	f7fe ff46 	bl	8002b34 <HAL_GetTick>
 8003ca8:	0026      	movs	r6, r4
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003caa:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8003cac:	0007      	movs	r7, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	3678      	adds	r6, #120	; 0x78
 8003cb2:	071b      	lsls	r3, r3, #28
 8003cb4:	d51b      	bpl.n	8003cee <UART_CheckIdleState+0x56>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003cb6:	2180      	movs	r1, #128	; 0x80
 8003cb8:	4b26      	ldr	r3, [pc, #152]	; (8003d54 <UART_CheckIdleState+0xbc>)
 8003cba:	002a      	movs	r2, r5
 8003cbc:	9300      	str	r3, [sp, #0]
 8003cbe:	0389      	lsls	r1, r1, #14
 8003cc0:	0003      	movs	r3, r0
 8003cc2:	0020      	movs	r0, r4
 8003cc4:	f7ff ff3c 	bl	8003b40 <UART_WaitOnFlagUntilTimeout>
 8003cc8:	42a8      	cmp	r0, r5
 8003cca:	d010      	beq.n	8003cee <UART_CheckIdleState+0x56>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003ccc:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003cd0:	2301      	movs	r3, #1
 8003cd2:	f383 8810 	msr	PRIMASK, r3
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 8003cd6:	2080      	movs	r0, #128	; 0x80
 8003cd8:	6822      	ldr	r2, [r4, #0]
 8003cda:	6813      	ldr	r3, [r2, #0]
 8003cdc:	4383      	bics	r3, r0
 8003cde:	6013      	str	r3, [r2, #0]
 8003ce0:	f381 8810 	msr	PRIMASK, r1
      huart->gState = HAL_UART_STATE_READY;
 8003ce4:	2320      	movs	r3, #32
 8003ce6:	67e3      	str	r3, [r4, #124]	; 0x7c
      __HAL_UNLOCK(huart);
 8003ce8:	7035      	strb	r5, [r6, #0]
      return HAL_TIMEOUT;
 8003cea:	2003      	movs	r0, #3
}
 8003cec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8003cee:	0025      	movs	r5, r4
 8003cf0:	cd08      	ldmia	r5!, {r3}
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	075b      	lsls	r3, r3, #29
 8003cf6:	d525      	bpl.n	8003d44 <UART_CheckIdleState+0xac>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003cf8:	2180      	movs	r1, #128	; 0x80
 8003cfa:	4b16      	ldr	r3, [pc, #88]	; (8003d54 <UART_CheckIdleState+0xbc>)
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	9300      	str	r3, [sp, #0]
 8003d00:	0020      	movs	r0, r4
 8003d02:	003b      	movs	r3, r7
 8003d04:	03c9      	lsls	r1, r1, #15
 8003d06:	f7ff ff1b 	bl	8003b40 <UART_WaitOnFlagUntilTimeout>
 8003d0a:	2800      	cmp	r0, #0
 8003d0c:	d01a      	beq.n	8003d44 <UART_CheckIdleState+0xac>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003d0e:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003d12:	2201      	movs	r2, #1
 8003d14:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003d18:	6821      	ldr	r1, [r4, #0]
 8003d1a:	4f0f      	ldr	r7, [pc, #60]	; (8003d58 <UART_CheckIdleState+0xc0>)
 8003d1c:	680b      	ldr	r3, [r1, #0]
 8003d1e:	403b      	ands	r3, r7
 8003d20:	600b      	str	r3, [r1, #0]
 8003d22:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003d26:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003d2a:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003d2e:	6821      	ldr	r1, [r4, #0]
 8003d30:	688b      	ldr	r3, [r1, #8]
 8003d32:	4393      	bics	r3, r2
 8003d34:	608b      	str	r3, [r1, #8]
 8003d36:	f380 8810 	msr	PRIMASK, r0
      huart->RxState = HAL_UART_STATE_READY;
 8003d3a:	2320      	movs	r3, #32
 8003d3c:	67eb      	str	r3, [r5, #124]	; 0x7c
      __HAL_UNLOCK(huart);
 8003d3e:	2300      	movs	r3, #0
 8003d40:	7033      	strb	r3, [r6, #0]
 8003d42:	e7d2      	b.n	8003cea <UART_CheckIdleState+0x52>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003d44:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8003d46:	2320      	movs	r3, #32
 8003d48:	67e3      	str	r3, [r4, #124]	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8003d4a:	67eb      	str	r3, [r5, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003d4c:	6620      	str	r0, [r4, #96]	; 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8003d4e:	6660      	str	r0, [r4, #100]	; 0x64
  __HAL_UNLOCK(huart);
 8003d50:	7030      	strb	r0, [r6, #0]
  return HAL_OK;
 8003d52:	e7cb      	b.n	8003cec <UART_CheckIdleState+0x54>
 8003d54:	01ffffff 	.word	0x01ffffff
 8003d58:	fffffedf 	.word	0xfffffedf

08003d5c <HAL_UART_Init>:
{
 8003d5c:	b510      	push	{r4, lr}
 8003d5e:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 8003d60:	d101      	bne.n	8003d66 <HAL_UART_Init+0xa>
    return HAL_ERROR;
 8003d62:	2001      	movs	r0, #1
}
 8003d64:	bd10      	pop	{r4, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 8003d66:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d104      	bne.n	8003d76 <HAL_UART_Init+0x1a>
    huart->Lock = HAL_UNLOCKED;
 8003d6c:	0002      	movs	r2, r0
 8003d6e:	3278      	adds	r2, #120	; 0x78
 8003d70:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 8003d72:	f7fe fe29 	bl	80029c8 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 8003d76:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 8003d78:	2101      	movs	r1, #1
 8003d7a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8003d7c:	67e3      	str	r3, [r4, #124]	; 0x7c
  __HAL_UART_DISABLE(huart);
 8003d7e:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003d80:	0020      	movs	r0, r4
  __HAL_UART_DISABLE(huart);
 8003d82:	438b      	bics	r3, r1
 8003d84:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003d86:	f7ff fdd9 	bl	800393c <UART_SetConfig>
 8003d8a:	2801      	cmp	r0, #1
 8003d8c:	d0e9      	beq.n	8003d62 <HAL_UART_Init+0x6>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003d8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d002      	beq.n	8003d9a <HAL_UART_Init+0x3e>
    UART_AdvFeatureConfig(huart);
 8003d94:	0020      	movs	r0, r4
 8003d96:	f7ff fe6b 	bl	8003a70 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 8003d9a:	6823      	ldr	r3, [r4, #0]
 8003d9c:	4907      	ldr	r1, [pc, #28]	; (8003dbc <HAL_UART_Init+0x60>)
 8003d9e:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 8003da0:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 8003da2:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 8003da4:	2108      	movs	r1, #8
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 8003da6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 8003da8:	689a      	ldr	r2, [r3, #8]
 8003daa:	438a      	bics	r2, r1
 8003dac:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8003dae:	2201      	movs	r2, #1
 8003db0:	6819      	ldr	r1, [r3, #0]
 8003db2:	430a      	orrs	r2, r1
 8003db4:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8003db6:	f7ff ff6f 	bl	8003c98 <UART_CheckIdleState>
 8003dba:	e7d3      	b.n	8003d64 <HAL_UART_Init+0x8>
 8003dbc:	fffff7ff 	.word	0xfffff7ff

08003dc0 <__errno>:
 8003dc0:	4b01      	ldr	r3, [pc, #4]	; (8003dc8 <__errno+0x8>)
 8003dc2:	6818      	ldr	r0, [r3, #0]
 8003dc4:	4770      	bx	lr
 8003dc6:	46c0      	nop			; (mov r8, r8)
 8003dc8:	2000004c 	.word	0x2000004c

08003dcc <__libc_init_array>:
 8003dcc:	b570      	push	{r4, r5, r6, lr}
 8003dce:	2600      	movs	r6, #0
 8003dd0:	4d0c      	ldr	r5, [pc, #48]	; (8003e04 <__libc_init_array+0x38>)
 8003dd2:	4c0d      	ldr	r4, [pc, #52]	; (8003e08 <__libc_init_array+0x3c>)
 8003dd4:	1b64      	subs	r4, r4, r5
 8003dd6:	10a4      	asrs	r4, r4, #2
 8003dd8:	42a6      	cmp	r6, r4
 8003dda:	d109      	bne.n	8003df0 <__libc_init_array+0x24>
 8003ddc:	2600      	movs	r6, #0
 8003dde:	f002 ffd3 	bl	8006d88 <_init>
 8003de2:	4d0a      	ldr	r5, [pc, #40]	; (8003e0c <__libc_init_array+0x40>)
 8003de4:	4c0a      	ldr	r4, [pc, #40]	; (8003e10 <__libc_init_array+0x44>)
 8003de6:	1b64      	subs	r4, r4, r5
 8003de8:	10a4      	asrs	r4, r4, #2
 8003dea:	42a6      	cmp	r6, r4
 8003dec:	d105      	bne.n	8003dfa <__libc_init_array+0x2e>
 8003dee:	bd70      	pop	{r4, r5, r6, pc}
 8003df0:	00b3      	lsls	r3, r6, #2
 8003df2:	58eb      	ldr	r3, [r5, r3]
 8003df4:	4798      	blx	r3
 8003df6:	3601      	adds	r6, #1
 8003df8:	e7ee      	b.n	8003dd8 <__libc_init_array+0xc>
 8003dfa:	00b3      	lsls	r3, r6, #2
 8003dfc:	58eb      	ldr	r3, [r5, r3]
 8003dfe:	4798      	blx	r3
 8003e00:	3601      	adds	r6, #1
 8003e02:	e7f2      	b.n	8003dea <__libc_init_array+0x1e>
 8003e04:	08007284 	.word	0x08007284
 8003e08:	08007284 	.word	0x08007284
 8003e0c:	08007284 	.word	0x08007284
 8003e10:	08007288 	.word	0x08007288

08003e14 <memset>:
 8003e14:	0003      	movs	r3, r0
 8003e16:	1882      	adds	r2, r0, r2
 8003e18:	4293      	cmp	r3, r2
 8003e1a:	d100      	bne.n	8003e1e <memset+0xa>
 8003e1c:	4770      	bx	lr
 8003e1e:	7019      	strb	r1, [r3, #0]
 8003e20:	3301      	adds	r3, #1
 8003e22:	e7f9      	b.n	8003e18 <memset+0x4>

08003e24 <__cvt>:
 8003e24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003e26:	001e      	movs	r6, r3
 8003e28:	2300      	movs	r3, #0
 8003e2a:	0014      	movs	r4, r2
 8003e2c:	b08b      	sub	sp, #44	; 0x2c
 8003e2e:	429e      	cmp	r6, r3
 8003e30:	da04      	bge.n	8003e3c <__cvt+0x18>
 8003e32:	2180      	movs	r1, #128	; 0x80
 8003e34:	0609      	lsls	r1, r1, #24
 8003e36:	1873      	adds	r3, r6, r1
 8003e38:	001e      	movs	r6, r3
 8003e3a:	232d      	movs	r3, #45	; 0x2d
 8003e3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003e3e:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8003e40:	7013      	strb	r3, [r2, #0]
 8003e42:	2320      	movs	r3, #32
 8003e44:	2203      	movs	r2, #3
 8003e46:	439f      	bics	r7, r3
 8003e48:	2f46      	cmp	r7, #70	; 0x46
 8003e4a:	d007      	beq.n	8003e5c <__cvt+0x38>
 8003e4c:	003b      	movs	r3, r7
 8003e4e:	3b45      	subs	r3, #69	; 0x45
 8003e50:	4259      	negs	r1, r3
 8003e52:	414b      	adcs	r3, r1
 8003e54:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003e56:	3a01      	subs	r2, #1
 8003e58:	18cb      	adds	r3, r1, r3
 8003e5a:	9310      	str	r3, [sp, #64]	; 0x40
 8003e5c:	ab09      	add	r3, sp, #36	; 0x24
 8003e5e:	9304      	str	r3, [sp, #16]
 8003e60:	ab08      	add	r3, sp, #32
 8003e62:	9303      	str	r3, [sp, #12]
 8003e64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003e66:	9200      	str	r2, [sp, #0]
 8003e68:	9302      	str	r3, [sp, #8]
 8003e6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003e6c:	0022      	movs	r2, r4
 8003e6e:	9301      	str	r3, [sp, #4]
 8003e70:	0033      	movs	r3, r6
 8003e72:	f000 fd09 	bl	8004888 <_dtoa_r>
 8003e76:	0005      	movs	r5, r0
 8003e78:	2f47      	cmp	r7, #71	; 0x47
 8003e7a:	d102      	bne.n	8003e82 <__cvt+0x5e>
 8003e7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003e7e:	07db      	lsls	r3, r3, #31
 8003e80:	d528      	bpl.n	8003ed4 <__cvt+0xb0>
 8003e82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003e84:	18eb      	adds	r3, r5, r3
 8003e86:	9307      	str	r3, [sp, #28]
 8003e88:	2f46      	cmp	r7, #70	; 0x46
 8003e8a:	d114      	bne.n	8003eb6 <__cvt+0x92>
 8003e8c:	782b      	ldrb	r3, [r5, #0]
 8003e8e:	2b30      	cmp	r3, #48	; 0x30
 8003e90:	d10c      	bne.n	8003eac <__cvt+0x88>
 8003e92:	2200      	movs	r2, #0
 8003e94:	2300      	movs	r3, #0
 8003e96:	0020      	movs	r0, r4
 8003e98:	0031      	movs	r1, r6
 8003e9a:	f7fc fad7 	bl	800044c <__aeabi_dcmpeq>
 8003e9e:	2800      	cmp	r0, #0
 8003ea0:	d104      	bne.n	8003eac <__cvt+0x88>
 8003ea2:	2301      	movs	r3, #1
 8003ea4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003ea6:	1a9b      	subs	r3, r3, r2
 8003ea8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003eaa:	6013      	str	r3, [r2, #0]
 8003eac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003eae:	9a07      	ldr	r2, [sp, #28]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	18d3      	adds	r3, r2, r3
 8003eb4:	9307      	str	r3, [sp, #28]
 8003eb6:	2200      	movs	r2, #0
 8003eb8:	2300      	movs	r3, #0
 8003eba:	0020      	movs	r0, r4
 8003ebc:	0031      	movs	r1, r6
 8003ebe:	f7fc fac5 	bl	800044c <__aeabi_dcmpeq>
 8003ec2:	2800      	cmp	r0, #0
 8003ec4:	d001      	beq.n	8003eca <__cvt+0xa6>
 8003ec6:	9b07      	ldr	r3, [sp, #28]
 8003ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8003eca:	2230      	movs	r2, #48	; 0x30
 8003ecc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ece:	9907      	ldr	r1, [sp, #28]
 8003ed0:	428b      	cmp	r3, r1
 8003ed2:	d306      	bcc.n	8003ee2 <__cvt+0xbe>
 8003ed4:	0028      	movs	r0, r5
 8003ed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ed8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003eda:	1b5b      	subs	r3, r3, r5
 8003edc:	6013      	str	r3, [r2, #0]
 8003ede:	b00b      	add	sp, #44	; 0x2c
 8003ee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003ee2:	1c59      	adds	r1, r3, #1
 8003ee4:	9109      	str	r1, [sp, #36]	; 0x24
 8003ee6:	701a      	strb	r2, [r3, #0]
 8003ee8:	e7f0      	b.n	8003ecc <__cvt+0xa8>

08003eea <__exponent>:
 8003eea:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003eec:	1c83      	adds	r3, r0, #2
 8003eee:	b087      	sub	sp, #28
 8003ef0:	9303      	str	r3, [sp, #12]
 8003ef2:	0005      	movs	r5, r0
 8003ef4:	000c      	movs	r4, r1
 8003ef6:	232b      	movs	r3, #43	; 0x2b
 8003ef8:	7002      	strb	r2, [r0, #0]
 8003efa:	2900      	cmp	r1, #0
 8003efc:	da01      	bge.n	8003f02 <__exponent+0x18>
 8003efe:	424c      	negs	r4, r1
 8003f00:	3302      	adds	r3, #2
 8003f02:	706b      	strb	r3, [r5, #1]
 8003f04:	2c09      	cmp	r4, #9
 8003f06:	dd31      	ble.n	8003f6c <__exponent+0x82>
 8003f08:	270a      	movs	r7, #10
 8003f0a:	ab04      	add	r3, sp, #16
 8003f0c:	1dde      	adds	r6, r3, #7
 8003f0e:	0020      	movs	r0, r4
 8003f10:	0039      	movs	r1, r7
 8003f12:	9601      	str	r6, [sp, #4]
 8003f14:	f7fc fa84 	bl	8000420 <__aeabi_idivmod>
 8003f18:	3e01      	subs	r6, #1
 8003f1a:	3130      	adds	r1, #48	; 0x30
 8003f1c:	0020      	movs	r0, r4
 8003f1e:	7031      	strb	r1, [r6, #0]
 8003f20:	0039      	movs	r1, r7
 8003f22:	9402      	str	r4, [sp, #8]
 8003f24:	f7fc f996 	bl	8000254 <__divsi3>
 8003f28:	9b02      	ldr	r3, [sp, #8]
 8003f2a:	0004      	movs	r4, r0
 8003f2c:	2b63      	cmp	r3, #99	; 0x63
 8003f2e:	dcee      	bgt.n	8003f0e <__exponent+0x24>
 8003f30:	9b01      	ldr	r3, [sp, #4]
 8003f32:	3430      	adds	r4, #48	; 0x30
 8003f34:	1e9a      	subs	r2, r3, #2
 8003f36:	0013      	movs	r3, r2
 8003f38:	9903      	ldr	r1, [sp, #12]
 8003f3a:	7014      	strb	r4, [r2, #0]
 8003f3c:	a804      	add	r0, sp, #16
 8003f3e:	3007      	adds	r0, #7
 8003f40:	4298      	cmp	r0, r3
 8003f42:	d80e      	bhi.n	8003f62 <__exponent+0x78>
 8003f44:	ab04      	add	r3, sp, #16
 8003f46:	3307      	adds	r3, #7
 8003f48:	2000      	movs	r0, #0
 8003f4a:	429a      	cmp	r2, r3
 8003f4c:	d804      	bhi.n	8003f58 <__exponent+0x6e>
 8003f4e:	ab04      	add	r3, sp, #16
 8003f50:	3009      	adds	r0, #9
 8003f52:	18c0      	adds	r0, r0, r3
 8003f54:	9b01      	ldr	r3, [sp, #4]
 8003f56:	1ac0      	subs	r0, r0, r3
 8003f58:	9b03      	ldr	r3, [sp, #12]
 8003f5a:	1818      	adds	r0, r3, r0
 8003f5c:	1b40      	subs	r0, r0, r5
 8003f5e:	b007      	add	sp, #28
 8003f60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f62:	7818      	ldrb	r0, [r3, #0]
 8003f64:	3301      	adds	r3, #1
 8003f66:	7008      	strb	r0, [r1, #0]
 8003f68:	3101      	adds	r1, #1
 8003f6a:	e7e7      	b.n	8003f3c <__exponent+0x52>
 8003f6c:	2330      	movs	r3, #48	; 0x30
 8003f6e:	18e4      	adds	r4, r4, r3
 8003f70:	70ab      	strb	r3, [r5, #2]
 8003f72:	1d28      	adds	r0, r5, #4
 8003f74:	70ec      	strb	r4, [r5, #3]
 8003f76:	e7f1      	b.n	8003f5c <__exponent+0x72>

08003f78 <_printf_float>:
 8003f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f7a:	b095      	sub	sp, #84	; 0x54
 8003f7c:	000c      	movs	r4, r1
 8003f7e:	9209      	str	r2, [sp, #36]	; 0x24
 8003f80:	001e      	movs	r6, r3
 8003f82:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8003f84:	0007      	movs	r7, r0
 8003f86:	f001 fa99 	bl	80054bc <_localeconv_r>
 8003f8a:	6803      	ldr	r3, [r0, #0]
 8003f8c:	0018      	movs	r0, r3
 8003f8e:	930c      	str	r3, [sp, #48]	; 0x30
 8003f90:	f7fc f8ba 	bl	8000108 <strlen>
 8003f94:	2300      	movs	r3, #0
 8003f96:	9312      	str	r3, [sp, #72]	; 0x48
 8003f98:	7e23      	ldrb	r3, [r4, #24]
 8003f9a:	2207      	movs	r2, #7
 8003f9c:	930a      	str	r3, [sp, #40]	; 0x28
 8003f9e:	6823      	ldr	r3, [r4, #0]
 8003fa0:	900e      	str	r0, [sp, #56]	; 0x38
 8003fa2:	930d      	str	r3, [sp, #52]	; 0x34
 8003fa4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003fa6:	682b      	ldr	r3, [r5, #0]
 8003fa8:	05c9      	lsls	r1, r1, #23
 8003faa:	d547      	bpl.n	800403c <_printf_float+0xc4>
 8003fac:	189b      	adds	r3, r3, r2
 8003fae:	4393      	bics	r3, r2
 8003fb0:	001a      	movs	r2, r3
 8003fb2:	3208      	adds	r2, #8
 8003fb4:	602a      	str	r2, [r5, #0]
 8003fb6:	681a      	ldr	r2, [r3, #0]
 8003fb8:	685b      	ldr	r3, [r3, #4]
 8003fba:	64a2      	str	r2, [r4, #72]	; 0x48
 8003fbc:	64e3      	str	r3, [r4, #76]	; 0x4c
 8003fbe:	2201      	movs	r2, #1
 8003fc0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8003fc2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8003fc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8003fc6:	006b      	lsls	r3, r5, #1
 8003fc8:	085b      	lsrs	r3, r3, #1
 8003fca:	930f      	str	r3, [sp, #60]	; 0x3c
 8003fcc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003fce:	4ba7      	ldr	r3, [pc, #668]	; (800426c <_printf_float+0x2f4>)
 8003fd0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003fd2:	4252      	negs	r2, r2
 8003fd4:	f7fd ffa4 	bl	8001f20 <__aeabi_dcmpun>
 8003fd8:	2800      	cmp	r0, #0
 8003fda:	d131      	bne.n	8004040 <_printf_float+0xc8>
 8003fdc:	2201      	movs	r2, #1
 8003fde:	4ba3      	ldr	r3, [pc, #652]	; (800426c <_printf_float+0x2f4>)
 8003fe0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003fe2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003fe4:	4252      	negs	r2, r2
 8003fe6:	f7fc fa41 	bl	800046c <__aeabi_dcmple>
 8003fea:	2800      	cmp	r0, #0
 8003fec:	d128      	bne.n	8004040 <_printf_float+0xc8>
 8003fee:	2200      	movs	r2, #0
 8003ff0:	2300      	movs	r3, #0
 8003ff2:	0029      	movs	r1, r5
 8003ff4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ff6:	f7fc fa2f 	bl	8000458 <__aeabi_dcmplt>
 8003ffa:	2800      	cmp	r0, #0
 8003ffc:	d003      	beq.n	8004006 <_printf_float+0x8e>
 8003ffe:	0023      	movs	r3, r4
 8004000:	222d      	movs	r2, #45	; 0x2d
 8004002:	3343      	adds	r3, #67	; 0x43
 8004004:	701a      	strb	r2, [r3, #0]
 8004006:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004008:	4d99      	ldr	r5, [pc, #612]	; (8004270 <_printf_float+0x2f8>)
 800400a:	2b47      	cmp	r3, #71	; 0x47
 800400c:	d900      	bls.n	8004010 <_printf_float+0x98>
 800400e:	4d99      	ldr	r5, [pc, #612]	; (8004274 <_printf_float+0x2fc>)
 8004010:	2303      	movs	r3, #3
 8004012:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004014:	6123      	str	r3, [r4, #16]
 8004016:	3301      	adds	r3, #1
 8004018:	439a      	bics	r2, r3
 800401a:	2300      	movs	r3, #0
 800401c:	6022      	str	r2, [r4, #0]
 800401e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004020:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004022:	0021      	movs	r1, r4
 8004024:	0038      	movs	r0, r7
 8004026:	9600      	str	r6, [sp, #0]
 8004028:	aa13      	add	r2, sp, #76	; 0x4c
 800402a:	f000 f9e7 	bl	80043fc <_printf_common>
 800402e:	1c43      	adds	r3, r0, #1
 8004030:	d000      	beq.n	8004034 <_printf_float+0xbc>
 8004032:	e0a2      	b.n	800417a <_printf_float+0x202>
 8004034:	2001      	movs	r0, #1
 8004036:	4240      	negs	r0, r0
 8004038:	b015      	add	sp, #84	; 0x54
 800403a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800403c:	3307      	adds	r3, #7
 800403e:	e7b6      	b.n	8003fae <_printf_float+0x36>
 8004040:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004042:	002b      	movs	r3, r5
 8004044:	0010      	movs	r0, r2
 8004046:	0029      	movs	r1, r5
 8004048:	f7fd ff6a 	bl	8001f20 <__aeabi_dcmpun>
 800404c:	2800      	cmp	r0, #0
 800404e:	d00b      	beq.n	8004068 <_printf_float+0xf0>
 8004050:	2d00      	cmp	r5, #0
 8004052:	da03      	bge.n	800405c <_printf_float+0xe4>
 8004054:	0023      	movs	r3, r4
 8004056:	222d      	movs	r2, #45	; 0x2d
 8004058:	3343      	adds	r3, #67	; 0x43
 800405a:	701a      	strb	r2, [r3, #0]
 800405c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800405e:	4d86      	ldr	r5, [pc, #536]	; (8004278 <_printf_float+0x300>)
 8004060:	2b47      	cmp	r3, #71	; 0x47
 8004062:	d9d5      	bls.n	8004010 <_printf_float+0x98>
 8004064:	4d85      	ldr	r5, [pc, #532]	; (800427c <_printf_float+0x304>)
 8004066:	e7d3      	b.n	8004010 <_printf_float+0x98>
 8004068:	2220      	movs	r2, #32
 800406a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800406c:	6863      	ldr	r3, [r4, #4]
 800406e:	4391      	bics	r1, r2
 8004070:	910f      	str	r1, [sp, #60]	; 0x3c
 8004072:	1c5a      	adds	r2, r3, #1
 8004074:	d149      	bne.n	800410a <_printf_float+0x192>
 8004076:	3307      	adds	r3, #7
 8004078:	6063      	str	r3, [r4, #4]
 800407a:	2380      	movs	r3, #128	; 0x80
 800407c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800407e:	00db      	lsls	r3, r3, #3
 8004080:	4313      	orrs	r3, r2
 8004082:	2200      	movs	r2, #0
 8004084:	9206      	str	r2, [sp, #24]
 8004086:	aa12      	add	r2, sp, #72	; 0x48
 8004088:	9205      	str	r2, [sp, #20]
 800408a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800408c:	a908      	add	r1, sp, #32
 800408e:	9204      	str	r2, [sp, #16]
 8004090:	aa11      	add	r2, sp, #68	; 0x44
 8004092:	9203      	str	r2, [sp, #12]
 8004094:	2223      	movs	r2, #35	; 0x23
 8004096:	6023      	str	r3, [r4, #0]
 8004098:	9301      	str	r3, [sp, #4]
 800409a:	6863      	ldr	r3, [r4, #4]
 800409c:	1852      	adds	r2, r2, r1
 800409e:	9202      	str	r2, [sp, #8]
 80040a0:	9300      	str	r3, [sp, #0]
 80040a2:	0038      	movs	r0, r7
 80040a4:	002b      	movs	r3, r5
 80040a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80040a8:	f7ff febc 	bl	8003e24 <__cvt>
 80040ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80040ae:	0005      	movs	r5, r0
 80040b0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80040b2:	2b47      	cmp	r3, #71	; 0x47
 80040b4:	d108      	bne.n	80040c8 <_printf_float+0x150>
 80040b6:	1ccb      	adds	r3, r1, #3
 80040b8:	db02      	blt.n	80040c0 <_printf_float+0x148>
 80040ba:	6863      	ldr	r3, [r4, #4]
 80040bc:	4299      	cmp	r1, r3
 80040be:	dd48      	ble.n	8004152 <_printf_float+0x1da>
 80040c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80040c2:	3b02      	subs	r3, #2
 80040c4:	b2db      	uxtb	r3, r3
 80040c6:	930a      	str	r3, [sp, #40]	; 0x28
 80040c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80040ca:	2b65      	cmp	r3, #101	; 0x65
 80040cc:	d824      	bhi.n	8004118 <_printf_float+0x1a0>
 80040ce:	0020      	movs	r0, r4
 80040d0:	001a      	movs	r2, r3
 80040d2:	3901      	subs	r1, #1
 80040d4:	3050      	adds	r0, #80	; 0x50
 80040d6:	9111      	str	r1, [sp, #68]	; 0x44
 80040d8:	f7ff ff07 	bl	8003eea <__exponent>
 80040dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80040de:	900b      	str	r0, [sp, #44]	; 0x2c
 80040e0:	1813      	adds	r3, r2, r0
 80040e2:	6123      	str	r3, [r4, #16]
 80040e4:	2a01      	cmp	r2, #1
 80040e6:	dc02      	bgt.n	80040ee <_printf_float+0x176>
 80040e8:	6822      	ldr	r2, [r4, #0]
 80040ea:	07d2      	lsls	r2, r2, #31
 80040ec:	d501      	bpl.n	80040f2 <_printf_float+0x17a>
 80040ee:	3301      	adds	r3, #1
 80040f0:	6123      	str	r3, [r4, #16]
 80040f2:	2323      	movs	r3, #35	; 0x23
 80040f4:	aa08      	add	r2, sp, #32
 80040f6:	189b      	adds	r3, r3, r2
 80040f8:	781b      	ldrb	r3, [r3, #0]
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d100      	bne.n	8004100 <_printf_float+0x188>
 80040fe:	e78f      	b.n	8004020 <_printf_float+0xa8>
 8004100:	0023      	movs	r3, r4
 8004102:	222d      	movs	r2, #45	; 0x2d
 8004104:	3343      	adds	r3, #67	; 0x43
 8004106:	701a      	strb	r2, [r3, #0]
 8004108:	e78a      	b.n	8004020 <_printf_float+0xa8>
 800410a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800410c:	2a47      	cmp	r2, #71	; 0x47
 800410e:	d1b4      	bne.n	800407a <_printf_float+0x102>
 8004110:	2b00      	cmp	r3, #0
 8004112:	d1b2      	bne.n	800407a <_printf_float+0x102>
 8004114:	3301      	adds	r3, #1
 8004116:	e7af      	b.n	8004078 <_printf_float+0x100>
 8004118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800411a:	2b66      	cmp	r3, #102	; 0x66
 800411c:	d11b      	bne.n	8004156 <_printf_float+0x1de>
 800411e:	6863      	ldr	r3, [r4, #4]
 8004120:	2900      	cmp	r1, #0
 8004122:	dd0d      	ble.n	8004140 <_printf_float+0x1c8>
 8004124:	6121      	str	r1, [r4, #16]
 8004126:	2b00      	cmp	r3, #0
 8004128:	d102      	bne.n	8004130 <_printf_float+0x1b8>
 800412a:	6822      	ldr	r2, [r4, #0]
 800412c:	07d2      	lsls	r2, r2, #31
 800412e:	d502      	bpl.n	8004136 <_printf_float+0x1be>
 8004130:	3301      	adds	r3, #1
 8004132:	1859      	adds	r1, r3, r1
 8004134:	6121      	str	r1, [r4, #16]
 8004136:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004138:	65a3      	str	r3, [r4, #88]	; 0x58
 800413a:	2300      	movs	r3, #0
 800413c:	930b      	str	r3, [sp, #44]	; 0x2c
 800413e:	e7d8      	b.n	80040f2 <_printf_float+0x17a>
 8004140:	2b00      	cmp	r3, #0
 8004142:	d103      	bne.n	800414c <_printf_float+0x1d4>
 8004144:	2201      	movs	r2, #1
 8004146:	6821      	ldr	r1, [r4, #0]
 8004148:	4211      	tst	r1, r2
 800414a:	d000      	beq.n	800414e <_printf_float+0x1d6>
 800414c:	1c9a      	adds	r2, r3, #2
 800414e:	6122      	str	r2, [r4, #16]
 8004150:	e7f1      	b.n	8004136 <_printf_float+0x1be>
 8004152:	2367      	movs	r3, #103	; 0x67
 8004154:	930a      	str	r3, [sp, #40]	; 0x28
 8004156:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004158:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800415a:	4293      	cmp	r3, r2
 800415c:	db06      	blt.n	800416c <_printf_float+0x1f4>
 800415e:	6822      	ldr	r2, [r4, #0]
 8004160:	6123      	str	r3, [r4, #16]
 8004162:	07d2      	lsls	r2, r2, #31
 8004164:	d5e7      	bpl.n	8004136 <_printf_float+0x1be>
 8004166:	3301      	adds	r3, #1
 8004168:	6123      	str	r3, [r4, #16]
 800416a:	e7e4      	b.n	8004136 <_printf_float+0x1be>
 800416c:	2101      	movs	r1, #1
 800416e:	2b00      	cmp	r3, #0
 8004170:	dc01      	bgt.n	8004176 <_printf_float+0x1fe>
 8004172:	1849      	adds	r1, r1, r1
 8004174:	1ac9      	subs	r1, r1, r3
 8004176:	1852      	adds	r2, r2, r1
 8004178:	e7e9      	b.n	800414e <_printf_float+0x1d6>
 800417a:	6822      	ldr	r2, [r4, #0]
 800417c:	0553      	lsls	r3, r2, #21
 800417e:	d407      	bmi.n	8004190 <_printf_float+0x218>
 8004180:	6923      	ldr	r3, [r4, #16]
 8004182:	002a      	movs	r2, r5
 8004184:	0038      	movs	r0, r7
 8004186:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004188:	47b0      	blx	r6
 800418a:	1c43      	adds	r3, r0, #1
 800418c:	d128      	bne.n	80041e0 <_printf_float+0x268>
 800418e:	e751      	b.n	8004034 <_printf_float+0xbc>
 8004190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004192:	2b65      	cmp	r3, #101	; 0x65
 8004194:	d800      	bhi.n	8004198 <_printf_float+0x220>
 8004196:	e0e1      	b.n	800435c <_printf_float+0x3e4>
 8004198:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800419a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800419c:	2200      	movs	r2, #0
 800419e:	2300      	movs	r3, #0
 80041a0:	f7fc f954 	bl	800044c <__aeabi_dcmpeq>
 80041a4:	2800      	cmp	r0, #0
 80041a6:	d031      	beq.n	800420c <_printf_float+0x294>
 80041a8:	2301      	movs	r3, #1
 80041aa:	0038      	movs	r0, r7
 80041ac:	4a34      	ldr	r2, [pc, #208]	; (8004280 <_printf_float+0x308>)
 80041ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 80041b0:	47b0      	blx	r6
 80041b2:	1c43      	adds	r3, r0, #1
 80041b4:	d100      	bne.n	80041b8 <_printf_float+0x240>
 80041b6:	e73d      	b.n	8004034 <_printf_float+0xbc>
 80041b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80041ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80041bc:	4293      	cmp	r3, r2
 80041be:	db02      	blt.n	80041c6 <_printf_float+0x24e>
 80041c0:	6823      	ldr	r3, [r4, #0]
 80041c2:	07db      	lsls	r3, r3, #31
 80041c4:	d50c      	bpl.n	80041e0 <_printf_float+0x268>
 80041c6:	0038      	movs	r0, r7
 80041c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80041ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80041cc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80041ce:	47b0      	blx	r6
 80041d0:	2500      	movs	r5, #0
 80041d2:	1c43      	adds	r3, r0, #1
 80041d4:	d100      	bne.n	80041d8 <_printf_float+0x260>
 80041d6:	e72d      	b.n	8004034 <_printf_float+0xbc>
 80041d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80041da:	3b01      	subs	r3, #1
 80041dc:	42ab      	cmp	r3, r5
 80041de:	dc0a      	bgt.n	80041f6 <_printf_float+0x27e>
 80041e0:	6823      	ldr	r3, [r4, #0]
 80041e2:	079b      	lsls	r3, r3, #30
 80041e4:	d500      	bpl.n	80041e8 <_printf_float+0x270>
 80041e6:	e106      	b.n	80043f6 <_printf_float+0x47e>
 80041e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80041ea:	68e0      	ldr	r0, [r4, #12]
 80041ec:	4298      	cmp	r0, r3
 80041ee:	db00      	blt.n	80041f2 <_printf_float+0x27a>
 80041f0:	e722      	b.n	8004038 <_printf_float+0xc0>
 80041f2:	0018      	movs	r0, r3
 80041f4:	e720      	b.n	8004038 <_printf_float+0xc0>
 80041f6:	0022      	movs	r2, r4
 80041f8:	2301      	movs	r3, #1
 80041fa:	0038      	movs	r0, r7
 80041fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80041fe:	321a      	adds	r2, #26
 8004200:	47b0      	blx	r6
 8004202:	1c43      	adds	r3, r0, #1
 8004204:	d100      	bne.n	8004208 <_printf_float+0x290>
 8004206:	e715      	b.n	8004034 <_printf_float+0xbc>
 8004208:	3501      	adds	r5, #1
 800420a:	e7e5      	b.n	80041d8 <_printf_float+0x260>
 800420c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800420e:	2b00      	cmp	r3, #0
 8004210:	dc38      	bgt.n	8004284 <_printf_float+0x30c>
 8004212:	2301      	movs	r3, #1
 8004214:	0038      	movs	r0, r7
 8004216:	4a1a      	ldr	r2, [pc, #104]	; (8004280 <_printf_float+0x308>)
 8004218:	9909      	ldr	r1, [sp, #36]	; 0x24
 800421a:	47b0      	blx	r6
 800421c:	1c43      	adds	r3, r0, #1
 800421e:	d100      	bne.n	8004222 <_printf_float+0x2aa>
 8004220:	e708      	b.n	8004034 <_printf_float+0xbc>
 8004222:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004224:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004226:	4313      	orrs	r3, r2
 8004228:	d102      	bne.n	8004230 <_printf_float+0x2b8>
 800422a:	6823      	ldr	r3, [r4, #0]
 800422c:	07db      	lsls	r3, r3, #31
 800422e:	d5d7      	bpl.n	80041e0 <_printf_float+0x268>
 8004230:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004232:	0038      	movs	r0, r7
 8004234:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004236:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004238:	47b0      	blx	r6
 800423a:	1c43      	adds	r3, r0, #1
 800423c:	d100      	bne.n	8004240 <_printf_float+0x2c8>
 800423e:	e6f9      	b.n	8004034 <_printf_float+0xbc>
 8004240:	2300      	movs	r3, #0
 8004242:	930a      	str	r3, [sp, #40]	; 0x28
 8004244:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004246:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004248:	425b      	negs	r3, r3
 800424a:	4293      	cmp	r3, r2
 800424c:	dc01      	bgt.n	8004252 <_printf_float+0x2da>
 800424e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004250:	e797      	b.n	8004182 <_printf_float+0x20a>
 8004252:	0022      	movs	r2, r4
 8004254:	2301      	movs	r3, #1
 8004256:	0038      	movs	r0, r7
 8004258:	9909      	ldr	r1, [sp, #36]	; 0x24
 800425a:	321a      	adds	r2, #26
 800425c:	47b0      	blx	r6
 800425e:	1c43      	adds	r3, r0, #1
 8004260:	d100      	bne.n	8004264 <_printf_float+0x2ec>
 8004262:	e6e7      	b.n	8004034 <_printf_float+0xbc>
 8004264:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004266:	3301      	adds	r3, #1
 8004268:	e7eb      	b.n	8004242 <_printf_float+0x2ca>
 800426a:	46c0      	nop			; (mov r8, r8)
 800426c:	7fefffff 	.word	0x7fefffff
 8004270:	08006eb0 	.word	0x08006eb0
 8004274:	08006eb4 	.word	0x08006eb4
 8004278:	08006eb8 	.word	0x08006eb8
 800427c:	08006ebc 	.word	0x08006ebc
 8004280:	08006ec0 	.word	0x08006ec0
 8004284:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004286:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004288:	920a      	str	r2, [sp, #40]	; 0x28
 800428a:	429a      	cmp	r2, r3
 800428c:	dd00      	ble.n	8004290 <_printf_float+0x318>
 800428e:	930a      	str	r3, [sp, #40]	; 0x28
 8004290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004292:	2b00      	cmp	r3, #0
 8004294:	dc3c      	bgt.n	8004310 <_printf_float+0x398>
 8004296:	2300      	movs	r3, #0
 8004298:	930d      	str	r3, [sp, #52]	; 0x34
 800429a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800429c:	43db      	mvns	r3, r3
 800429e:	17db      	asrs	r3, r3, #31
 80042a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80042a2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80042a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80042a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80042a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80042aa:	4013      	ands	r3, r2
 80042ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80042ae:	1ad3      	subs	r3, r2, r3
 80042b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80042b2:	4293      	cmp	r3, r2
 80042b4:	dc34      	bgt.n	8004320 <_printf_float+0x3a8>
 80042b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80042b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80042ba:	4293      	cmp	r3, r2
 80042bc:	db3d      	blt.n	800433a <_printf_float+0x3c2>
 80042be:	6823      	ldr	r3, [r4, #0]
 80042c0:	07db      	lsls	r3, r3, #31
 80042c2:	d43a      	bmi.n	800433a <_printf_float+0x3c2>
 80042c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80042c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80042c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80042ca:	1ad3      	subs	r3, r2, r3
 80042cc:	1a52      	subs	r2, r2, r1
 80042ce:	920a      	str	r2, [sp, #40]	; 0x28
 80042d0:	429a      	cmp	r2, r3
 80042d2:	dd00      	ble.n	80042d6 <_printf_float+0x35e>
 80042d4:	930a      	str	r3, [sp, #40]	; 0x28
 80042d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80042d8:	2b00      	cmp	r3, #0
 80042da:	dc36      	bgt.n	800434a <_printf_float+0x3d2>
 80042dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80042de:	2500      	movs	r5, #0
 80042e0:	43db      	mvns	r3, r3
 80042e2:	17db      	asrs	r3, r3, #31
 80042e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80042e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80042e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80042ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80042ec:	1a9b      	subs	r3, r3, r2
 80042ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80042f0:	400a      	ands	r2, r1
 80042f2:	1a9b      	subs	r3, r3, r2
 80042f4:	42ab      	cmp	r3, r5
 80042f6:	dc00      	bgt.n	80042fa <_printf_float+0x382>
 80042f8:	e772      	b.n	80041e0 <_printf_float+0x268>
 80042fa:	0022      	movs	r2, r4
 80042fc:	2301      	movs	r3, #1
 80042fe:	0038      	movs	r0, r7
 8004300:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004302:	321a      	adds	r2, #26
 8004304:	47b0      	blx	r6
 8004306:	1c43      	adds	r3, r0, #1
 8004308:	d100      	bne.n	800430c <_printf_float+0x394>
 800430a:	e693      	b.n	8004034 <_printf_float+0xbc>
 800430c:	3501      	adds	r5, #1
 800430e:	e7ea      	b.n	80042e6 <_printf_float+0x36e>
 8004310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004312:	002a      	movs	r2, r5
 8004314:	0038      	movs	r0, r7
 8004316:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004318:	47b0      	blx	r6
 800431a:	1c43      	adds	r3, r0, #1
 800431c:	d1bb      	bne.n	8004296 <_printf_float+0x31e>
 800431e:	e689      	b.n	8004034 <_printf_float+0xbc>
 8004320:	0022      	movs	r2, r4
 8004322:	2301      	movs	r3, #1
 8004324:	0038      	movs	r0, r7
 8004326:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004328:	321a      	adds	r2, #26
 800432a:	47b0      	blx	r6
 800432c:	1c43      	adds	r3, r0, #1
 800432e:	d100      	bne.n	8004332 <_printf_float+0x3ba>
 8004330:	e680      	b.n	8004034 <_printf_float+0xbc>
 8004332:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004334:	3301      	adds	r3, #1
 8004336:	930d      	str	r3, [sp, #52]	; 0x34
 8004338:	e7b3      	b.n	80042a2 <_printf_float+0x32a>
 800433a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800433c:	0038      	movs	r0, r7
 800433e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004340:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004342:	47b0      	blx	r6
 8004344:	1c43      	adds	r3, r0, #1
 8004346:	d1bd      	bne.n	80042c4 <_printf_float+0x34c>
 8004348:	e674      	b.n	8004034 <_printf_float+0xbc>
 800434a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800434c:	0038      	movs	r0, r7
 800434e:	18ea      	adds	r2, r5, r3
 8004350:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004354:	47b0      	blx	r6
 8004356:	1c43      	adds	r3, r0, #1
 8004358:	d1c0      	bne.n	80042dc <_printf_float+0x364>
 800435a:	e66b      	b.n	8004034 <_printf_float+0xbc>
 800435c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800435e:	2b01      	cmp	r3, #1
 8004360:	dc02      	bgt.n	8004368 <_printf_float+0x3f0>
 8004362:	2301      	movs	r3, #1
 8004364:	421a      	tst	r2, r3
 8004366:	d034      	beq.n	80043d2 <_printf_float+0x45a>
 8004368:	2301      	movs	r3, #1
 800436a:	002a      	movs	r2, r5
 800436c:	0038      	movs	r0, r7
 800436e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004370:	47b0      	blx	r6
 8004372:	1c43      	adds	r3, r0, #1
 8004374:	d100      	bne.n	8004378 <_printf_float+0x400>
 8004376:	e65d      	b.n	8004034 <_printf_float+0xbc>
 8004378:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800437a:	0038      	movs	r0, r7
 800437c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800437e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004380:	47b0      	blx	r6
 8004382:	1c43      	adds	r3, r0, #1
 8004384:	d100      	bne.n	8004388 <_printf_float+0x410>
 8004386:	e655      	b.n	8004034 <_printf_float+0xbc>
 8004388:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800438a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800438c:	2200      	movs	r2, #0
 800438e:	2300      	movs	r3, #0
 8004390:	f7fc f85c 	bl	800044c <__aeabi_dcmpeq>
 8004394:	2800      	cmp	r0, #0
 8004396:	d11a      	bne.n	80043ce <_printf_float+0x456>
 8004398:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800439a:	1c6a      	adds	r2, r5, #1
 800439c:	3b01      	subs	r3, #1
 800439e:	0038      	movs	r0, r7
 80043a0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80043a2:	47b0      	blx	r6
 80043a4:	1c43      	adds	r3, r0, #1
 80043a6:	d10e      	bne.n	80043c6 <_printf_float+0x44e>
 80043a8:	e644      	b.n	8004034 <_printf_float+0xbc>
 80043aa:	0022      	movs	r2, r4
 80043ac:	2301      	movs	r3, #1
 80043ae:	0038      	movs	r0, r7
 80043b0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80043b2:	321a      	adds	r2, #26
 80043b4:	47b0      	blx	r6
 80043b6:	1c43      	adds	r3, r0, #1
 80043b8:	d100      	bne.n	80043bc <_printf_float+0x444>
 80043ba:	e63b      	b.n	8004034 <_printf_float+0xbc>
 80043bc:	3501      	adds	r5, #1
 80043be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80043c0:	3b01      	subs	r3, #1
 80043c2:	42ab      	cmp	r3, r5
 80043c4:	dcf1      	bgt.n	80043aa <_printf_float+0x432>
 80043c6:	0022      	movs	r2, r4
 80043c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80043ca:	3250      	adds	r2, #80	; 0x50
 80043cc:	e6da      	b.n	8004184 <_printf_float+0x20c>
 80043ce:	2500      	movs	r5, #0
 80043d0:	e7f5      	b.n	80043be <_printf_float+0x446>
 80043d2:	002a      	movs	r2, r5
 80043d4:	e7e3      	b.n	800439e <_printf_float+0x426>
 80043d6:	0022      	movs	r2, r4
 80043d8:	2301      	movs	r3, #1
 80043da:	0038      	movs	r0, r7
 80043dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80043de:	3219      	adds	r2, #25
 80043e0:	47b0      	blx	r6
 80043e2:	1c43      	adds	r3, r0, #1
 80043e4:	d100      	bne.n	80043e8 <_printf_float+0x470>
 80043e6:	e625      	b.n	8004034 <_printf_float+0xbc>
 80043e8:	3501      	adds	r5, #1
 80043ea:	68e3      	ldr	r3, [r4, #12]
 80043ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80043ee:	1a9b      	subs	r3, r3, r2
 80043f0:	42ab      	cmp	r3, r5
 80043f2:	dcf0      	bgt.n	80043d6 <_printf_float+0x45e>
 80043f4:	e6f8      	b.n	80041e8 <_printf_float+0x270>
 80043f6:	2500      	movs	r5, #0
 80043f8:	e7f7      	b.n	80043ea <_printf_float+0x472>
 80043fa:	46c0      	nop			; (mov r8, r8)

080043fc <_printf_common>:
 80043fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80043fe:	0015      	movs	r5, r2
 8004400:	9301      	str	r3, [sp, #4]
 8004402:	688a      	ldr	r2, [r1, #8]
 8004404:	690b      	ldr	r3, [r1, #16]
 8004406:	000c      	movs	r4, r1
 8004408:	9000      	str	r0, [sp, #0]
 800440a:	4293      	cmp	r3, r2
 800440c:	da00      	bge.n	8004410 <_printf_common+0x14>
 800440e:	0013      	movs	r3, r2
 8004410:	0022      	movs	r2, r4
 8004412:	602b      	str	r3, [r5, #0]
 8004414:	3243      	adds	r2, #67	; 0x43
 8004416:	7812      	ldrb	r2, [r2, #0]
 8004418:	2a00      	cmp	r2, #0
 800441a:	d001      	beq.n	8004420 <_printf_common+0x24>
 800441c:	3301      	adds	r3, #1
 800441e:	602b      	str	r3, [r5, #0]
 8004420:	6823      	ldr	r3, [r4, #0]
 8004422:	069b      	lsls	r3, r3, #26
 8004424:	d502      	bpl.n	800442c <_printf_common+0x30>
 8004426:	682b      	ldr	r3, [r5, #0]
 8004428:	3302      	adds	r3, #2
 800442a:	602b      	str	r3, [r5, #0]
 800442c:	6822      	ldr	r2, [r4, #0]
 800442e:	2306      	movs	r3, #6
 8004430:	0017      	movs	r7, r2
 8004432:	401f      	ands	r7, r3
 8004434:	421a      	tst	r2, r3
 8004436:	d027      	beq.n	8004488 <_printf_common+0x8c>
 8004438:	0023      	movs	r3, r4
 800443a:	3343      	adds	r3, #67	; 0x43
 800443c:	781b      	ldrb	r3, [r3, #0]
 800443e:	1e5a      	subs	r2, r3, #1
 8004440:	4193      	sbcs	r3, r2
 8004442:	6822      	ldr	r2, [r4, #0]
 8004444:	0692      	lsls	r2, r2, #26
 8004446:	d430      	bmi.n	80044aa <_printf_common+0xae>
 8004448:	0022      	movs	r2, r4
 800444a:	9901      	ldr	r1, [sp, #4]
 800444c:	9800      	ldr	r0, [sp, #0]
 800444e:	9e08      	ldr	r6, [sp, #32]
 8004450:	3243      	adds	r2, #67	; 0x43
 8004452:	47b0      	blx	r6
 8004454:	1c43      	adds	r3, r0, #1
 8004456:	d025      	beq.n	80044a4 <_printf_common+0xa8>
 8004458:	2306      	movs	r3, #6
 800445a:	6820      	ldr	r0, [r4, #0]
 800445c:	682a      	ldr	r2, [r5, #0]
 800445e:	68e1      	ldr	r1, [r4, #12]
 8004460:	2500      	movs	r5, #0
 8004462:	4003      	ands	r3, r0
 8004464:	2b04      	cmp	r3, #4
 8004466:	d103      	bne.n	8004470 <_printf_common+0x74>
 8004468:	1a8d      	subs	r5, r1, r2
 800446a:	43eb      	mvns	r3, r5
 800446c:	17db      	asrs	r3, r3, #31
 800446e:	401d      	ands	r5, r3
 8004470:	68a3      	ldr	r3, [r4, #8]
 8004472:	6922      	ldr	r2, [r4, #16]
 8004474:	4293      	cmp	r3, r2
 8004476:	dd01      	ble.n	800447c <_printf_common+0x80>
 8004478:	1a9b      	subs	r3, r3, r2
 800447a:	18ed      	adds	r5, r5, r3
 800447c:	2700      	movs	r7, #0
 800447e:	42bd      	cmp	r5, r7
 8004480:	d120      	bne.n	80044c4 <_printf_common+0xc8>
 8004482:	2000      	movs	r0, #0
 8004484:	e010      	b.n	80044a8 <_printf_common+0xac>
 8004486:	3701      	adds	r7, #1
 8004488:	68e3      	ldr	r3, [r4, #12]
 800448a:	682a      	ldr	r2, [r5, #0]
 800448c:	1a9b      	subs	r3, r3, r2
 800448e:	42bb      	cmp	r3, r7
 8004490:	ddd2      	ble.n	8004438 <_printf_common+0x3c>
 8004492:	0022      	movs	r2, r4
 8004494:	2301      	movs	r3, #1
 8004496:	9901      	ldr	r1, [sp, #4]
 8004498:	9800      	ldr	r0, [sp, #0]
 800449a:	9e08      	ldr	r6, [sp, #32]
 800449c:	3219      	adds	r2, #25
 800449e:	47b0      	blx	r6
 80044a0:	1c43      	adds	r3, r0, #1
 80044a2:	d1f0      	bne.n	8004486 <_printf_common+0x8a>
 80044a4:	2001      	movs	r0, #1
 80044a6:	4240      	negs	r0, r0
 80044a8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80044aa:	2030      	movs	r0, #48	; 0x30
 80044ac:	18e1      	adds	r1, r4, r3
 80044ae:	3143      	adds	r1, #67	; 0x43
 80044b0:	7008      	strb	r0, [r1, #0]
 80044b2:	0021      	movs	r1, r4
 80044b4:	1c5a      	adds	r2, r3, #1
 80044b6:	3145      	adds	r1, #69	; 0x45
 80044b8:	7809      	ldrb	r1, [r1, #0]
 80044ba:	18a2      	adds	r2, r4, r2
 80044bc:	3243      	adds	r2, #67	; 0x43
 80044be:	3302      	adds	r3, #2
 80044c0:	7011      	strb	r1, [r2, #0]
 80044c2:	e7c1      	b.n	8004448 <_printf_common+0x4c>
 80044c4:	0022      	movs	r2, r4
 80044c6:	2301      	movs	r3, #1
 80044c8:	9901      	ldr	r1, [sp, #4]
 80044ca:	9800      	ldr	r0, [sp, #0]
 80044cc:	9e08      	ldr	r6, [sp, #32]
 80044ce:	321a      	adds	r2, #26
 80044d0:	47b0      	blx	r6
 80044d2:	1c43      	adds	r3, r0, #1
 80044d4:	d0e6      	beq.n	80044a4 <_printf_common+0xa8>
 80044d6:	3701      	adds	r7, #1
 80044d8:	e7d1      	b.n	800447e <_printf_common+0x82>
	...

080044dc <_printf_i>:
 80044dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044de:	b08b      	sub	sp, #44	; 0x2c
 80044e0:	9206      	str	r2, [sp, #24]
 80044e2:	000a      	movs	r2, r1
 80044e4:	3243      	adds	r2, #67	; 0x43
 80044e6:	9307      	str	r3, [sp, #28]
 80044e8:	9005      	str	r0, [sp, #20]
 80044ea:	9204      	str	r2, [sp, #16]
 80044ec:	7e0a      	ldrb	r2, [r1, #24]
 80044ee:	000c      	movs	r4, r1
 80044f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80044f2:	2a78      	cmp	r2, #120	; 0x78
 80044f4:	d807      	bhi.n	8004506 <_printf_i+0x2a>
 80044f6:	2a62      	cmp	r2, #98	; 0x62
 80044f8:	d809      	bhi.n	800450e <_printf_i+0x32>
 80044fa:	2a00      	cmp	r2, #0
 80044fc:	d100      	bne.n	8004500 <_printf_i+0x24>
 80044fe:	e0c1      	b.n	8004684 <_printf_i+0x1a8>
 8004500:	2a58      	cmp	r2, #88	; 0x58
 8004502:	d100      	bne.n	8004506 <_printf_i+0x2a>
 8004504:	e08c      	b.n	8004620 <_printf_i+0x144>
 8004506:	0026      	movs	r6, r4
 8004508:	3642      	adds	r6, #66	; 0x42
 800450a:	7032      	strb	r2, [r6, #0]
 800450c:	e022      	b.n	8004554 <_printf_i+0x78>
 800450e:	0010      	movs	r0, r2
 8004510:	3863      	subs	r0, #99	; 0x63
 8004512:	2815      	cmp	r0, #21
 8004514:	d8f7      	bhi.n	8004506 <_printf_i+0x2a>
 8004516:	f7fb fe09 	bl	800012c <__gnu_thumb1_case_shi>
 800451a:	0016      	.short	0x0016
 800451c:	fff6001f 	.word	0xfff6001f
 8004520:	fff6fff6 	.word	0xfff6fff6
 8004524:	001ffff6 	.word	0x001ffff6
 8004528:	fff6fff6 	.word	0xfff6fff6
 800452c:	fff6fff6 	.word	0xfff6fff6
 8004530:	003600a8 	.word	0x003600a8
 8004534:	fff6009a 	.word	0xfff6009a
 8004538:	00b9fff6 	.word	0x00b9fff6
 800453c:	0036fff6 	.word	0x0036fff6
 8004540:	fff6fff6 	.word	0xfff6fff6
 8004544:	009e      	.short	0x009e
 8004546:	0026      	movs	r6, r4
 8004548:	681a      	ldr	r2, [r3, #0]
 800454a:	3642      	adds	r6, #66	; 0x42
 800454c:	1d11      	adds	r1, r2, #4
 800454e:	6019      	str	r1, [r3, #0]
 8004550:	6813      	ldr	r3, [r2, #0]
 8004552:	7033      	strb	r3, [r6, #0]
 8004554:	2301      	movs	r3, #1
 8004556:	e0a7      	b.n	80046a8 <_printf_i+0x1cc>
 8004558:	6808      	ldr	r0, [r1, #0]
 800455a:	6819      	ldr	r1, [r3, #0]
 800455c:	1d0a      	adds	r2, r1, #4
 800455e:	0605      	lsls	r5, r0, #24
 8004560:	d50b      	bpl.n	800457a <_printf_i+0x9e>
 8004562:	680d      	ldr	r5, [r1, #0]
 8004564:	601a      	str	r2, [r3, #0]
 8004566:	2d00      	cmp	r5, #0
 8004568:	da03      	bge.n	8004572 <_printf_i+0x96>
 800456a:	232d      	movs	r3, #45	; 0x2d
 800456c:	9a04      	ldr	r2, [sp, #16]
 800456e:	426d      	negs	r5, r5
 8004570:	7013      	strb	r3, [r2, #0]
 8004572:	4b61      	ldr	r3, [pc, #388]	; (80046f8 <_printf_i+0x21c>)
 8004574:	270a      	movs	r7, #10
 8004576:	9303      	str	r3, [sp, #12]
 8004578:	e01b      	b.n	80045b2 <_printf_i+0xd6>
 800457a:	680d      	ldr	r5, [r1, #0]
 800457c:	601a      	str	r2, [r3, #0]
 800457e:	0641      	lsls	r1, r0, #25
 8004580:	d5f1      	bpl.n	8004566 <_printf_i+0x8a>
 8004582:	b22d      	sxth	r5, r5
 8004584:	e7ef      	b.n	8004566 <_printf_i+0x8a>
 8004586:	680d      	ldr	r5, [r1, #0]
 8004588:	6819      	ldr	r1, [r3, #0]
 800458a:	1d08      	adds	r0, r1, #4
 800458c:	6018      	str	r0, [r3, #0]
 800458e:	062e      	lsls	r6, r5, #24
 8004590:	d501      	bpl.n	8004596 <_printf_i+0xba>
 8004592:	680d      	ldr	r5, [r1, #0]
 8004594:	e003      	b.n	800459e <_printf_i+0xc2>
 8004596:	066d      	lsls	r5, r5, #25
 8004598:	d5fb      	bpl.n	8004592 <_printf_i+0xb6>
 800459a:	680d      	ldr	r5, [r1, #0]
 800459c:	b2ad      	uxth	r5, r5
 800459e:	4b56      	ldr	r3, [pc, #344]	; (80046f8 <_printf_i+0x21c>)
 80045a0:	2708      	movs	r7, #8
 80045a2:	9303      	str	r3, [sp, #12]
 80045a4:	2a6f      	cmp	r2, #111	; 0x6f
 80045a6:	d000      	beq.n	80045aa <_printf_i+0xce>
 80045a8:	3702      	adds	r7, #2
 80045aa:	0023      	movs	r3, r4
 80045ac:	2200      	movs	r2, #0
 80045ae:	3343      	adds	r3, #67	; 0x43
 80045b0:	701a      	strb	r2, [r3, #0]
 80045b2:	6863      	ldr	r3, [r4, #4]
 80045b4:	60a3      	str	r3, [r4, #8]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	db03      	blt.n	80045c2 <_printf_i+0xe6>
 80045ba:	2204      	movs	r2, #4
 80045bc:	6821      	ldr	r1, [r4, #0]
 80045be:	4391      	bics	r1, r2
 80045c0:	6021      	str	r1, [r4, #0]
 80045c2:	2d00      	cmp	r5, #0
 80045c4:	d102      	bne.n	80045cc <_printf_i+0xf0>
 80045c6:	9e04      	ldr	r6, [sp, #16]
 80045c8:	2b00      	cmp	r3, #0
 80045ca:	d00c      	beq.n	80045e6 <_printf_i+0x10a>
 80045cc:	9e04      	ldr	r6, [sp, #16]
 80045ce:	0028      	movs	r0, r5
 80045d0:	0039      	movs	r1, r7
 80045d2:	f7fb fe3b 	bl	800024c <__aeabi_uidivmod>
 80045d6:	9b03      	ldr	r3, [sp, #12]
 80045d8:	3e01      	subs	r6, #1
 80045da:	5c5b      	ldrb	r3, [r3, r1]
 80045dc:	7033      	strb	r3, [r6, #0]
 80045de:	002b      	movs	r3, r5
 80045e0:	0005      	movs	r5, r0
 80045e2:	429f      	cmp	r7, r3
 80045e4:	d9f3      	bls.n	80045ce <_printf_i+0xf2>
 80045e6:	2f08      	cmp	r7, #8
 80045e8:	d109      	bne.n	80045fe <_printf_i+0x122>
 80045ea:	6823      	ldr	r3, [r4, #0]
 80045ec:	07db      	lsls	r3, r3, #31
 80045ee:	d506      	bpl.n	80045fe <_printf_i+0x122>
 80045f0:	6863      	ldr	r3, [r4, #4]
 80045f2:	6922      	ldr	r2, [r4, #16]
 80045f4:	4293      	cmp	r3, r2
 80045f6:	dc02      	bgt.n	80045fe <_printf_i+0x122>
 80045f8:	2330      	movs	r3, #48	; 0x30
 80045fa:	3e01      	subs	r6, #1
 80045fc:	7033      	strb	r3, [r6, #0]
 80045fe:	9b04      	ldr	r3, [sp, #16]
 8004600:	1b9b      	subs	r3, r3, r6
 8004602:	6123      	str	r3, [r4, #16]
 8004604:	9b07      	ldr	r3, [sp, #28]
 8004606:	0021      	movs	r1, r4
 8004608:	9300      	str	r3, [sp, #0]
 800460a:	9805      	ldr	r0, [sp, #20]
 800460c:	9b06      	ldr	r3, [sp, #24]
 800460e:	aa09      	add	r2, sp, #36	; 0x24
 8004610:	f7ff fef4 	bl	80043fc <_printf_common>
 8004614:	1c43      	adds	r3, r0, #1
 8004616:	d14c      	bne.n	80046b2 <_printf_i+0x1d6>
 8004618:	2001      	movs	r0, #1
 800461a:	4240      	negs	r0, r0
 800461c:	b00b      	add	sp, #44	; 0x2c
 800461e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004620:	3145      	adds	r1, #69	; 0x45
 8004622:	700a      	strb	r2, [r1, #0]
 8004624:	4a34      	ldr	r2, [pc, #208]	; (80046f8 <_printf_i+0x21c>)
 8004626:	9203      	str	r2, [sp, #12]
 8004628:	681a      	ldr	r2, [r3, #0]
 800462a:	6821      	ldr	r1, [r4, #0]
 800462c:	ca20      	ldmia	r2!, {r5}
 800462e:	601a      	str	r2, [r3, #0]
 8004630:	0608      	lsls	r0, r1, #24
 8004632:	d516      	bpl.n	8004662 <_printf_i+0x186>
 8004634:	07cb      	lsls	r3, r1, #31
 8004636:	d502      	bpl.n	800463e <_printf_i+0x162>
 8004638:	2320      	movs	r3, #32
 800463a:	4319      	orrs	r1, r3
 800463c:	6021      	str	r1, [r4, #0]
 800463e:	2710      	movs	r7, #16
 8004640:	2d00      	cmp	r5, #0
 8004642:	d1b2      	bne.n	80045aa <_printf_i+0xce>
 8004644:	2320      	movs	r3, #32
 8004646:	6822      	ldr	r2, [r4, #0]
 8004648:	439a      	bics	r2, r3
 800464a:	6022      	str	r2, [r4, #0]
 800464c:	e7ad      	b.n	80045aa <_printf_i+0xce>
 800464e:	2220      	movs	r2, #32
 8004650:	6809      	ldr	r1, [r1, #0]
 8004652:	430a      	orrs	r2, r1
 8004654:	6022      	str	r2, [r4, #0]
 8004656:	0022      	movs	r2, r4
 8004658:	2178      	movs	r1, #120	; 0x78
 800465a:	3245      	adds	r2, #69	; 0x45
 800465c:	7011      	strb	r1, [r2, #0]
 800465e:	4a27      	ldr	r2, [pc, #156]	; (80046fc <_printf_i+0x220>)
 8004660:	e7e1      	b.n	8004626 <_printf_i+0x14a>
 8004662:	0648      	lsls	r0, r1, #25
 8004664:	d5e6      	bpl.n	8004634 <_printf_i+0x158>
 8004666:	b2ad      	uxth	r5, r5
 8004668:	e7e4      	b.n	8004634 <_printf_i+0x158>
 800466a:	681a      	ldr	r2, [r3, #0]
 800466c:	680d      	ldr	r5, [r1, #0]
 800466e:	1d10      	adds	r0, r2, #4
 8004670:	6949      	ldr	r1, [r1, #20]
 8004672:	6018      	str	r0, [r3, #0]
 8004674:	6813      	ldr	r3, [r2, #0]
 8004676:	062e      	lsls	r6, r5, #24
 8004678:	d501      	bpl.n	800467e <_printf_i+0x1a2>
 800467a:	6019      	str	r1, [r3, #0]
 800467c:	e002      	b.n	8004684 <_printf_i+0x1a8>
 800467e:	066d      	lsls	r5, r5, #25
 8004680:	d5fb      	bpl.n	800467a <_printf_i+0x19e>
 8004682:	8019      	strh	r1, [r3, #0]
 8004684:	2300      	movs	r3, #0
 8004686:	9e04      	ldr	r6, [sp, #16]
 8004688:	6123      	str	r3, [r4, #16]
 800468a:	e7bb      	b.n	8004604 <_printf_i+0x128>
 800468c:	681a      	ldr	r2, [r3, #0]
 800468e:	1d11      	adds	r1, r2, #4
 8004690:	6019      	str	r1, [r3, #0]
 8004692:	6816      	ldr	r6, [r2, #0]
 8004694:	2100      	movs	r1, #0
 8004696:	0030      	movs	r0, r6
 8004698:	6862      	ldr	r2, [r4, #4]
 800469a:	f000 ff1d 	bl	80054d8 <memchr>
 800469e:	2800      	cmp	r0, #0
 80046a0:	d001      	beq.n	80046a6 <_printf_i+0x1ca>
 80046a2:	1b80      	subs	r0, r0, r6
 80046a4:	6060      	str	r0, [r4, #4]
 80046a6:	6863      	ldr	r3, [r4, #4]
 80046a8:	6123      	str	r3, [r4, #16]
 80046aa:	2300      	movs	r3, #0
 80046ac:	9a04      	ldr	r2, [sp, #16]
 80046ae:	7013      	strb	r3, [r2, #0]
 80046b0:	e7a8      	b.n	8004604 <_printf_i+0x128>
 80046b2:	6923      	ldr	r3, [r4, #16]
 80046b4:	0032      	movs	r2, r6
 80046b6:	9906      	ldr	r1, [sp, #24]
 80046b8:	9805      	ldr	r0, [sp, #20]
 80046ba:	9d07      	ldr	r5, [sp, #28]
 80046bc:	47a8      	blx	r5
 80046be:	1c43      	adds	r3, r0, #1
 80046c0:	d0aa      	beq.n	8004618 <_printf_i+0x13c>
 80046c2:	6823      	ldr	r3, [r4, #0]
 80046c4:	079b      	lsls	r3, r3, #30
 80046c6:	d415      	bmi.n	80046f4 <_printf_i+0x218>
 80046c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80046ca:	68e0      	ldr	r0, [r4, #12]
 80046cc:	4298      	cmp	r0, r3
 80046ce:	daa5      	bge.n	800461c <_printf_i+0x140>
 80046d0:	0018      	movs	r0, r3
 80046d2:	e7a3      	b.n	800461c <_printf_i+0x140>
 80046d4:	0022      	movs	r2, r4
 80046d6:	2301      	movs	r3, #1
 80046d8:	9906      	ldr	r1, [sp, #24]
 80046da:	9805      	ldr	r0, [sp, #20]
 80046dc:	9e07      	ldr	r6, [sp, #28]
 80046de:	3219      	adds	r2, #25
 80046e0:	47b0      	blx	r6
 80046e2:	1c43      	adds	r3, r0, #1
 80046e4:	d098      	beq.n	8004618 <_printf_i+0x13c>
 80046e6:	3501      	adds	r5, #1
 80046e8:	68e3      	ldr	r3, [r4, #12]
 80046ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80046ec:	1a9b      	subs	r3, r3, r2
 80046ee:	42ab      	cmp	r3, r5
 80046f0:	dcf0      	bgt.n	80046d4 <_printf_i+0x1f8>
 80046f2:	e7e9      	b.n	80046c8 <_printf_i+0x1ec>
 80046f4:	2500      	movs	r5, #0
 80046f6:	e7f7      	b.n	80046e8 <_printf_i+0x20c>
 80046f8:	08006ec2 	.word	0x08006ec2
 80046fc:	08006ed3 	.word	0x08006ed3

08004700 <_vsniprintf_r>:
 8004700:	b530      	push	{r4, r5, lr}
 8004702:	0014      	movs	r4, r2
 8004704:	0005      	movs	r5, r0
 8004706:	001a      	movs	r2, r3
 8004708:	b09b      	sub	sp, #108	; 0x6c
 800470a:	2c00      	cmp	r4, #0
 800470c:	da05      	bge.n	800471a <_vsniprintf_r+0x1a>
 800470e:	238b      	movs	r3, #139	; 0x8b
 8004710:	6003      	str	r3, [r0, #0]
 8004712:	2001      	movs	r0, #1
 8004714:	4240      	negs	r0, r0
 8004716:	b01b      	add	sp, #108	; 0x6c
 8004718:	bd30      	pop	{r4, r5, pc}
 800471a:	2382      	movs	r3, #130	; 0x82
 800471c:	4668      	mov	r0, sp
 800471e:	009b      	lsls	r3, r3, #2
 8004720:	8183      	strh	r3, [r0, #12]
 8004722:	2300      	movs	r3, #0
 8004724:	9100      	str	r1, [sp, #0]
 8004726:	9104      	str	r1, [sp, #16]
 8004728:	429c      	cmp	r4, r3
 800472a:	d000      	beq.n	800472e <_vsniprintf_r+0x2e>
 800472c:	1e63      	subs	r3, r4, #1
 800472e:	9302      	str	r3, [sp, #8]
 8004730:	9305      	str	r3, [sp, #20]
 8004732:	2301      	movs	r3, #1
 8004734:	4669      	mov	r1, sp
 8004736:	425b      	negs	r3, r3
 8004738:	81cb      	strh	r3, [r1, #14]
 800473a:	0028      	movs	r0, r5
 800473c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800473e:	f001 fbeb 	bl	8005f18 <_svfiprintf_r>
 8004742:	1c43      	adds	r3, r0, #1
 8004744:	da01      	bge.n	800474a <_vsniprintf_r+0x4a>
 8004746:	238b      	movs	r3, #139	; 0x8b
 8004748:	602b      	str	r3, [r5, #0]
 800474a:	2c00      	cmp	r4, #0
 800474c:	d0e3      	beq.n	8004716 <_vsniprintf_r+0x16>
 800474e:	2300      	movs	r3, #0
 8004750:	9a00      	ldr	r2, [sp, #0]
 8004752:	7013      	strb	r3, [r2, #0]
 8004754:	e7df      	b.n	8004716 <_vsniprintf_r+0x16>
	...

08004758 <vsniprintf>:
 8004758:	b507      	push	{r0, r1, r2, lr}
 800475a:	9300      	str	r3, [sp, #0]
 800475c:	0013      	movs	r3, r2
 800475e:	000a      	movs	r2, r1
 8004760:	0001      	movs	r1, r0
 8004762:	4802      	ldr	r0, [pc, #8]	; (800476c <vsniprintf+0x14>)
 8004764:	6800      	ldr	r0, [r0, #0]
 8004766:	f7ff ffcb 	bl	8004700 <_vsniprintf_r>
 800476a:	bd0e      	pop	{r1, r2, r3, pc}
 800476c:	2000004c 	.word	0x2000004c

08004770 <quorem>:
 8004770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004772:	0006      	movs	r6, r0
 8004774:	690b      	ldr	r3, [r1, #16]
 8004776:	6932      	ldr	r2, [r6, #16]
 8004778:	b087      	sub	sp, #28
 800477a:	2000      	movs	r0, #0
 800477c:	9103      	str	r1, [sp, #12]
 800477e:	429a      	cmp	r2, r3
 8004780:	db65      	blt.n	800484e <quorem+0xde>
 8004782:	3b01      	subs	r3, #1
 8004784:	009c      	lsls	r4, r3, #2
 8004786:	9300      	str	r3, [sp, #0]
 8004788:	000b      	movs	r3, r1
 800478a:	3314      	adds	r3, #20
 800478c:	9305      	str	r3, [sp, #20]
 800478e:	191b      	adds	r3, r3, r4
 8004790:	9304      	str	r3, [sp, #16]
 8004792:	0033      	movs	r3, r6
 8004794:	3314      	adds	r3, #20
 8004796:	9302      	str	r3, [sp, #8]
 8004798:	191c      	adds	r4, r3, r4
 800479a:	9b04      	ldr	r3, [sp, #16]
 800479c:	6827      	ldr	r7, [r4, #0]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	0038      	movs	r0, r7
 80047a2:	1c5d      	adds	r5, r3, #1
 80047a4:	0029      	movs	r1, r5
 80047a6:	9301      	str	r3, [sp, #4]
 80047a8:	f7fb fcca 	bl	8000140 <__udivsi3>
 80047ac:	9001      	str	r0, [sp, #4]
 80047ae:	42af      	cmp	r7, r5
 80047b0:	d324      	bcc.n	80047fc <quorem+0x8c>
 80047b2:	2500      	movs	r5, #0
 80047b4:	46ac      	mov	ip, r5
 80047b6:	9802      	ldr	r0, [sp, #8]
 80047b8:	9f05      	ldr	r7, [sp, #20]
 80047ba:	cf08      	ldmia	r7!, {r3}
 80047bc:	9a01      	ldr	r2, [sp, #4]
 80047be:	b299      	uxth	r1, r3
 80047c0:	4351      	muls	r1, r2
 80047c2:	0c1b      	lsrs	r3, r3, #16
 80047c4:	4353      	muls	r3, r2
 80047c6:	1949      	adds	r1, r1, r5
 80047c8:	0c0a      	lsrs	r2, r1, #16
 80047ca:	189b      	adds	r3, r3, r2
 80047cc:	6802      	ldr	r2, [r0, #0]
 80047ce:	b289      	uxth	r1, r1
 80047d0:	b292      	uxth	r2, r2
 80047d2:	4462      	add	r2, ip
 80047d4:	1a52      	subs	r2, r2, r1
 80047d6:	6801      	ldr	r1, [r0, #0]
 80047d8:	0c1d      	lsrs	r5, r3, #16
 80047da:	0c09      	lsrs	r1, r1, #16
 80047dc:	b29b      	uxth	r3, r3
 80047de:	1acb      	subs	r3, r1, r3
 80047e0:	1411      	asrs	r1, r2, #16
 80047e2:	185b      	adds	r3, r3, r1
 80047e4:	1419      	asrs	r1, r3, #16
 80047e6:	b292      	uxth	r2, r2
 80047e8:	041b      	lsls	r3, r3, #16
 80047ea:	431a      	orrs	r2, r3
 80047ec:	9b04      	ldr	r3, [sp, #16]
 80047ee:	468c      	mov	ip, r1
 80047f0:	c004      	stmia	r0!, {r2}
 80047f2:	42bb      	cmp	r3, r7
 80047f4:	d2e1      	bcs.n	80047ba <quorem+0x4a>
 80047f6:	6823      	ldr	r3, [r4, #0]
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d030      	beq.n	800485e <quorem+0xee>
 80047fc:	0030      	movs	r0, r6
 80047fe:	9903      	ldr	r1, [sp, #12]
 8004800:	f001 f902 	bl	8005a08 <__mcmp>
 8004804:	2800      	cmp	r0, #0
 8004806:	db21      	blt.n	800484c <quorem+0xdc>
 8004808:	0030      	movs	r0, r6
 800480a:	2400      	movs	r4, #0
 800480c:	9b01      	ldr	r3, [sp, #4]
 800480e:	9903      	ldr	r1, [sp, #12]
 8004810:	3301      	adds	r3, #1
 8004812:	9301      	str	r3, [sp, #4]
 8004814:	3014      	adds	r0, #20
 8004816:	3114      	adds	r1, #20
 8004818:	6803      	ldr	r3, [r0, #0]
 800481a:	c920      	ldmia	r1!, {r5}
 800481c:	b29a      	uxth	r2, r3
 800481e:	1914      	adds	r4, r2, r4
 8004820:	b2aa      	uxth	r2, r5
 8004822:	1aa2      	subs	r2, r4, r2
 8004824:	0c1b      	lsrs	r3, r3, #16
 8004826:	0c2d      	lsrs	r5, r5, #16
 8004828:	1414      	asrs	r4, r2, #16
 800482a:	1b5b      	subs	r3, r3, r5
 800482c:	191b      	adds	r3, r3, r4
 800482e:	141c      	asrs	r4, r3, #16
 8004830:	b292      	uxth	r2, r2
 8004832:	041b      	lsls	r3, r3, #16
 8004834:	4313      	orrs	r3, r2
 8004836:	c008      	stmia	r0!, {r3}
 8004838:	9b04      	ldr	r3, [sp, #16]
 800483a:	428b      	cmp	r3, r1
 800483c:	d2ec      	bcs.n	8004818 <quorem+0xa8>
 800483e:	9b00      	ldr	r3, [sp, #0]
 8004840:	9a02      	ldr	r2, [sp, #8]
 8004842:	009b      	lsls	r3, r3, #2
 8004844:	18d3      	adds	r3, r2, r3
 8004846:	681a      	ldr	r2, [r3, #0]
 8004848:	2a00      	cmp	r2, #0
 800484a:	d015      	beq.n	8004878 <quorem+0x108>
 800484c:	9801      	ldr	r0, [sp, #4]
 800484e:	b007      	add	sp, #28
 8004850:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004852:	6823      	ldr	r3, [r4, #0]
 8004854:	2b00      	cmp	r3, #0
 8004856:	d106      	bne.n	8004866 <quorem+0xf6>
 8004858:	9b00      	ldr	r3, [sp, #0]
 800485a:	3b01      	subs	r3, #1
 800485c:	9300      	str	r3, [sp, #0]
 800485e:	9b02      	ldr	r3, [sp, #8]
 8004860:	3c04      	subs	r4, #4
 8004862:	42a3      	cmp	r3, r4
 8004864:	d3f5      	bcc.n	8004852 <quorem+0xe2>
 8004866:	9b00      	ldr	r3, [sp, #0]
 8004868:	6133      	str	r3, [r6, #16]
 800486a:	e7c7      	b.n	80047fc <quorem+0x8c>
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	2a00      	cmp	r2, #0
 8004870:	d106      	bne.n	8004880 <quorem+0x110>
 8004872:	9a00      	ldr	r2, [sp, #0]
 8004874:	3a01      	subs	r2, #1
 8004876:	9200      	str	r2, [sp, #0]
 8004878:	9a02      	ldr	r2, [sp, #8]
 800487a:	3b04      	subs	r3, #4
 800487c:	429a      	cmp	r2, r3
 800487e:	d3f5      	bcc.n	800486c <quorem+0xfc>
 8004880:	9b00      	ldr	r3, [sp, #0]
 8004882:	6133      	str	r3, [r6, #16]
 8004884:	e7e2      	b.n	800484c <quorem+0xdc>
	...

08004888 <_dtoa_r>:
 8004888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800488a:	b09d      	sub	sp, #116	; 0x74
 800488c:	9202      	str	r2, [sp, #8]
 800488e:	9303      	str	r3, [sp, #12]
 8004890:	9b02      	ldr	r3, [sp, #8]
 8004892:	9c03      	ldr	r4, [sp, #12]
 8004894:	9308      	str	r3, [sp, #32]
 8004896:	9409      	str	r4, [sp, #36]	; 0x24
 8004898:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800489a:	0007      	movs	r7, r0
 800489c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 800489e:	2c00      	cmp	r4, #0
 80048a0:	d10e      	bne.n	80048c0 <_dtoa_r+0x38>
 80048a2:	2010      	movs	r0, #16
 80048a4:	f000 fe0e 	bl	80054c4 <malloc>
 80048a8:	1e02      	subs	r2, r0, #0
 80048aa:	6278      	str	r0, [r7, #36]	; 0x24
 80048ac:	d104      	bne.n	80048b8 <_dtoa_r+0x30>
 80048ae:	21ea      	movs	r1, #234	; 0xea
 80048b0:	4bc7      	ldr	r3, [pc, #796]	; (8004bd0 <_dtoa_r+0x348>)
 80048b2:	48c8      	ldr	r0, [pc, #800]	; (8004bd4 <_dtoa_r+0x34c>)
 80048b4:	f001 fc42 	bl	800613c <__assert_func>
 80048b8:	6044      	str	r4, [r0, #4]
 80048ba:	6084      	str	r4, [r0, #8]
 80048bc:	6004      	str	r4, [r0, #0]
 80048be:	60c4      	str	r4, [r0, #12]
 80048c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80048c2:	6819      	ldr	r1, [r3, #0]
 80048c4:	2900      	cmp	r1, #0
 80048c6:	d00a      	beq.n	80048de <_dtoa_r+0x56>
 80048c8:	685a      	ldr	r2, [r3, #4]
 80048ca:	2301      	movs	r3, #1
 80048cc:	4093      	lsls	r3, r2
 80048ce:	604a      	str	r2, [r1, #4]
 80048d0:	608b      	str	r3, [r1, #8]
 80048d2:	0038      	movs	r0, r7
 80048d4:	f000 fe58 	bl	8005588 <_Bfree>
 80048d8:	2200      	movs	r2, #0
 80048da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80048dc:	601a      	str	r2, [r3, #0]
 80048de:	9b03      	ldr	r3, [sp, #12]
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	da20      	bge.n	8004926 <_dtoa_r+0x9e>
 80048e4:	2301      	movs	r3, #1
 80048e6:	602b      	str	r3, [r5, #0]
 80048e8:	9b03      	ldr	r3, [sp, #12]
 80048ea:	005b      	lsls	r3, r3, #1
 80048ec:	085b      	lsrs	r3, r3, #1
 80048ee:	9309      	str	r3, [sp, #36]	; 0x24
 80048f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80048f2:	4bb9      	ldr	r3, [pc, #740]	; (8004bd8 <_dtoa_r+0x350>)
 80048f4:	4ab8      	ldr	r2, [pc, #736]	; (8004bd8 <_dtoa_r+0x350>)
 80048f6:	402b      	ands	r3, r5
 80048f8:	4293      	cmp	r3, r2
 80048fa:	d117      	bne.n	800492c <_dtoa_r+0xa4>
 80048fc:	4bb7      	ldr	r3, [pc, #732]	; (8004bdc <_dtoa_r+0x354>)
 80048fe:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004900:	0328      	lsls	r0, r5, #12
 8004902:	6013      	str	r3, [r2, #0]
 8004904:	9b02      	ldr	r3, [sp, #8]
 8004906:	0b00      	lsrs	r0, r0, #12
 8004908:	4318      	orrs	r0, r3
 800490a:	d101      	bne.n	8004910 <_dtoa_r+0x88>
 800490c:	f000 fdbf 	bl	800548e <_dtoa_r+0xc06>
 8004910:	48b3      	ldr	r0, [pc, #716]	; (8004be0 <_dtoa_r+0x358>)
 8004912:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004914:	9006      	str	r0, [sp, #24]
 8004916:	2b00      	cmp	r3, #0
 8004918:	d002      	beq.n	8004920 <_dtoa_r+0x98>
 800491a:	4bb2      	ldr	r3, [pc, #712]	; (8004be4 <_dtoa_r+0x35c>)
 800491c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800491e:	6013      	str	r3, [r2, #0]
 8004920:	9806      	ldr	r0, [sp, #24]
 8004922:	b01d      	add	sp, #116	; 0x74
 8004924:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004926:	2300      	movs	r3, #0
 8004928:	602b      	str	r3, [r5, #0]
 800492a:	e7e1      	b.n	80048f0 <_dtoa_r+0x68>
 800492c:	9b08      	ldr	r3, [sp, #32]
 800492e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8004930:	9312      	str	r3, [sp, #72]	; 0x48
 8004932:	9413      	str	r4, [sp, #76]	; 0x4c
 8004934:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004936:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004938:	2200      	movs	r2, #0
 800493a:	2300      	movs	r3, #0
 800493c:	f7fb fd86 	bl	800044c <__aeabi_dcmpeq>
 8004940:	1e04      	subs	r4, r0, #0
 8004942:	d009      	beq.n	8004958 <_dtoa_r+0xd0>
 8004944:	2301      	movs	r3, #1
 8004946:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004948:	6013      	str	r3, [r2, #0]
 800494a:	4ba7      	ldr	r3, [pc, #668]	; (8004be8 <_dtoa_r+0x360>)
 800494c:	9306      	str	r3, [sp, #24]
 800494e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004950:	2b00      	cmp	r3, #0
 8004952:	d0e5      	beq.n	8004920 <_dtoa_r+0x98>
 8004954:	4ba5      	ldr	r3, [pc, #660]	; (8004bec <_dtoa_r+0x364>)
 8004956:	e7e1      	b.n	800491c <_dtoa_r+0x94>
 8004958:	ab1a      	add	r3, sp, #104	; 0x68
 800495a:	9301      	str	r3, [sp, #4]
 800495c:	ab1b      	add	r3, sp, #108	; 0x6c
 800495e:	9300      	str	r3, [sp, #0]
 8004960:	0038      	movs	r0, r7
 8004962:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004964:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004966:	f001 f903 	bl	8005b70 <__d2b>
 800496a:	006e      	lsls	r6, r5, #1
 800496c:	9005      	str	r0, [sp, #20]
 800496e:	0d76      	lsrs	r6, r6, #21
 8004970:	d100      	bne.n	8004974 <_dtoa_r+0xec>
 8004972:	e07c      	b.n	8004a6e <_dtoa_r+0x1e6>
 8004974:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004976:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004978:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800497a:	4a9d      	ldr	r2, [pc, #628]	; (8004bf0 <_dtoa_r+0x368>)
 800497c:	031b      	lsls	r3, r3, #12
 800497e:	0b1b      	lsrs	r3, r3, #12
 8004980:	431a      	orrs	r2, r3
 8004982:	0011      	movs	r1, r2
 8004984:	4b9b      	ldr	r3, [pc, #620]	; (8004bf4 <_dtoa_r+0x36c>)
 8004986:	9418      	str	r4, [sp, #96]	; 0x60
 8004988:	18f6      	adds	r6, r6, r3
 800498a:	2200      	movs	r2, #0
 800498c:	4b9a      	ldr	r3, [pc, #616]	; (8004bf8 <_dtoa_r+0x370>)
 800498e:	f7fc ff35 	bl	80017fc <__aeabi_dsub>
 8004992:	4a9a      	ldr	r2, [pc, #616]	; (8004bfc <_dtoa_r+0x374>)
 8004994:	4b9a      	ldr	r3, [pc, #616]	; (8004c00 <_dtoa_r+0x378>)
 8004996:	f7fc fcc5 	bl	8001324 <__aeabi_dmul>
 800499a:	4a9a      	ldr	r2, [pc, #616]	; (8004c04 <_dtoa_r+0x37c>)
 800499c:	4b9a      	ldr	r3, [pc, #616]	; (8004c08 <_dtoa_r+0x380>)
 800499e:	f7fb fd83 	bl	80004a8 <__aeabi_dadd>
 80049a2:	0004      	movs	r4, r0
 80049a4:	0030      	movs	r0, r6
 80049a6:	000d      	movs	r5, r1
 80049a8:	f7fd fb0e 	bl	8001fc8 <__aeabi_i2d>
 80049ac:	4a97      	ldr	r2, [pc, #604]	; (8004c0c <_dtoa_r+0x384>)
 80049ae:	4b98      	ldr	r3, [pc, #608]	; (8004c10 <_dtoa_r+0x388>)
 80049b0:	f7fc fcb8 	bl	8001324 <__aeabi_dmul>
 80049b4:	0002      	movs	r2, r0
 80049b6:	000b      	movs	r3, r1
 80049b8:	0020      	movs	r0, r4
 80049ba:	0029      	movs	r1, r5
 80049bc:	f7fb fd74 	bl	80004a8 <__aeabi_dadd>
 80049c0:	0004      	movs	r4, r0
 80049c2:	000d      	movs	r5, r1
 80049c4:	f7fd faca 	bl	8001f5c <__aeabi_d2iz>
 80049c8:	2200      	movs	r2, #0
 80049ca:	9002      	str	r0, [sp, #8]
 80049cc:	2300      	movs	r3, #0
 80049ce:	0020      	movs	r0, r4
 80049d0:	0029      	movs	r1, r5
 80049d2:	f7fb fd41 	bl	8000458 <__aeabi_dcmplt>
 80049d6:	2800      	cmp	r0, #0
 80049d8:	d00b      	beq.n	80049f2 <_dtoa_r+0x16a>
 80049da:	9802      	ldr	r0, [sp, #8]
 80049dc:	f7fd faf4 	bl	8001fc8 <__aeabi_i2d>
 80049e0:	002b      	movs	r3, r5
 80049e2:	0022      	movs	r2, r4
 80049e4:	f7fb fd32 	bl	800044c <__aeabi_dcmpeq>
 80049e8:	4243      	negs	r3, r0
 80049ea:	4158      	adcs	r0, r3
 80049ec:	9b02      	ldr	r3, [sp, #8]
 80049ee:	1a1b      	subs	r3, r3, r0
 80049f0:	9302      	str	r3, [sp, #8]
 80049f2:	2301      	movs	r3, #1
 80049f4:	9316      	str	r3, [sp, #88]	; 0x58
 80049f6:	9b02      	ldr	r3, [sp, #8]
 80049f8:	2b16      	cmp	r3, #22
 80049fa:	d80f      	bhi.n	8004a1c <_dtoa_r+0x194>
 80049fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80049fe:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004a00:	00da      	lsls	r2, r3, #3
 8004a02:	4b84      	ldr	r3, [pc, #528]	; (8004c14 <_dtoa_r+0x38c>)
 8004a04:	189b      	adds	r3, r3, r2
 8004a06:	681a      	ldr	r2, [r3, #0]
 8004a08:	685b      	ldr	r3, [r3, #4]
 8004a0a:	f7fb fd25 	bl	8000458 <__aeabi_dcmplt>
 8004a0e:	2800      	cmp	r0, #0
 8004a10:	d049      	beq.n	8004aa6 <_dtoa_r+0x21e>
 8004a12:	9b02      	ldr	r3, [sp, #8]
 8004a14:	3b01      	subs	r3, #1
 8004a16:	9302      	str	r3, [sp, #8]
 8004a18:	2300      	movs	r3, #0
 8004a1a:	9316      	str	r3, [sp, #88]	; 0x58
 8004a1c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004a1e:	1b9e      	subs	r6, r3, r6
 8004a20:	2300      	movs	r3, #0
 8004a22:	930a      	str	r3, [sp, #40]	; 0x28
 8004a24:	0033      	movs	r3, r6
 8004a26:	3b01      	subs	r3, #1
 8004a28:	930d      	str	r3, [sp, #52]	; 0x34
 8004a2a:	d504      	bpl.n	8004a36 <_dtoa_r+0x1ae>
 8004a2c:	2301      	movs	r3, #1
 8004a2e:	1b9b      	subs	r3, r3, r6
 8004a30:	930a      	str	r3, [sp, #40]	; 0x28
 8004a32:	2300      	movs	r3, #0
 8004a34:	930d      	str	r3, [sp, #52]	; 0x34
 8004a36:	9b02      	ldr	r3, [sp, #8]
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	db36      	blt.n	8004aaa <_dtoa_r+0x222>
 8004a3c:	9a02      	ldr	r2, [sp, #8]
 8004a3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004a40:	4694      	mov	ip, r2
 8004a42:	4463      	add	r3, ip
 8004a44:	930d      	str	r3, [sp, #52]	; 0x34
 8004a46:	2300      	movs	r3, #0
 8004a48:	9215      	str	r2, [sp, #84]	; 0x54
 8004a4a:	930e      	str	r3, [sp, #56]	; 0x38
 8004a4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a4e:	2401      	movs	r4, #1
 8004a50:	2b09      	cmp	r3, #9
 8004a52:	d864      	bhi.n	8004b1e <_dtoa_r+0x296>
 8004a54:	2b05      	cmp	r3, #5
 8004a56:	dd02      	ble.n	8004a5e <_dtoa_r+0x1d6>
 8004a58:	2400      	movs	r4, #0
 8004a5a:	3b04      	subs	r3, #4
 8004a5c:	9322      	str	r3, [sp, #136]	; 0x88
 8004a5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a60:	1e98      	subs	r0, r3, #2
 8004a62:	2803      	cmp	r0, #3
 8004a64:	d864      	bhi.n	8004b30 <_dtoa_r+0x2a8>
 8004a66:	f7fb fb57 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004a6a:	3829      	.short	0x3829
 8004a6c:	5836      	.short	0x5836
 8004a6e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004a70:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004a72:	189e      	adds	r6, r3, r2
 8004a74:	4b68      	ldr	r3, [pc, #416]	; (8004c18 <_dtoa_r+0x390>)
 8004a76:	18f2      	adds	r2, r6, r3
 8004a78:	2a20      	cmp	r2, #32
 8004a7a:	dd0f      	ble.n	8004a9c <_dtoa_r+0x214>
 8004a7c:	2340      	movs	r3, #64	; 0x40
 8004a7e:	1a9b      	subs	r3, r3, r2
 8004a80:	409d      	lsls	r5, r3
 8004a82:	4b66      	ldr	r3, [pc, #408]	; (8004c1c <_dtoa_r+0x394>)
 8004a84:	9802      	ldr	r0, [sp, #8]
 8004a86:	18f3      	adds	r3, r6, r3
 8004a88:	40d8      	lsrs	r0, r3
 8004a8a:	4328      	orrs	r0, r5
 8004a8c:	f7fd facc 	bl	8002028 <__aeabi_ui2d>
 8004a90:	2301      	movs	r3, #1
 8004a92:	4c63      	ldr	r4, [pc, #396]	; (8004c20 <_dtoa_r+0x398>)
 8004a94:	3e01      	subs	r6, #1
 8004a96:	1909      	adds	r1, r1, r4
 8004a98:	9318      	str	r3, [sp, #96]	; 0x60
 8004a9a:	e776      	b.n	800498a <_dtoa_r+0x102>
 8004a9c:	2320      	movs	r3, #32
 8004a9e:	9802      	ldr	r0, [sp, #8]
 8004aa0:	1a9b      	subs	r3, r3, r2
 8004aa2:	4098      	lsls	r0, r3
 8004aa4:	e7f2      	b.n	8004a8c <_dtoa_r+0x204>
 8004aa6:	9016      	str	r0, [sp, #88]	; 0x58
 8004aa8:	e7b8      	b.n	8004a1c <_dtoa_r+0x194>
 8004aaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004aac:	9a02      	ldr	r2, [sp, #8]
 8004aae:	1a9b      	subs	r3, r3, r2
 8004ab0:	930a      	str	r3, [sp, #40]	; 0x28
 8004ab2:	4253      	negs	r3, r2
 8004ab4:	930e      	str	r3, [sp, #56]	; 0x38
 8004ab6:	2300      	movs	r3, #0
 8004ab8:	9315      	str	r3, [sp, #84]	; 0x54
 8004aba:	e7c7      	b.n	8004a4c <_dtoa_r+0x1c4>
 8004abc:	2300      	movs	r3, #0
 8004abe:	930f      	str	r3, [sp, #60]	; 0x3c
 8004ac0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004ac2:	930c      	str	r3, [sp, #48]	; 0x30
 8004ac4:	9307      	str	r3, [sp, #28]
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	dc13      	bgt.n	8004af2 <_dtoa_r+0x26a>
 8004aca:	2301      	movs	r3, #1
 8004acc:	001a      	movs	r2, r3
 8004ace:	930c      	str	r3, [sp, #48]	; 0x30
 8004ad0:	9307      	str	r3, [sp, #28]
 8004ad2:	9223      	str	r2, [sp, #140]	; 0x8c
 8004ad4:	e00d      	b.n	8004af2 <_dtoa_r+0x26a>
 8004ad6:	2301      	movs	r3, #1
 8004ad8:	e7f1      	b.n	8004abe <_dtoa_r+0x236>
 8004ada:	2300      	movs	r3, #0
 8004adc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004ade:	930f      	str	r3, [sp, #60]	; 0x3c
 8004ae0:	4694      	mov	ip, r2
 8004ae2:	9b02      	ldr	r3, [sp, #8]
 8004ae4:	4463      	add	r3, ip
 8004ae6:	930c      	str	r3, [sp, #48]	; 0x30
 8004ae8:	3301      	adds	r3, #1
 8004aea:	9307      	str	r3, [sp, #28]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	dc00      	bgt.n	8004af2 <_dtoa_r+0x26a>
 8004af0:	2301      	movs	r3, #1
 8004af2:	2200      	movs	r2, #0
 8004af4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004af6:	6042      	str	r2, [r0, #4]
 8004af8:	3204      	adds	r2, #4
 8004afa:	0015      	movs	r5, r2
 8004afc:	3514      	adds	r5, #20
 8004afe:	6841      	ldr	r1, [r0, #4]
 8004b00:	429d      	cmp	r5, r3
 8004b02:	d919      	bls.n	8004b38 <_dtoa_r+0x2b0>
 8004b04:	0038      	movs	r0, r7
 8004b06:	f000 fcfb 	bl	8005500 <_Balloc>
 8004b0a:	9006      	str	r0, [sp, #24]
 8004b0c:	2800      	cmp	r0, #0
 8004b0e:	d117      	bne.n	8004b40 <_dtoa_r+0x2b8>
 8004b10:	21d5      	movs	r1, #213	; 0xd5
 8004b12:	0002      	movs	r2, r0
 8004b14:	4b43      	ldr	r3, [pc, #268]	; (8004c24 <_dtoa_r+0x39c>)
 8004b16:	0049      	lsls	r1, r1, #1
 8004b18:	e6cb      	b.n	80048b2 <_dtoa_r+0x2a>
 8004b1a:	2301      	movs	r3, #1
 8004b1c:	e7de      	b.n	8004adc <_dtoa_r+0x254>
 8004b1e:	2300      	movs	r3, #0
 8004b20:	940f      	str	r4, [sp, #60]	; 0x3c
 8004b22:	9322      	str	r3, [sp, #136]	; 0x88
 8004b24:	3b01      	subs	r3, #1
 8004b26:	930c      	str	r3, [sp, #48]	; 0x30
 8004b28:	9307      	str	r3, [sp, #28]
 8004b2a:	2200      	movs	r2, #0
 8004b2c:	3313      	adds	r3, #19
 8004b2e:	e7d0      	b.n	8004ad2 <_dtoa_r+0x24a>
 8004b30:	2301      	movs	r3, #1
 8004b32:	930f      	str	r3, [sp, #60]	; 0x3c
 8004b34:	3b02      	subs	r3, #2
 8004b36:	e7f6      	b.n	8004b26 <_dtoa_r+0x29e>
 8004b38:	3101      	adds	r1, #1
 8004b3a:	6041      	str	r1, [r0, #4]
 8004b3c:	0052      	lsls	r2, r2, #1
 8004b3e:	e7dc      	b.n	8004afa <_dtoa_r+0x272>
 8004b40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b42:	9a06      	ldr	r2, [sp, #24]
 8004b44:	601a      	str	r2, [r3, #0]
 8004b46:	9b07      	ldr	r3, [sp, #28]
 8004b48:	2b0e      	cmp	r3, #14
 8004b4a:	d900      	bls.n	8004b4e <_dtoa_r+0x2c6>
 8004b4c:	e0eb      	b.n	8004d26 <_dtoa_r+0x49e>
 8004b4e:	2c00      	cmp	r4, #0
 8004b50:	d100      	bne.n	8004b54 <_dtoa_r+0x2cc>
 8004b52:	e0e8      	b.n	8004d26 <_dtoa_r+0x49e>
 8004b54:	9b02      	ldr	r3, [sp, #8]
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	dd68      	ble.n	8004c2c <_dtoa_r+0x3a4>
 8004b5a:	001a      	movs	r2, r3
 8004b5c:	210f      	movs	r1, #15
 8004b5e:	4b2d      	ldr	r3, [pc, #180]	; (8004c14 <_dtoa_r+0x38c>)
 8004b60:	400a      	ands	r2, r1
 8004b62:	00d2      	lsls	r2, r2, #3
 8004b64:	189b      	adds	r3, r3, r2
 8004b66:	681d      	ldr	r5, [r3, #0]
 8004b68:	685e      	ldr	r6, [r3, #4]
 8004b6a:	9b02      	ldr	r3, [sp, #8]
 8004b6c:	111c      	asrs	r4, r3, #4
 8004b6e:	2302      	movs	r3, #2
 8004b70:	9310      	str	r3, [sp, #64]	; 0x40
 8004b72:	9b02      	ldr	r3, [sp, #8]
 8004b74:	05db      	lsls	r3, r3, #23
 8004b76:	d50b      	bpl.n	8004b90 <_dtoa_r+0x308>
 8004b78:	4b2b      	ldr	r3, [pc, #172]	; (8004c28 <_dtoa_r+0x3a0>)
 8004b7a:	400c      	ands	r4, r1
 8004b7c:	6a1a      	ldr	r2, [r3, #32]
 8004b7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b80:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004b82:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004b84:	f7fb ffcc 	bl	8000b20 <__aeabi_ddiv>
 8004b88:	2303      	movs	r3, #3
 8004b8a:	9008      	str	r0, [sp, #32]
 8004b8c:	9109      	str	r1, [sp, #36]	; 0x24
 8004b8e:	9310      	str	r3, [sp, #64]	; 0x40
 8004b90:	4b25      	ldr	r3, [pc, #148]	; (8004c28 <_dtoa_r+0x3a0>)
 8004b92:	9314      	str	r3, [sp, #80]	; 0x50
 8004b94:	2c00      	cmp	r4, #0
 8004b96:	d108      	bne.n	8004baa <_dtoa_r+0x322>
 8004b98:	9808      	ldr	r0, [sp, #32]
 8004b9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b9c:	002a      	movs	r2, r5
 8004b9e:	0033      	movs	r3, r6
 8004ba0:	f7fb ffbe 	bl	8000b20 <__aeabi_ddiv>
 8004ba4:	9008      	str	r0, [sp, #32]
 8004ba6:	9109      	str	r1, [sp, #36]	; 0x24
 8004ba8:	e05c      	b.n	8004c64 <_dtoa_r+0x3dc>
 8004baa:	2301      	movs	r3, #1
 8004bac:	421c      	tst	r4, r3
 8004bae:	d00b      	beq.n	8004bc8 <_dtoa_r+0x340>
 8004bb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004bb2:	0028      	movs	r0, r5
 8004bb4:	3301      	adds	r3, #1
 8004bb6:	9310      	str	r3, [sp, #64]	; 0x40
 8004bb8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004bba:	0031      	movs	r1, r6
 8004bbc:	681a      	ldr	r2, [r3, #0]
 8004bbe:	685b      	ldr	r3, [r3, #4]
 8004bc0:	f7fc fbb0 	bl	8001324 <__aeabi_dmul>
 8004bc4:	0005      	movs	r5, r0
 8004bc6:	000e      	movs	r6, r1
 8004bc8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004bca:	1064      	asrs	r4, r4, #1
 8004bcc:	3308      	adds	r3, #8
 8004bce:	e7e0      	b.n	8004b92 <_dtoa_r+0x30a>
 8004bd0:	08006ef1 	.word	0x08006ef1
 8004bd4:	08006f08 	.word	0x08006f08
 8004bd8:	7ff00000 	.word	0x7ff00000
 8004bdc:	0000270f 	.word	0x0000270f
 8004be0:	08006eed 	.word	0x08006eed
 8004be4:	08006ef0 	.word	0x08006ef0
 8004be8:	08006ec0 	.word	0x08006ec0
 8004bec:	08006ec1 	.word	0x08006ec1
 8004bf0:	3ff00000 	.word	0x3ff00000
 8004bf4:	fffffc01 	.word	0xfffffc01
 8004bf8:	3ff80000 	.word	0x3ff80000
 8004bfc:	636f4361 	.word	0x636f4361
 8004c00:	3fd287a7 	.word	0x3fd287a7
 8004c04:	8b60c8b3 	.word	0x8b60c8b3
 8004c08:	3fc68a28 	.word	0x3fc68a28
 8004c0c:	509f79fb 	.word	0x509f79fb
 8004c10:	3fd34413 	.word	0x3fd34413
 8004c14:	08006ff8 	.word	0x08006ff8
 8004c18:	00000432 	.word	0x00000432
 8004c1c:	00000412 	.word	0x00000412
 8004c20:	fe100000 	.word	0xfe100000
 8004c24:	08006f63 	.word	0x08006f63
 8004c28:	08006fd0 	.word	0x08006fd0
 8004c2c:	2302      	movs	r3, #2
 8004c2e:	9310      	str	r3, [sp, #64]	; 0x40
 8004c30:	9b02      	ldr	r3, [sp, #8]
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d016      	beq.n	8004c64 <_dtoa_r+0x3dc>
 8004c36:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004c38:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004c3a:	425c      	negs	r4, r3
 8004c3c:	230f      	movs	r3, #15
 8004c3e:	4ab6      	ldr	r2, [pc, #728]	; (8004f18 <_dtoa_r+0x690>)
 8004c40:	4023      	ands	r3, r4
 8004c42:	00db      	lsls	r3, r3, #3
 8004c44:	18d3      	adds	r3, r2, r3
 8004c46:	681a      	ldr	r2, [r3, #0]
 8004c48:	685b      	ldr	r3, [r3, #4]
 8004c4a:	f7fc fb6b 	bl	8001324 <__aeabi_dmul>
 8004c4e:	2601      	movs	r6, #1
 8004c50:	2300      	movs	r3, #0
 8004c52:	9008      	str	r0, [sp, #32]
 8004c54:	9109      	str	r1, [sp, #36]	; 0x24
 8004c56:	4db1      	ldr	r5, [pc, #708]	; (8004f1c <_dtoa_r+0x694>)
 8004c58:	1124      	asrs	r4, r4, #4
 8004c5a:	2c00      	cmp	r4, #0
 8004c5c:	d000      	beq.n	8004c60 <_dtoa_r+0x3d8>
 8004c5e:	e094      	b.n	8004d8a <_dtoa_r+0x502>
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d19f      	bne.n	8004ba4 <_dtoa_r+0x31c>
 8004c64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004c66:	2b00      	cmp	r3, #0
 8004c68:	d100      	bne.n	8004c6c <_dtoa_r+0x3e4>
 8004c6a:	e09b      	b.n	8004da4 <_dtoa_r+0x51c>
 8004c6c:	9c08      	ldr	r4, [sp, #32]
 8004c6e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004c70:	2200      	movs	r2, #0
 8004c72:	0020      	movs	r0, r4
 8004c74:	0029      	movs	r1, r5
 8004c76:	4baa      	ldr	r3, [pc, #680]	; (8004f20 <_dtoa_r+0x698>)
 8004c78:	f7fb fbee 	bl	8000458 <__aeabi_dcmplt>
 8004c7c:	2800      	cmp	r0, #0
 8004c7e:	d100      	bne.n	8004c82 <_dtoa_r+0x3fa>
 8004c80:	e090      	b.n	8004da4 <_dtoa_r+0x51c>
 8004c82:	9b07      	ldr	r3, [sp, #28]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d100      	bne.n	8004c8a <_dtoa_r+0x402>
 8004c88:	e08c      	b.n	8004da4 <_dtoa_r+0x51c>
 8004c8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	dd46      	ble.n	8004d1e <_dtoa_r+0x496>
 8004c90:	9b02      	ldr	r3, [sp, #8]
 8004c92:	2200      	movs	r2, #0
 8004c94:	0020      	movs	r0, r4
 8004c96:	0029      	movs	r1, r5
 8004c98:	1e5e      	subs	r6, r3, #1
 8004c9a:	4ba2      	ldr	r3, [pc, #648]	; (8004f24 <_dtoa_r+0x69c>)
 8004c9c:	f7fc fb42 	bl	8001324 <__aeabi_dmul>
 8004ca0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004ca2:	9008      	str	r0, [sp, #32]
 8004ca4:	9109      	str	r1, [sp, #36]	; 0x24
 8004ca6:	3301      	adds	r3, #1
 8004ca8:	9310      	str	r3, [sp, #64]	; 0x40
 8004caa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004cac:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cae:	9c08      	ldr	r4, [sp, #32]
 8004cb0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004cb2:	9314      	str	r3, [sp, #80]	; 0x50
 8004cb4:	f7fd f988 	bl	8001fc8 <__aeabi_i2d>
 8004cb8:	0022      	movs	r2, r4
 8004cba:	002b      	movs	r3, r5
 8004cbc:	f7fc fb32 	bl	8001324 <__aeabi_dmul>
 8004cc0:	2200      	movs	r2, #0
 8004cc2:	4b99      	ldr	r3, [pc, #612]	; (8004f28 <_dtoa_r+0x6a0>)
 8004cc4:	f7fb fbf0 	bl	80004a8 <__aeabi_dadd>
 8004cc8:	9010      	str	r0, [sp, #64]	; 0x40
 8004cca:	9111      	str	r1, [sp, #68]	; 0x44
 8004ccc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004cce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004cd0:	9208      	str	r2, [sp, #32]
 8004cd2:	9309      	str	r3, [sp, #36]	; 0x24
 8004cd4:	4a95      	ldr	r2, [pc, #596]	; (8004f2c <_dtoa_r+0x6a4>)
 8004cd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004cd8:	4694      	mov	ip, r2
 8004cda:	4463      	add	r3, ip
 8004cdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8004cde:	9309      	str	r3, [sp, #36]	; 0x24
 8004ce0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d161      	bne.n	8004daa <_dtoa_r+0x522>
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	0020      	movs	r0, r4
 8004cea:	0029      	movs	r1, r5
 8004cec:	4b90      	ldr	r3, [pc, #576]	; (8004f30 <_dtoa_r+0x6a8>)
 8004cee:	f7fc fd85 	bl	80017fc <__aeabi_dsub>
 8004cf2:	9a08      	ldr	r2, [sp, #32]
 8004cf4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004cf6:	0004      	movs	r4, r0
 8004cf8:	000d      	movs	r5, r1
 8004cfa:	f7fb fbc1 	bl	8000480 <__aeabi_dcmpgt>
 8004cfe:	2800      	cmp	r0, #0
 8004d00:	d000      	beq.n	8004d04 <_dtoa_r+0x47c>
 8004d02:	e2af      	b.n	8005264 <_dtoa_r+0x9dc>
 8004d04:	488b      	ldr	r0, [pc, #556]	; (8004f34 <_dtoa_r+0x6ac>)
 8004d06:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004d08:	4684      	mov	ip, r0
 8004d0a:	4461      	add	r1, ip
 8004d0c:	000b      	movs	r3, r1
 8004d0e:	0020      	movs	r0, r4
 8004d10:	0029      	movs	r1, r5
 8004d12:	9a08      	ldr	r2, [sp, #32]
 8004d14:	f7fb fba0 	bl	8000458 <__aeabi_dcmplt>
 8004d18:	2800      	cmp	r0, #0
 8004d1a:	d000      	beq.n	8004d1e <_dtoa_r+0x496>
 8004d1c:	e29f      	b.n	800525e <_dtoa_r+0x9d6>
 8004d1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8004d22:	9308      	str	r3, [sp, #32]
 8004d24:	9409      	str	r4, [sp, #36]	; 0x24
 8004d26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	da00      	bge.n	8004d2e <_dtoa_r+0x4a6>
 8004d2c:	e172      	b.n	8005014 <_dtoa_r+0x78c>
 8004d2e:	9a02      	ldr	r2, [sp, #8]
 8004d30:	2a0e      	cmp	r2, #14
 8004d32:	dd00      	ble.n	8004d36 <_dtoa_r+0x4ae>
 8004d34:	e16e      	b.n	8005014 <_dtoa_r+0x78c>
 8004d36:	4b78      	ldr	r3, [pc, #480]	; (8004f18 <_dtoa_r+0x690>)
 8004d38:	00d2      	lsls	r2, r2, #3
 8004d3a:	189b      	adds	r3, r3, r2
 8004d3c:	685c      	ldr	r4, [r3, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	930a      	str	r3, [sp, #40]	; 0x28
 8004d42:	940b      	str	r4, [sp, #44]	; 0x2c
 8004d44:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004d46:	2b00      	cmp	r3, #0
 8004d48:	db00      	blt.n	8004d4c <_dtoa_r+0x4c4>
 8004d4a:	e0f7      	b.n	8004f3c <_dtoa_r+0x6b4>
 8004d4c:	9b07      	ldr	r3, [sp, #28]
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	dd00      	ble.n	8004d54 <_dtoa_r+0x4cc>
 8004d52:	e0f3      	b.n	8004f3c <_dtoa_r+0x6b4>
 8004d54:	d000      	beq.n	8004d58 <_dtoa_r+0x4d0>
 8004d56:	e282      	b.n	800525e <_dtoa_r+0x9d6>
 8004d58:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004d5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004d5c:	2200      	movs	r2, #0
 8004d5e:	4b74      	ldr	r3, [pc, #464]	; (8004f30 <_dtoa_r+0x6a8>)
 8004d60:	f7fc fae0 	bl	8001324 <__aeabi_dmul>
 8004d64:	9a08      	ldr	r2, [sp, #32]
 8004d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d68:	f7fb fb94 	bl	8000494 <__aeabi_dcmpge>
 8004d6c:	9e07      	ldr	r6, [sp, #28]
 8004d6e:	0035      	movs	r5, r6
 8004d70:	2800      	cmp	r0, #0
 8004d72:	d000      	beq.n	8004d76 <_dtoa_r+0x4ee>
 8004d74:	e259      	b.n	800522a <_dtoa_r+0x9a2>
 8004d76:	9b06      	ldr	r3, [sp, #24]
 8004d78:	9a06      	ldr	r2, [sp, #24]
 8004d7a:	3301      	adds	r3, #1
 8004d7c:	9308      	str	r3, [sp, #32]
 8004d7e:	2331      	movs	r3, #49	; 0x31
 8004d80:	7013      	strb	r3, [r2, #0]
 8004d82:	9b02      	ldr	r3, [sp, #8]
 8004d84:	3301      	adds	r3, #1
 8004d86:	9302      	str	r3, [sp, #8]
 8004d88:	e254      	b.n	8005234 <_dtoa_r+0x9ac>
 8004d8a:	4234      	tst	r4, r6
 8004d8c:	d007      	beq.n	8004d9e <_dtoa_r+0x516>
 8004d8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004d90:	3301      	adds	r3, #1
 8004d92:	9310      	str	r3, [sp, #64]	; 0x40
 8004d94:	682a      	ldr	r2, [r5, #0]
 8004d96:	686b      	ldr	r3, [r5, #4]
 8004d98:	f7fc fac4 	bl	8001324 <__aeabi_dmul>
 8004d9c:	0033      	movs	r3, r6
 8004d9e:	1064      	asrs	r4, r4, #1
 8004da0:	3508      	adds	r5, #8
 8004da2:	e75a      	b.n	8004c5a <_dtoa_r+0x3d2>
 8004da4:	9e02      	ldr	r6, [sp, #8]
 8004da6:	9b07      	ldr	r3, [sp, #28]
 8004da8:	e780      	b.n	8004cac <_dtoa_r+0x424>
 8004daa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004dac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004dae:	1e5a      	subs	r2, r3, #1
 8004db0:	4b59      	ldr	r3, [pc, #356]	; (8004f18 <_dtoa_r+0x690>)
 8004db2:	00d2      	lsls	r2, r2, #3
 8004db4:	189b      	adds	r3, r3, r2
 8004db6:	681a      	ldr	r2, [r3, #0]
 8004db8:	685b      	ldr	r3, [r3, #4]
 8004dba:	2900      	cmp	r1, #0
 8004dbc:	d051      	beq.n	8004e62 <_dtoa_r+0x5da>
 8004dbe:	2000      	movs	r0, #0
 8004dc0:	495d      	ldr	r1, [pc, #372]	; (8004f38 <_dtoa_r+0x6b0>)
 8004dc2:	f7fb fead 	bl	8000b20 <__aeabi_ddiv>
 8004dc6:	9a08      	ldr	r2, [sp, #32]
 8004dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004dca:	f7fc fd17 	bl	80017fc <__aeabi_dsub>
 8004dce:	9a06      	ldr	r2, [sp, #24]
 8004dd0:	9b06      	ldr	r3, [sp, #24]
 8004dd2:	4694      	mov	ip, r2
 8004dd4:	9317      	str	r3, [sp, #92]	; 0x5c
 8004dd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004dd8:	9010      	str	r0, [sp, #64]	; 0x40
 8004dda:	9111      	str	r1, [sp, #68]	; 0x44
 8004ddc:	4463      	add	r3, ip
 8004dde:	9319      	str	r3, [sp, #100]	; 0x64
 8004de0:	0029      	movs	r1, r5
 8004de2:	0020      	movs	r0, r4
 8004de4:	f7fd f8ba 	bl	8001f5c <__aeabi_d2iz>
 8004de8:	9014      	str	r0, [sp, #80]	; 0x50
 8004dea:	f7fd f8ed 	bl	8001fc8 <__aeabi_i2d>
 8004dee:	0002      	movs	r2, r0
 8004df0:	000b      	movs	r3, r1
 8004df2:	0020      	movs	r0, r4
 8004df4:	0029      	movs	r1, r5
 8004df6:	f7fc fd01 	bl	80017fc <__aeabi_dsub>
 8004dfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004dfc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004dfe:	3301      	adds	r3, #1
 8004e00:	9308      	str	r3, [sp, #32]
 8004e02:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004e04:	0004      	movs	r4, r0
 8004e06:	3330      	adds	r3, #48	; 0x30
 8004e08:	7013      	strb	r3, [r2, #0]
 8004e0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004e0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e0e:	000d      	movs	r5, r1
 8004e10:	f7fb fb22 	bl	8000458 <__aeabi_dcmplt>
 8004e14:	2800      	cmp	r0, #0
 8004e16:	d175      	bne.n	8004f04 <_dtoa_r+0x67c>
 8004e18:	0022      	movs	r2, r4
 8004e1a:	002b      	movs	r3, r5
 8004e1c:	2000      	movs	r0, #0
 8004e1e:	4940      	ldr	r1, [pc, #256]	; (8004f20 <_dtoa_r+0x698>)
 8004e20:	f7fc fcec 	bl	80017fc <__aeabi_dsub>
 8004e24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004e26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e28:	f7fb fb16 	bl	8000458 <__aeabi_dcmplt>
 8004e2c:	2800      	cmp	r0, #0
 8004e2e:	d000      	beq.n	8004e32 <_dtoa_r+0x5aa>
 8004e30:	e0d2      	b.n	8004fd8 <_dtoa_r+0x750>
 8004e32:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004e34:	9a08      	ldr	r2, [sp, #32]
 8004e36:	4293      	cmp	r3, r2
 8004e38:	d100      	bne.n	8004e3c <_dtoa_r+0x5b4>
 8004e3a:	e770      	b.n	8004d1e <_dtoa_r+0x496>
 8004e3c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004e3e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004e40:	2200      	movs	r2, #0
 8004e42:	4b38      	ldr	r3, [pc, #224]	; (8004f24 <_dtoa_r+0x69c>)
 8004e44:	f7fc fa6e 	bl	8001324 <__aeabi_dmul>
 8004e48:	4b36      	ldr	r3, [pc, #216]	; (8004f24 <_dtoa_r+0x69c>)
 8004e4a:	9010      	str	r0, [sp, #64]	; 0x40
 8004e4c:	9111      	str	r1, [sp, #68]	; 0x44
 8004e4e:	2200      	movs	r2, #0
 8004e50:	0020      	movs	r0, r4
 8004e52:	0029      	movs	r1, r5
 8004e54:	f7fc fa66 	bl	8001324 <__aeabi_dmul>
 8004e58:	9b08      	ldr	r3, [sp, #32]
 8004e5a:	0004      	movs	r4, r0
 8004e5c:	000d      	movs	r5, r1
 8004e5e:	9317      	str	r3, [sp, #92]	; 0x5c
 8004e60:	e7be      	b.n	8004de0 <_dtoa_r+0x558>
 8004e62:	9808      	ldr	r0, [sp, #32]
 8004e64:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004e66:	f7fc fa5d 	bl	8001324 <__aeabi_dmul>
 8004e6a:	9a06      	ldr	r2, [sp, #24]
 8004e6c:	9b06      	ldr	r3, [sp, #24]
 8004e6e:	4694      	mov	ip, r2
 8004e70:	9308      	str	r3, [sp, #32]
 8004e72:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004e74:	9010      	str	r0, [sp, #64]	; 0x40
 8004e76:	9111      	str	r1, [sp, #68]	; 0x44
 8004e78:	4463      	add	r3, ip
 8004e7a:	9319      	str	r3, [sp, #100]	; 0x64
 8004e7c:	0029      	movs	r1, r5
 8004e7e:	0020      	movs	r0, r4
 8004e80:	f7fd f86c 	bl	8001f5c <__aeabi_d2iz>
 8004e84:	9017      	str	r0, [sp, #92]	; 0x5c
 8004e86:	f7fd f89f 	bl	8001fc8 <__aeabi_i2d>
 8004e8a:	0002      	movs	r2, r0
 8004e8c:	000b      	movs	r3, r1
 8004e8e:	0020      	movs	r0, r4
 8004e90:	0029      	movs	r1, r5
 8004e92:	f7fc fcb3 	bl	80017fc <__aeabi_dsub>
 8004e96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004e98:	9a08      	ldr	r2, [sp, #32]
 8004e9a:	3330      	adds	r3, #48	; 0x30
 8004e9c:	7013      	strb	r3, [r2, #0]
 8004e9e:	0013      	movs	r3, r2
 8004ea0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004ea2:	3301      	adds	r3, #1
 8004ea4:	0004      	movs	r4, r0
 8004ea6:	000d      	movs	r5, r1
 8004ea8:	9308      	str	r3, [sp, #32]
 8004eaa:	4293      	cmp	r3, r2
 8004eac:	d12c      	bne.n	8004f08 <_dtoa_r+0x680>
 8004eae:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004eb0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004eb2:	9a06      	ldr	r2, [sp, #24]
 8004eb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004eb6:	4694      	mov	ip, r2
 8004eb8:	4463      	add	r3, ip
 8004eba:	2200      	movs	r2, #0
 8004ebc:	9308      	str	r3, [sp, #32]
 8004ebe:	4b1e      	ldr	r3, [pc, #120]	; (8004f38 <_dtoa_r+0x6b0>)
 8004ec0:	f7fb faf2 	bl	80004a8 <__aeabi_dadd>
 8004ec4:	0002      	movs	r2, r0
 8004ec6:	000b      	movs	r3, r1
 8004ec8:	0020      	movs	r0, r4
 8004eca:	0029      	movs	r1, r5
 8004ecc:	f7fb fad8 	bl	8000480 <__aeabi_dcmpgt>
 8004ed0:	2800      	cmp	r0, #0
 8004ed2:	d000      	beq.n	8004ed6 <_dtoa_r+0x64e>
 8004ed4:	e080      	b.n	8004fd8 <_dtoa_r+0x750>
 8004ed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004ed8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004eda:	2000      	movs	r0, #0
 8004edc:	4916      	ldr	r1, [pc, #88]	; (8004f38 <_dtoa_r+0x6b0>)
 8004ede:	f7fc fc8d 	bl	80017fc <__aeabi_dsub>
 8004ee2:	0002      	movs	r2, r0
 8004ee4:	000b      	movs	r3, r1
 8004ee6:	0020      	movs	r0, r4
 8004ee8:	0029      	movs	r1, r5
 8004eea:	f7fb fab5 	bl	8000458 <__aeabi_dcmplt>
 8004eee:	2800      	cmp	r0, #0
 8004ef0:	d100      	bne.n	8004ef4 <_dtoa_r+0x66c>
 8004ef2:	e714      	b.n	8004d1e <_dtoa_r+0x496>
 8004ef4:	9b08      	ldr	r3, [sp, #32]
 8004ef6:	001a      	movs	r2, r3
 8004ef8:	3a01      	subs	r2, #1
 8004efa:	9208      	str	r2, [sp, #32]
 8004efc:	7812      	ldrb	r2, [r2, #0]
 8004efe:	2a30      	cmp	r2, #48	; 0x30
 8004f00:	d0f8      	beq.n	8004ef4 <_dtoa_r+0x66c>
 8004f02:	9308      	str	r3, [sp, #32]
 8004f04:	9602      	str	r6, [sp, #8]
 8004f06:	e055      	b.n	8004fb4 <_dtoa_r+0x72c>
 8004f08:	2200      	movs	r2, #0
 8004f0a:	4b06      	ldr	r3, [pc, #24]	; (8004f24 <_dtoa_r+0x69c>)
 8004f0c:	f7fc fa0a 	bl	8001324 <__aeabi_dmul>
 8004f10:	0004      	movs	r4, r0
 8004f12:	000d      	movs	r5, r1
 8004f14:	e7b2      	b.n	8004e7c <_dtoa_r+0x5f4>
 8004f16:	46c0      	nop			; (mov r8, r8)
 8004f18:	08006ff8 	.word	0x08006ff8
 8004f1c:	08006fd0 	.word	0x08006fd0
 8004f20:	3ff00000 	.word	0x3ff00000
 8004f24:	40240000 	.word	0x40240000
 8004f28:	401c0000 	.word	0x401c0000
 8004f2c:	fcc00000 	.word	0xfcc00000
 8004f30:	40140000 	.word	0x40140000
 8004f34:	7cc00000 	.word	0x7cc00000
 8004f38:	3fe00000 	.word	0x3fe00000
 8004f3c:	9b07      	ldr	r3, [sp, #28]
 8004f3e:	9e06      	ldr	r6, [sp, #24]
 8004f40:	3b01      	subs	r3, #1
 8004f42:	199b      	adds	r3, r3, r6
 8004f44:	930c      	str	r3, [sp, #48]	; 0x30
 8004f46:	9c08      	ldr	r4, [sp, #32]
 8004f48:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f4e:	0020      	movs	r0, r4
 8004f50:	0029      	movs	r1, r5
 8004f52:	f7fb fde5 	bl	8000b20 <__aeabi_ddiv>
 8004f56:	f7fd f801 	bl	8001f5c <__aeabi_d2iz>
 8004f5a:	9007      	str	r0, [sp, #28]
 8004f5c:	f7fd f834 	bl	8001fc8 <__aeabi_i2d>
 8004f60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f64:	f7fc f9de 	bl	8001324 <__aeabi_dmul>
 8004f68:	0002      	movs	r2, r0
 8004f6a:	000b      	movs	r3, r1
 8004f6c:	0020      	movs	r0, r4
 8004f6e:	0029      	movs	r1, r5
 8004f70:	f7fc fc44 	bl	80017fc <__aeabi_dsub>
 8004f74:	0033      	movs	r3, r6
 8004f76:	9a07      	ldr	r2, [sp, #28]
 8004f78:	3601      	adds	r6, #1
 8004f7a:	3230      	adds	r2, #48	; 0x30
 8004f7c:	701a      	strb	r2, [r3, #0]
 8004f7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004f80:	9608      	str	r6, [sp, #32]
 8004f82:	429a      	cmp	r2, r3
 8004f84:	d139      	bne.n	8004ffa <_dtoa_r+0x772>
 8004f86:	0002      	movs	r2, r0
 8004f88:	000b      	movs	r3, r1
 8004f8a:	f7fb fa8d 	bl	80004a8 <__aeabi_dadd>
 8004f8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f92:	0004      	movs	r4, r0
 8004f94:	000d      	movs	r5, r1
 8004f96:	f7fb fa73 	bl	8000480 <__aeabi_dcmpgt>
 8004f9a:	2800      	cmp	r0, #0
 8004f9c:	d11b      	bne.n	8004fd6 <_dtoa_r+0x74e>
 8004f9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004fa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004fa2:	0020      	movs	r0, r4
 8004fa4:	0029      	movs	r1, r5
 8004fa6:	f7fb fa51 	bl	800044c <__aeabi_dcmpeq>
 8004faa:	2800      	cmp	r0, #0
 8004fac:	d002      	beq.n	8004fb4 <_dtoa_r+0x72c>
 8004fae:	9b07      	ldr	r3, [sp, #28]
 8004fb0:	07db      	lsls	r3, r3, #31
 8004fb2:	d410      	bmi.n	8004fd6 <_dtoa_r+0x74e>
 8004fb4:	0038      	movs	r0, r7
 8004fb6:	9905      	ldr	r1, [sp, #20]
 8004fb8:	f000 fae6 	bl	8005588 <_Bfree>
 8004fbc:	2300      	movs	r3, #0
 8004fbe:	9a08      	ldr	r2, [sp, #32]
 8004fc0:	9802      	ldr	r0, [sp, #8]
 8004fc2:	7013      	strb	r3, [r2, #0]
 8004fc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004fc6:	3001      	adds	r0, #1
 8004fc8:	6018      	str	r0, [r3, #0]
 8004fca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	d100      	bne.n	8004fd2 <_dtoa_r+0x74a>
 8004fd0:	e4a6      	b.n	8004920 <_dtoa_r+0x98>
 8004fd2:	601a      	str	r2, [r3, #0]
 8004fd4:	e4a4      	b.n	8004920 <_dtoa_r+0x98>
 8004fd6:	9e02      	ldr	r6, [sp, #8]
 8004fd8:	9b08      	ldr	r3, [sp, #32]
 8004fda:	9308      	str	r3, [sp, #32]
 8004fdc:	3b01      	subs	r3, #1
 8004fde:	781a      	ldrb	r2, [r3, #0]
 8004fe0:	2a39      	cmp	r2, #57	; 0x39
 8004fe2:	d106      	bne.n	8004ff2 <_dtoa_r+0x76a>
 8004fe4:	9a06      	ldr	r2, [sp, #24]
 8004fe6:	429a      	cmp	r2, r3
 8004fe8:	d1f7      	bne.n	8004fda <_dtoa_r+0x752>
 8004fea:	2230      	movs	r2, #48	; 0x30
 8004fec:	9906      	ldr	r1, [sp, #24]
 8004fee:	3601      	adds	r6, #1
 8004ff0:	700a      	strb	r2, [r1, #0]
 8004ff2:	781a      	ldrb	r2, [r3, #0]
 8004ff4:	3201      	adds	r2, #1
 8004ff6:	701a      	strb	r2, [r3, #0]
 8004ff8:	e784      	b.n	8004f04 <_dtoa_r+0x67c>
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	4baa      	ldr	r3, [pc, #680]	; (80052a8 <_dtoa_r+0xa20>)
 8004ffe:	f7fc f991 	bl	8001324 <__aeabi_dmul>
 8005002:	2200      	movs	r2, #0
 8005004:	2300      	movs	r3, #0
 8005006:	0004      	movs	r4, r0
 8005008:	000d      	movs	r5, r1
 800500a:	f7fb fa1f 	bl	800044c <__aeabi_dcmpeq>
 800500e:	2800      	cmp	r0, #0
 8005010:	d09b      	beq.n	8004f4a <_dtoa_r+0x6c2>
 8005012:	e7cf      	b.n	8004fb4 <_dtoa_r+0x72c>
 8005014:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005016:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005018:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800501a:	2d00      	cmp	r5, #0
 800501c:	d012      	beq.n	8005044 <_dtoa_r+0x7bc>
 800501e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005020:	2a01      	cmp	r2, #1
 8005022:	dc66      	bgt.n	80050f2 <_dtoa_r+0x86a>
 8005024:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005026:	2a00      	cmp	r2, #0
 8005028:	d05d      	beq.n	80050e6 <_dtoa_r+0x85e>
 800502a:	4aa0      	ldr	r2, [pc, #640]	; (80052ac <_dtoa_r+0xa24>)
 800502c:	189b      	adds	r3, r3, r2
 800502e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005030:	2101      	movs	r1, #1
 8005032:	18d2      	adds	r2, r2, r3
 8005034:	920a      	str	r2, [sp, #40]	; 0x28
 8005036:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005038:	0038      	movs	r0, r7
 800503a:	18d3      	adds	r3, r2, r3
 800503c:	930d      	str	r3, [sp, #52]	; 0x34
 800503e:	f000 fb53 	bl	80056e8 <__i2b>
 8005042:	0005      	movs	r5, r0
 8005044:	2c00      	cmp	r4, #0
 8005046:	dd0e      	ble.n	8005066 <_dtoa_r+0x7de>
 8005048:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800504a:	2b00      	cmp	r3, #0
 800504c:	dd0b      	ble.n	8005066 <_dtoa_r+0x7de>
 800504e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005050:	0023      	movs	r3, r4
 8005052:	4294      	cmp	r4, r2
 8005054:	dd00      	ble.n	8005058 <_dtoa_r+0x7d0>
 8005056:	0013      	movs	r3, r2
 8005058:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800505a:	1ae4      	subs	r4, r4, r3
 800505c:	1ad2      	subs	r2, r2, r3
 800505e:	920a      	str	r2, [sp, #40]	; 0x28
 8005060:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005062:	1ad3      	subs	r3, r2, r3
 8005064:	930d      	str	r3, [sp, #52]	; 0x34
 8005066:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005068:	2b00      	cmp	r3, #0
 800506a:	d01f      	beq.n	80050ac <_dtoa_r+0x824>
 800506c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800506e:	2b00      	cmp	r3, #0
 8005070:	d054      	beq.n	800511c <_dtoa_r+0x894>
 8005072:	2e00      	cmp	r6, #0
 8005074:	dd11      	ble.n	800509a <_dtoa_r+0x812>
 8005076:	0029      	movs	r1, r5
 8005078:	0032      	movs	r2, r6
 800507a:	0038      	movs	r0, r7
 800507c:	f000 fbfa 	bl	8005874 <__pow5mult>
 8005080:	9a05      	ldr	r2, [sp, #20]
 8005082:	0001      	movs	r1, r0
 8005084:	0005      	movs	r5, r0
 8005086:	0038      	movs	r0, r7
 8005088:	f000 fb44 	bl	8005714 <__multiply>
 800508c:	9905      	ldr	r1, [sp, #20]
 800508e:	9014      	str	r0, [sp, #80]	; 0x50
 8005090:	0038      	movs	r0, r7
 8005092:	f000 fa79 	bl	8005588 <_Bfree>
 8005096:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005098:	9305      	str	r3, [sp, #20]
 800509a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800509c:	1b9a      	subs	r2, r3, r6
 800509e:	42b3      	cmp	r3, r6
 80050a0:	d004      	beq.n	80050ac <_dtoa_r+0x824>
 80050a2:	0038      	movs	r0, r7
 80050a4:	9905      	ldr	r1, [sp, #20]
 80050a6:	f000 fbe5 	bl	8005874 <__pow5mult>
 80050aa:	9005      	str	r0, [sp, #20]
 80050ac:	2101      	movs	r1, #1
 80050ae:	0038      	movs	r0, r7
 80050b0:	f000 fb1a 	bl	80056e8 <__i2b>
 80050b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80050b6:	0006      	movs	r6, r0
 80050b8:	2b00      	cmp	r3, #0
 80050ba:	dd31      	ble.n	8005120 <_dtoa_r+0x898>
 80050bc:	001a      	movs	r2, r3
 80050be:	0001      	movs	r1, r0
 80050c0:	0038      	movs	r0, r7
 80050c2:	f000 fbd7 	bl	8005874 <__pow5mult>
 80050c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80050c8:	0006      	movs	r6, r0
 80050ca:	2b01      	cmp	r3, #1
 80050cc:	dd2d      	ble.n	800512a <_dtoa_r+0x8a2>
 80050ce:	2300      	movs	r3, #0
 80050d0:	930e      	str	r3, [sp, #56]	; 0x38
 80050d2:	6933      	ldr	r3, [r6, #16]
 80050d4:	3303      	adds	r3, #3
 80050d6:	009b      	lsls	r3, r3, #2
 80050d8:	18f3      	adds	r3, r6, r3
 80050da:	6858      	ldr	r0, [r3, #4]
 80050dc:	f000 fabc 	bl	8005658 <__hi0bits>
 80050e0:	2320      	movs	r3, #32
 80050e2:	1a18      	subs	r0, r3, r0
 80050e4:	e039      	b.n	800515a <_dtoa_r+0x8d2>
 80050e6:	2336      	movs	r3, #54	; 0x36
 80050e8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80050ea:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80050ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80050ee:	1a9b      	subs	r3, r3, r2
 80050f0:	e79d      	b.n	800502e <_dtoa_r+0x7a6>
 80050f2:	9b07      	ldr	r3, [sp, #28]
 80050f4:	1e5e      	subs	r6, r3, #1
 80050f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80050f8:	42b3      	cmp	r3, r6
 80050fa:	db07      	blt.n	800510c <_dtoa_r+0x884>
 80050fc:	1b9e      	subs	r6, r3, r6
 80050fe:	9b07      	ldr	r3, [sp, #28]
 8005100:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005102:	2b00      	cmp	r3, #0
 8005104:	da93      	bge.n	800502e <_dtoa_r+0x7a6>
 8005106:	1ae4      	subs	r4, r4, r3
 8005108:	2300      	movs	r3, #0
 800510a:	e790      	b.n	800502e <_dtoa_r+0x7a6>
 800510c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800510e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005110:	1af3      	subs	r3, r6, r3
 8005112:	18d3      	adds	r3, r2, r3
 8005114:	960e      	str	r6, [sp, #56]	; 0x38
 8005116:	9315      	str	r3, [sp, #84]	; 0x54
 8005118:	2600      	movs	r6, #0
 800511a:	e7f0      	b.n	80050fe <_dtoa_r+0x876>
 800511c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800511e:	e7c0      	b.n	80050a2 <_dtoa_r+0x81a>
 8005120:	2300      	movs	r3, #0
 8005122:	930e      	str	r3, [sp, #56]	; 0x38
 8005124:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005126:	2b01      	cmp	r3, #1
 8005128:	dc13      	bgt.n	8005152 <_dtoa_r+0x8ca>
 800512a:	2300      	movs	r3, #0
 800512c:	930e      	str	r3, [sp, #56]	; 0x38
 800512e:	9b08      	ldr	r3, [sp, #32]
 8005130:	2b00      	cmp	r3, #0
 8005132:	d10e      	bne.n	8005152 <_dtoa_r+0x8ca>
 8005134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005136:	031b      	lsls	r3, r3, #12
 8005138:	d10b      	bne.n	8005152 <_dtoa_r+0x8ca>
 800513a:	4b5d      	ldr	r3, [pc, #372]	; (80052b0 <_dtoa_r+0xa28>)
 800513c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800513e:	4213      	tst	r3, r2
 8005140:	d007      	beq.n	8005152 <_dtoa_r+0x8ca>
 8005142:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005144:	3301      	adds	r3, #1
 8005146:	930a      	str	r3, [sp, #40]	; 0x28
 8005148:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800514a:	3301      	adds	r3, #1
 800514c:	930d      	str	r3, [sp, #52]	; 0x34
 800514e:	2301      	movs	r3, #1
 8005150:	930e      	str	r3, [sp, #56]	; 0x38
 8005152:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005154:	2001      	movs	r0, #1
 8005156:	2b00      	cmp	r3, #0
 8005158:	d1bb      	bne.n	80050d2 <_dtoa_r+0x84a>
 800515a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800515c:	221f      	movs	r2, #31
 800515e:	1818      	adds	r0, r3, r0
 8005160:	0003      	movs	r3, r0
 8005162:	4013      	ands	r3, r2
 8005164:	4210      	tst	r0, r2
 8005166:	d046      	beq.n	80051f6 <_dtoa_r+0x96e>
 8005168:	3201      	adds	r2, #1
 800516a:	1ad2      	subs	r2, r2, r3
 800516c:	2a04      	cmp	r2, #4
 800516e:	dd3f      	ble.n	80051f0 <_dtoa_r+0x968>
 8005170:	221c      	movs	r2, #28
 8005172:	1ad3      	subs	r3, r2, r3
 8005174:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005176:	18e4      	adds	r4, r4, r3
 8005178:	18d2      	adds	r2, r2, r3
 800517a:	920a      	str	r2, [sp, #40]	; 0x28
 800517c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800517e:	18d3      	adds	r3, r2, r3
 8005180:	930d      	str	r3, [sp, #52]	; 0x34
 8005182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005184:	2b00      	cmp	r3, #0
 8005186:	dd05      	ble.n	8005194 <_dtoa_r+0x90c>
 8005188:	001a      	movs	r2, r3
 800518a:	0038      	movs	r0, r7
 800518c:	9905      	ldr	r1, [sp, #20]
 800518e:	f000 fbcd 	bl	800592c <__lshift>
 8005192:	9005      	str	r0, [sp, #20]
 8005194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005196:	2b00      	cmp	r3, #0
 8005198:	dd05      	ble.n	80051a6 <_dtoa_r+0x91e>
 800519a:	0031      	movs	r1, r6
 800519c:	001a      	movs	r2, r3
 800519e:	0038      	movs	r0, r7
 80051a0:	f000 fbc4 	bl	800592c <__lshift>
 80051a4:	0006      	movs	r6, r0
 80051a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d026      	beq.n	80051fa <_dtoa_r+0x972>
 80051ac:	0031      	movs	r1, r6
 80051ae:	9805      	ldr	r0, [sp, #20]
 80051b0:	f000 fc2a 	bl	8005a08 <__mcmp>
 80051b4:	2800      	cmp	r0, #0
 80051b6:	da20      	bge.n	80051fa <_dtoa_r+0x972>
 80051b8:	9b02      	ldr	r3, [sp, #8]
 80051ba:	220a      	movs	r2, #10
 80051bc:	3b01      	subs	r3, #1
 80051be:	9302      	str	r3, [sp, #8]
 80051c0:	0038      	movs	r0, r7
 80051c2:	2300      	movs	r3, #0
 80051c4:	9905      	ldr	r1, [sp, #20]
 80051c6:	f000 fa03 	bl	80055d0 <__multadd>
 80051ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80051cc:	9005      	str	r0, [sp, #20]
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d100      	bne.n	80051d4 <_dtoa_r+0x94c>
 80051d2:	e166      	b.n	80054a2 <_dtoa_r+0xc1a>
 80051d4:	2300      	movs	r3, #0
 80051d6:	0029      	movs	r1, r5
 80051d8:	220a      	movs	r2, #10
 80051da:	0038      	movs	r0, r7
 80051dc:	f000 f9f8 	bl	80055d0 <__multadd>
 80051e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80051e2:	0005      	movs	r5, r0
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	dc47      	bgt.n	8005278 <_dtoa_r+0x9f0>
 80051e8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80051ea:	2b02      	cmp	r3, #2
 80051ec:	dc0d      	bgt.n	800520a <_dtoa_r+0x982>
 80051ee:	e043      	b.n	8005278 <_dtoa_r+0x9f0>
 80051f0:	2a04      	cmp	r2, #4
 80051f2:	d0c6      	beq.n	8005182 <_dtoa_r+0x8fa>
 80051f4:	0013      	movs	r3, r2
 80051f6:	331c      	adds	r3, #28
 80051f8:	e7bc      	b.n	8005174 <_dtoa_r+0x8ec>
 80051fa:	9b07      	ldr	r3, [sp, #28]
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	dc35      	bgt.n	800526c <_dtoa_r+0x9e4>
 8005200:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005202:	2b02      	cmp	r3, #2
 8005204:	dd32      	ble.n	800526c <_dtoa_r+0x9e4>
 8005206:	9b07      	ldr	r3, [sp, #28]
 8005208:	930c      	str	r3, [sp, #48]	; 0x30
 800520a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800520c:	2b00      	cmp	r3, #0
 800520e:	d10c      	bne.n	800522a <_dtoa_r+0x9a2>
 8005210:	0031      	movs	r1, r6
 8005212:	2205      	movs	r2, #5
 8005214:	0038      	movs	r0, r7
 8005216:	f000 f9db 	bl	80055d0 <__multadd>
 800521a:	0006      	movs	r6, r0
 800521c:	0001      	movs	r1, r0
 800521e:	9805      	ldr	r0, [sp, #20]
 8005220:	f000 fbf2 	bl	8005a08 <__mcmp>
 8005224:	2800      	cmp	r0, #0
 8005226:	dd00      	ble.n	800522a <_dtoa_r+0x9a2>
 8005228:	e5a5      	b.n	8004d76 <_dtoa_r+0x4ee>
 800522a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800522c:	43db      	mvns	r3, r3
 800522e:	9302      	str	r3, [sp, #8]
 8005230:	9b06      	ldr	r3, [sp, #24]
 8005232:	9308      	str	r3, [sp, #32]
 8005234:	2400      	movs	r4, #0
 8005236:	0031      	movs	r1, r6
 8005238:	0038      	movs	r0, r7
 800523a:	f000 f9a5 	bl	8005588 <_Bfree>
 800523e:	2d00      	cmp	r5, #0
 8005240:	d100      	bne.n	8005244 <_dtoa_r+0x9bc>
 8005242:	e6b7      	b.n	8004fb4 <_dtoa_r+0x72c>
 8005244:	2c00      	cmp	r4, #0
 8005246:	d005      	beq.n	8005254 <_dtoa_r+0x9cc>
 8005248:	42ac      	cmp	r4, r5
 800524a:	d003      	beq.n	8005254 <_dtoa_r+0x9cc>
 800524c:	0021      	movs	r1, r4
 800524e:	0038      	movs	r0, r7
 8005250:	f000 f99a 	bl	8005588 <_Bfree>
 8005254:	0029      	movs	r1, r5
 8005256:	0038      	movs	r0, r7
 8005258:	f000 f996 	bl	8005588 <_Bfree>
 800525c:	e6aa      	b.n	8004fb4 <_dtoa_r+0x72c>
 800525e:	2600      	movs	r6, #0
 8005260:	0035      	movs	r5, r6
 8005262:	e7e2      	b.n	800522a <_dtoa_r+0x9a2>
 8005264:	9602      	str	r6, [sp, #8]
 8005266:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8005268:	0035      	movs	r5, r6
 800526a:	e584      	b.n	8004d76 <_dtoa_r+0x4ee>
 800526c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800526e:	2b00      	cmp	r3, #0
 8005270:	d100      	bne.n	8005274 <_dtoa_r+0x9ec>
 8005272:	e0ce      	b.n	8005412 <_dtoa_r+0xb8a>
 8005274:	9b07      	ldr	r3, [sp, #28]
 8005276:	930c      	str	r3, [sp, #48]	; 0x30
 8005278:	2c00      	cmp	r4, #0
 800527a:	dd05      	ble.n	8005288 <_dtoa_r+0xa00>
 800527c:	0029      	movs	r1, r5
 800527e:	0022      	movs	r2, r4
 8005280:	0038      	movs	r0, r7
 8005282:	f000 fb53 	bl	800592c <__lshift>
 8005286:	0005      	movs	r5, r0
 8005288:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800528a:	0028      	movs	r0, r5
 800528c:	2b00      	cmp	r3, #0
 800528e:	d022      	beq.n	80052d6 <_dtoa_r+0xa4e>
 8005290:	0038      	movs	r0, r7
 8005292:	6869      	ldr	r1, [r5, #4]
 8005294:	f000 f934 	bl	8005500 <_Balloc>
 8005298:	1e04      	subs	r4, r0, #0
 800529a:	d10f      	bne.n	80052bc <_dtoa_r+0xa34>
 800529c:	0002      	movs	r2, r0
 800529e:	4b05      	ldr	r3, [pc, #20]	; (80052b4 <_dtoa_r+0xa2c>)
 80052a0:	4905      	ldr	r1, [pc, #20]	; (80052b8 <_dtoa_r+0xa30>)
 80052a2:	f7ff fb06 	bl	80048b2 <_dtoa_r+0x2a>
 80052a6:	46c0      	nop			; (mov r8, r8)
 80052a8:	40240000 	.word	0x40240000
 80052ac:	00000433 	.word	0x00000433
 80052b0:	7ff00000 	.word	0x7ff00000
 80052b4:	08006f63 	.word	0x08006f63
 80052b8:	000002ea 	.word	0x000002ea
 80052bc:	0029      	movs	r1, r5
 80052be:	692b      	ldr	r3, [r5, #16]
 80052c0:	310c      	adds	r1, #12
 80052c2:	1c9a      	adds	r2, r3, #2
 80052c4:	0092      	lsls	r2, r2, #2
 80052c6:	300c      	adds	r0, #12
 80052c8:	f000 f911 	bl	80054ee <memcpy>
 80052cc:	2201      	movs	r2, #1
 80052ce:	0021      	movs	r1, r4
 80052d0:	0038      	movs	r0, r7
 80052d2:	f000 fb2b 	bl	800592c <__lshift>
 80052d6:	9b06      	ldr	r3, [sp, #24]
 80052d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80052da:	930a      	str	r3, [sp, #40]	; 0x28
 80052dc:	3b01      	subs	r3, #1
 80052de:	189b      	adds	r3, r3, r2
 80052e0:	2201      	movs	r2, #1
 80052e2:	002c      	movs	r4, r5
 80052e4:	0005      	movs	r5, r0
 80052e6:	9314      	str	r3, [sp, #80]	; 0x50
 80052e8:	9b08      	ldr	r3, [sp, #32]
 80052ea:	4013      	ands	r3, r2
 80052ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80052ee:	0031      	movs	r1, r6
 80052f0:	9805      	ldr	r0, [sp, #20]
 80052f2:	f7ff fa3d 	bl	8004770 <quorem>
 80052f6:	0003      	movs	r3, r0
 80052f8:	0021      	movs	r1, r4
 80052fa:	3330      	adds	r3, #48	; 0x30
 80052fc:	900d      	str	r0, [sp, #52]	; 0x34
 80052fe:	9805      	ldr	r0, [sp, #20]
 8005300:	9307      	str	r3, [sp, #28]
 8005302:	f000 fb81 	bl	8005a08 <__mcmp>
 8005306:	002a      	movs	r2, r5
 8005308:	900e      	str	r0, [sp, #56]	; 0x38
 800530a:	0031      	movs	r1, r6
 800530c:	0038      	movs	r0, r7
 800530e:	f000 fb97 	bl	8005a40 <__mdiff>
 8005312:	68c3      	ldr	r3, [r0, #12]
 8005314:	9008      	str	r0, [sp, #32]
 8005316:	9310      	str	r3, [sp, #64]	; 0x40
 8005318:	2301      	movs	r3, #1
 800531a:	930c      	str	r3, [sp, #48]	; 0x30
 800531c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800531e:	2b00      	cmp	r3, #0
 8005320:	d104      	bne.n	800532c <_dtoa_r+0xaa4>
 8005322:	0001      	movs	r1, r0
 8005324:	9805      	ldr	r0, [sp, #20]
 8005326:	f000 fb6f 	bl	8005a08 <__mcmp>
 800532a:	900c      	str	r0, [sp, #48]	; 0x30
 800532c:	0038      	movs	r0, r7
 800532e:	9908      	ldr	r1, [sp, #32]
 8005330:	f000 f92a 	bl	8005588 <_Bfree>
 8005334:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005336:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005338:	3301      	adds	r3, #1
 800533a:	9308      	str	r3, [sp, #32]
 800533c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800533e:	4313      	orrs	r3, r2
 8005340:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005342:	4313      	orrs	r3, r2
 8005344:	d10c      	bne.n	8005360 <_dtoa_r+0xad8>
 8005346:	9b07      	ldr	r3, [sp, #28]
 8005348:	2b39      	cmp	r3, #57	; 0x39
 800534a:	d026      	beq.n	800539a <_dtoa_r+0xb12>
 800534c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800534e:	2b00      	cmp	r3, #0
 8005350:	dd02      	ble.n	8005358 <_dtoa_r+0xad0>
 8005352:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005354:	3331      	adds	r3, #49	; 0x31
 8005356:	9307      	str	r3, [sp, #28]
 8005358:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800535a:	9a07      	ldr	r2, [sp, #28]
 800535c:	701a      	strb	r2, [r3, #0]
 800535e:	e76a      	b.n	8005236 <_dtoa_r+0x9ae>
 8005360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005362:	2b00      	cmp	r3, #0
 8005364:	db04      	blt.n	8005370 <_dtoa_r+0xae8>
 8005366:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005368:	4313      	orrs	r3, r2
 800536a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800536c:	4313      	orrs	r3, r2
 800536e:	d11f      	bne.n	80053b0 <_dtoa_r+0xb28>
 8005370:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005372:	2b00      	cmp	r3, #0
 8005374:	ddf0      	ble.n	8005358 <_dtoa_r+0xad0>
 8005376:	9905      	ldr	r1, [sp, #20]
 8005378:	2201      	movs	r2, #1
 800537a:	0038      	movs	r0, r7
 800537c:	f000 fad6 	bl	800592c <__lshift>
 8005380:	0031      	movs	r1, r6
 8005382:	9005      	str	r0, [sp, #20]
 8005384:	f000 fb40 	bl	8005a08 <__mcmp>
 8005388:	2800      	cmp	r0, #0
 800538a:	dc03      	bgt.n	8005394 <_dtoa_r+0xb0c>
 800538c:	d1e4      	bne.n	8005358 <_dtoa_r+0xad0>
 800538e:	9b07      	ldr	r3, [sp, #28]
 8005390:	07db      	lsls	r3, r3, #31
 8005392:	d5e1      	bpl.n	8005358 <_dtoa_r+0xad0>
 8005394:	9b07      	ldr	r3, [sp, #28]
 8005396:	2b39      	cmp	r3, #57	; 0x39
 8005398:	d1db      	bne.n	8005352 <_dtoa_r+0xaca>
 800539a:	2339      	movs	r3, #57	; 0x39
 800539c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800539e:	7013      	strb	r3, [r2, #0]
 80053a0:	9b08      	ldr	r3, [sp, #32]
 80053a2:	9308      	str	r3, [sp, #32]
 80053a4:	3b01      	subs	r3, #1
 80053a6:	781a      	ldrb	r2, [r3, #0]
 80053a8:	2a39      	cmp	r2, #57	; 0x39
 80053aa:	d068      	beq.n	800547e <_dtoa_r+0xbf6>
 80053ac:	3201      	adds	r2, #1
 80053ae:	e7d5      	b.n	800535c <_dtoa_r+0xad4>
 80053b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	dd07      	ble.n	80053c6 <_dtoa_r+0xb3e>
 80053b6:	9b07      	ldr	r3, [sp, #28]
 80053b8:	2b39      	cmp	r3, #57	; 0x39
 80053ba:	d0ee      	beq.n	800539a <_dtoa_r+0xb12>
 80053bc:	9b07      	ldr	r3, [sp, #28]
 80053be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80053c0:	3301      	adds	r3, #1
 80053c2:	7013      	strb	r3, [r2, #0]
 80053c4:	e737      	b.n	8005236 <_dtoa_r+0x9ae>
 80053c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053c8:	9a07      	ldr	r2, [sp, #28]
 80053ca:	701a      	strb	r2, [r3, #0]
 80053cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80053ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80053d0:	4293      	cmp	r3, r2
 80053d2:	d03e      	beq.n	8005452 <_dtoa_r+0xbca>
 80053d4:	2300      	movs	r3, #0
 80053d6:	220a      	movs	r2, #10
 80053d8:	9905      	ldr	r1, [sp, #20]
 80053da:	0038      	movs	r0, r7
 80053dc:	f000 f8f8 	bl	80055d0 <__multadd>
 80053e0:	2300      	movs	r3, #0
 80053e2:	9005      	str	r0, [sp, #20]
 80053e4:	220a      	movs	r2, #10
 80053e6:	0021      	movs	r1, r4
 80053e8:	0038      	movs	r0, r7
 80053ea:	42ac      	cmp	r4, r5
 80053ec:	d106      	bne.n	80053fc <_dtoa_r+0xb74>
 80053ee:	f000 f8ef 	bl	80055d0 <__multadd>
 80053f2:	0004      	movs	r4, r0
 80053f4:	0005      	movs	r5, r0
 80053f6:	9b08      	ldr	r3, [sp, #32]
 80053f8:	930a      	str	r3, [sp, #40]	; 0x28
 80053fa:	e778      	b.n	80052ee <_dtoa_r+0xa66>
 80053fc:	f000 f8e8 	bl	80055d0 <__multadd>
 8005400:	0029      	movs	r1, r5
 8005402:	0004      	movs	r4, r0
 8005404:	2300      	movs	r3, #0
 8005406:	220a      	movs	r2, #10
 8005408:	0038      	movs	r0, r7
 800540a:	f000 f8e1 	bl	80055d0 <__multadd>
 800540e:	0005      	movs	r5, r0
 8005410:	e7f1      	b.n	80053f6 <_dtoa_r+0xb6e>
 8005412:	9b07      	ldr	r3, [sp, #28]
 8005414:	930c      	str	r3, [sp, #48]	; 0x30
 8005416:	2400      	movs	r4, #0
 8005418:	0031      	movs	r1, r6
 800541a:	9805      	ldr	r0, [sp, #20]
 800541c:	f7ff f9a8 	bl	8004770 <quorem>
 8005420:	9b06      	ldr	r3, [sp, #24]
 8005422:	3030      	adds	r0, #48	; 0x30
 8005424:	5518      	strb	r0, [r3, r4]
 8005426:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005428:	3401      	adds	r4, #1
 800542a:	9007      	str	r0, [sp, #28]
 800542c:	42a3      	cmp	r3, r4
 800542e:	dd07      	ble.n	8005440 <_dtoa_r+0xbb8>
 8005430:	2300      	movs	r3, #0
 8005432:	220a      	movs	r2, #10
 8005434:	0038      	movs	r0, r7
 8005436:	9905      	ldr	r1, [sp, #20]
 8005438:	f000 f8ca 	bl	80055d0 <__multadd>
 800543c:	9005      	str	r0, [sp, #20]
 800543e:	e7eb      	b.n	8005418 <_dtoa_r+0xb90>
 8005440:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005442:	2001      	movs	r0, #1
 8005444:	2b00      	cmp	r3, #0
 8005446:	dd00      	ble.n	800544a <_dtoa_r+0xbc2>
 8005448:	0018      	movs	r0, r3
 800544a:	2400      	movs	r4, #0
 800544c:	9b06      	ldr	r3, [sp, #24]
 800544e:	181b      	adds	r3, r3, r0
 8005450:	9308      	str	r3, [sp, #32]
 8005452:	9905      	ldr	r1, [sp, #20]
 8005454:	2201      	movs	r2, #1
 8005456:	0038      	movs	r0, r7
 8005458:	f000 fa68 	bl	800592c <__lshift>
 800545c:	0031      	movs	r1, r6
 800545e:	9005      	str	r0, [sp, #20]
 8005460:	f000 fad2 	bl	8005a08 <__mcmp>
 8005464:	2800      	cmp	r0, #0
 8005466:	dc9b      	bgt.n	80053a0 <_dtoa_r+0xb18>
 8005468:	d102      	bne.n	8005470 <_dtoa_r+0xbe8>
 800546a:	9b07      	ldr	r3, [sp, #28]
 800546c:	07db      	lsls	r3, r3, #31
 800546e:	d497      	bmi.n	80053a0 <_dtoa_r+0xb18>
 8005470:	9b08      	ldr	r3, [sp, #32]
 8005472:	9308      	str	r3, [sp, #32]
 8005474:	3b01      	subs	r3, #1
 8005476:	781a      	ldrb	r2, [r3, #0]
 8005478:	2a30      	cmp	r2, #48	; 0x30
 800547a:	d0fa      	beq.n	8005472 <_dtoa_r+0xbea>
 800547c:	e6db      	b.n	8005236 <_dtoa_r+0x9ae>
 800547e:	9a06      	ldr	r2, [sp, #24]
 8005480:	429a      	cmp	r2, r3
 8005482:	d18e      	bne.n	80053a2 <_dtoa_r+0xb1a>
 8005484:	9b02      	ldr	r3, [sp, #8]
 8005486:	3301      	adds	r3, #1
 8005488:	9302      	str	r3, [sp, #8]
 800548a:	2331      	movs	r3, #49	; 0x31
 800548c:	e799      	b.n	80053c2 <_dtoa_r+0xb3a>
 800548e:	4b09      	ldr	r3, [pc, #36]	; (80054b4 <_dtoa_r+0xc2c>)
 8005490:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005492:	9306      	str	r3, [sp, #24]
 8005494:	4b08      	ldr	r3, [pc, #32]	; (80054b8 <_dtoa_r+0xc30>)
 8005496:	2a00      	cmp	r2, #0
 8005498:	d001      	beq.n	800549e <_dtoa_r+0xc16>
 800549a:	f7ff fa3f 	bl	800491c <_dtoa_r+0x94>
 800549e:	f7ff fa3f 	bl	8004920 <_dtoa_r+0x98>
 80054a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	dcb6      	bgt.n	8005416 <_dtoa_r+0xb8e>
 80054a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80054aa:	2b02      	cmp	r3, #2
 80054ac:	dd00      	ble.n	80054b0 <_dtoa_r+0xc28>
 80054ae:	e6ac      	b.n	800520a <_dtoa_r+0x982>
 80054b0:	e7b1      	b.n	8005416 <_dtoa_r+0xb8e>
 80054b2:	46c0      	nop			; (mov r8, r8)
 80054b4:	08006ee4 	.word	0x08006ee4
 80054b8:	08006eec 	.word	0x08006eec

080054bc <_localeconv_r>:
 80054bc:	4800      	ldr	r0, [pc, #0]	; (80054c0 <_localeconv_r+0x4>)
 80054be:	4770      	bx	lr
 80054c0:	200001a0 	.word	0x200001a0

080054c4 <malloc>:
 80054c4:	b510      	push	{r4, lr}
 80054c6:	4b03      	ldr	r3, [pc, #12]	; (80054d4 <malloc+0x10>)
 80054c8:	0001      	movs	r1, r0
 80054ca:	6818      	ldr	r0, [r3, #0]
 80054cc:	f000 fc4c 	bl	8005d68 <_malloc_r>
 80054d0:	bd10      	pop	{r4, pc}
 80054d2:	46c0      	nop			; (mov r8, r8)
 80054d4:	2000004c 	.word	0x2000004c

080054d8 <memchr>:
 80054d8:	b2c9      	uxtb	r1, r1
 80054da:	1882      	adds	r2, r0, r2
 80054dc:	4290      	cmp	r0, r2
 80054de:	d101      	bne.n	80054e4 <memchr+0xc>
 80054e0:	2000      	movs	r0, #0
 80054e2:	4770      	bx	lr
 80054e4:	7803      	ldrb	r3, [r0, #0]
 80054e6:	428b      	cmp	r3, r1
 80054e8:	d0fb      	beq.n	80054e2 <memchr+0xa>
 80054ea:	3001      	adds	r0, #1
 80054ec:	e7f6      	b.n	80054dc <memchr+0x4>

080054ee <memcpy>:
 80054ee:	2300      	movs	r3, #0
 80054f0:	b510      	push	{r4, lr}
 80054f2:	429a      	cmp	r2, r3
 80054f4:	d100      	bne.n	80054f8 <memcpy+0xa>
 80054f6:	bd10      	pop	{r4, pc}
 80054f8:	5ccc      	ldrb	r4, [r1, r3]
 80054fa:	54c4      	strb	r4, [r0, r3]
 80054fc:	3301      	adds	r3, #1
 80054fe:	e7f8      	b.n	80054f2 <memcpy+0x4>

08005500 <_Balloc>:
 8005500:	b570      	push	{r4, r5, r6, lr}
 8005502:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005504:	0006      	movs	r6, r0
 8005506:	000c      	movs	r4, r1
 8005508:	2d00      	cmp	r5, #0
 800550a:	d10e      	bne.n	800552a <_Balloc+0x2a>
 800550c:	2010      	movs	r0, #16
 800550e:	f7ff ffd9 	bl	80054c4 <malloc>
 8005512:	1e02      	subs	r2, r0, #0
 8005514:	6270      	str	r0, [r6, #36]	; 0x24
 8005516:	d104      	bne.n	8005522 <_Balloc+0x22>
 8005518:	2166      	movs	r1, #102	; 0x66
 800551a:	4b19      	ldr	r3, [pc, #100]	; (8005580 <_Balloc+0x80>)
 800551c:	4819      	ldr	r0, [pc, #100]	; (8005584 <_Balloc+0x84>)
 800551e:	f000 fe0d 	bl	800613c <__assert_func>
 8005522:	6045      	str	r5, [r0, #4]
 8005524:	6085      	str	r5, [r0, #8]
 8005526:	6005      	str	r5, [r0, #0]
 8005528:	60c5      	str	r5, [r0, #12]
 800552a:	6a75      	ldr	r5, [r6, #36]	; 0x24
 800552c:	68eb      	ldr	r3, [r5, #12]
 800552e:	2b00      	cmp	r3, #0
 8005530:	d013      	beq.n	800555a <_Balloc+0x5a>
 8005532:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005534:	00a2      	lsls	r2, r4, #2
 8005536:	68db      	ldr	r3, [r3, #12]
 8005538:	189b      	adds	r3, r3, r2
 800553a:	6818      	ldr	r0, [r3, #0]
 800553c:	2800      	cmp	r0, #0
 800553e:	d118      	bne.n	8005572 <_Balloc+0x72>
 8005540:	2101      	movs	r1, #1
 8005542:	000d      	movs	r5, r1
 8005544:	40a5      	lsls	r5, r4
 8005546:	1d6a      	adds	r2, r5, #5
 8005548:	0030      	movs	r0, r6
 800554a:	0092      	lsls	r2, r2, #2
 800554c:	f000 fb74 	bl	8005c38 <_calloc_r>
 8005550:	2800      	cmp	r0, #0
 8005552:	d00c      	beq.n	800556e <_Balloc+0x6e>
 8005554:	6044      	str	r4, [r0, #4]
 8005556:	6085      	str	r5, [r0, #8]
 8005558:	e00d      	b.n	8005576 <_Balloc+0x76>
 800555a:	2221      	movs	r2, #33	; 0x21
 800555c:	2104      	movs	r1, #4
 800555e:	0030      	movs	r0, r6
 8005560:	f000 fb6a 	bl	8005c38 <_calloc_r>
 8005564:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005566:	60e8      	str	r0, [r5, #12]
 8005568:	68db      	ldr	r3, [r3, #12]
 800556a:	2b00      	cmp	r3, #0
 800556c:	d1e1      	bne.n	8005532 <_Balloc+0x32>
 800556e:	2000      	movs	r0, #0
 8005570:	bd70      	pop	{r4, r5, r6, pc}
 8005572:	6802      	ldr	r2, [r0, #0]
 8005574:	601a      	str	r2, [r3, #0]
 8005576:	2300      	movs	r3, #0
 8005578:	6103      	str	r3, [r0, #16]
 800557a:	60c3      	str	r3, [r0, #12]
 800557c:	e7f8      	b.n	8005570 <_Balloc+0x70>
 800557e:	46c0      	nop			; (mov r8, r8)
 8005580:	08006ef1 	.word	0x08006ef1
 8005584:	08006f74 	.word	0x08006f74

08005588 <_Bfree>:
 8005588:	b570      	push	{r4, r5, r6, lr}
 800558a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800558c:	0005      	movs	r5, r0
 800558e:	000c      	movs	r4, r1
 8005590:	2e00      	cmp	r6, #0
 8005592:	d10e      	bne.n	80055b2 <_Bfree+0x2a>
 8005594:	2010      	movs	r0, #16
 8005596:	f7ff ff95 	bl	80054c4 <malloc>
 800559a:	1e02      	subs	r2, r0, #0
 800559c:	6268      	str	r0, [r5, #36]	; 0x24
 800559e:	d104      	bne.n	80055aa <_Bfree+0x22>
 80055a0:	218a      	movs	r1, #138	; 0x8a
 80055a2:	4b09      	ldr	r3, [pc, #36]	; (80055c8 <_Bfree+0x40>)
 80055a4:	4809      	ldr	r0, [pc, #36]	; (80055cc <_Bfree+0x44>)
 80055a6:	f000 fdc9 	bl	800613c <__assert_func>
 80055aa:	6046      	str	r6, [r0, #4]
 80055ac:	6086      	str	r6, [r0, #8]
 80055ae:	6006      	str	r6, [r0, #0]
 80055b0:	60c6      	str	r6, [r0, #12]
 80055b2:	2c00      	cmp	r4, #0
 80055b4:	d007      	beq.n	80055c6 <_Bfree+0x3e>
 80055b6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80055b8:	6862      	ldr	r2, [r4, #4]
 80055ba:	68db      	ldr	r3, [r3, #12]
 80055bc:	0092      	lsls	r2, r2, #2
 80055be:	189b      	adds	r3, r3, r2
 80055c0:	681a      	ldr	r2, [r3, #0]
 80055c2:	6022      	str	r2, [r4, #0]
 80055c4:	601c      	str	r4, [r3, #0]
 80055c6:	bd70      	pop	{r4, r5, r6, pc}
 80055c8:	08006ef1 	.word	0x08006ef1
 80055cc:	08006f74 	.word	0x08006f74

080055d0 <__multadd>:
 80055d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80055d2:	000e      	movs	r6, r1
 80055d4:	9001      	str	r0, [sp, #4]
 80055d6:	000c      	movs	r4, r1
 80055d8:	001d      	movs	r5, r3
 80055da:	2000      	movs	r0, #0
 80055dc:	690f      	ldr	r7, [r1, #16]
 80055de:	3614      	adds	r6, #20
 80055e0:	6833      	ldr	r3, [r6, #0]
 80055e2:	3001      	adds	r0, #1
 80055e4:	b299      	uxth	r1, r3
 80055e6:	4351      	muls	r1, r2
 80055e8:	0c1b      	lsrs	r3, r3, #16
 80055ea:	4353      	muls	r3, r2
 80055ec:	1949      	adds	r1, r1, r5
 80055ee:	0c0d      	lsrs	r5, r1, #16
 80055f0:	195b      	adds	r3, r3, r5
 80055f2:	0c1d      	lsrs	r5, r3, #16
 80055f4:	b289      	uxth	r1, r1
 80055f6:	041b      	lsls	r3, r3, #16
 80055f8:	185b      	adds	r3, r3, r1
 80055fa:	c608      	stmia	r6!, {r3}
 80055fc:	4287      	cmp	r7, r0
 80055fe:	dcef      	bgt.n	80055e0 <__multadd+0x10>
 8005600:	2d00      	cmp	r5, #0
 8005602:	d022      	beq.n	800564a <__multadd+0x7a>
 8005604:	68a3      	ldr	r3, [r4, #8]
 8005606:	42bb      	cmp	r3, r7
 8005608:	dc19      	bgt.n	800563e <__multadd+0x6e>
 800560a:	6863      	ldr	r3, [r4, #4]
 800560c:	9801      	ldr	r0, [sp, #4]
 800560e:	1c59      	adds	r1, r3, #1
 8005610:	f7ff ff76 	bl	8005500 <_Balloc>
 8005614:	1e06      	subs	r6, r0, #0
 8005616:	d105      	bne.n	8005624 <__multadd+0x54>
 8005618:	0002      	movs	r2, r0
 800561a:	21b5      	movs	r1, #181	; 0xb5
 800561c:	4b0c      	ldr	r3, [pc, #48]	; (8005650 <__multadd+0x80>)
 800561e:	480d      	ldr	r0, [pc, #52]	; (8005654 <__multadd+0x84>)
 8005620:	f000 fd8c 	bl	800613c <__assert_func>
 8005624:	0021      	movs	r1, r4
 8005626:	6923      	ldr	r3, [r4, #16]
 8005628:	310c      	adds	r1, #12
 800562a:	1c9a      	adds	r2, r3, #2
 800562c:	0092      	lsls	r2, r2, #2
 800562e:	300c      	adds	r0, #12
 8005630:	f7ff ff5d 	bl	80054ee <memcpy>
 8005634:	0021      	movs	r1, r4
 8005636:	9801      	ldr	r0, [sp, #4]
 8005638:	f7ff ffa6 	bl	8005588 <_Bfree>
 800563c:	0034      	movs	r4, r6
 800563e:	1d3b      	adds	r3, r7, #4
 8005640:	009b      	lsls	r3, r3, #2
 8005642:	18e3      	adds	r3, r4, r3
 8005644:	605d      	str	r5, [r3, #4]
 8005646:	1c7b      	adds	r3, r7, #1
 8005648:	6123      	str	r3, [r4, #16]
 800564a:	0020      	movs	r0, r4
 800564c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800564e:	46c0      	nop			; (mov r8, r8)
 8005650:	08006f63 	.word	0x08006f63
 8005654:	08006f74 	.word	0x08006f74

08005658 <__hi0bits>:
 8005658:	0003      	movs	r3, r0
 800565a:	0c02      	lsrs	r2, r0, #16
 800565c:	2000      	movs	r0, #0
 800565e:	4282      	cmp	r2, r0
 8005660:	d101      	bne.n	8005666 <__hi0bits+0xe>
 8005662:	041b      	lsls	r3, r3, #16
 8005664:	3010      	adds	r0, #16
 8005666:	0e1a      	lsrs	r2, r3, #24
 8005668:	d101      	bne.n	800566e <__hi0bits+0x16>
 800566a:	3008      	adds	r0, #8
 800566c:	021b      	lsls	r3, r3, #8
 800566e:	0f1a      	lsrs	r2, r3, #28
 8005670:	d101      	bne.n	8005676 <__hi0bits+0x1e>
 8005672:	3004      	adds	r0, #4
 8005674:	011b      	lsls	r3, r3, #4
 8005676:	0f9a      	lsrs	r2, r3, #30
 8005678:	d101      	bne.n	800567e <__hi0bits+0x26>
 800567a:	3002      	adds	r0, #2
 800567c:	009b      	lsls	r3, r3, #2
 800567e:	2b00      	cmp	r3, #0
 8005680:	db03      	blt.n	800568a <__hi0bits+0x32>
 8005682:	3001      	adds	r0, #1
 8005684:	005b      	lsls	r3, r3, #1
 8005686:	d400      	bmi.n	800568a <__hi0bits+0x32>
 8005688:	2020      	movs	r0, #32
 800568a:	4770      	bx	lr

0800568c <__lo0bits>:
 800568c:	6803      	ldr	r3, [r0, #0]
 800568e:	0002      	movs	r2, r0
 8005690:	2107      	movs	r1, #7
 8005692:	0018      	movs	r0, r3
 8005694:	4008      	ands	r0, r1
 8005696:	420b      	tst	r3, r1
 8005698:	d00d      	beq.n	80056b6 <__lo0bits+0x2a>
 800569a:	3906      	subs	r1, #6
 800569c:	2000      	movs	r0, #0
 800569e:	420b      	tst	r3, r1
 80056a0:	d105      	bne.n	80056ae <__lo0bits+0x22>
 80056a2:	3002      	adds	r0, #2
 80056a4:	4203      	tst	r3, r0
 80056a6:	d003      	beq.n	80056b0 <__lo0bits+0x24>
 80056a8:	40cb      	lsrs	r3, r1
 80056aa:	0008      	movs	r0, r1
 80056ac:	6013      	str	r3, [r2, #0]
 80056ae:	4770      	bx	lr
 80056b0:	089b      	lsrs	r3, r3, #2
 80056b2:	6013      	str	r3, [r2, #0]
 80056b4:	e7fb      	b.n	80056ae <__lo0bits+0x22>
 80056b6:	b299      	uxth	r1, r3
 80056b8:	2900      	cmp	r1, #0
 80056ba:	d101      	bne.n	80056c0 <__lo0bits+0x34>
 80056bc:	2010      	movs	r0, #16
 80056be:	0c1b      	lsrs	r3, r3, #16
 80056c0:	b2d9      	uxtb	r1, r3
 80056c2:	2900      	cmp	r1, #0
 80056c4:	d101      	bne.n	80056ca <__lo0bits+0x3e>
 80056c6:	3008      	adds	r0, #8
 80056c8:	0a1b      	lsrs	r3, r3, #8
 80056ca:	0719      	lsls	r1, r3, #28
 80056cc:	d101      	bne.n	80056d2 <__lo0bits+0x46>
 80056ce:	3004      	adds	r0, #4
 80056d0:	091b      	lsrs	r3, r3, #4
 80056d2:	0799      	lsls	r1, r3, #30
 80056d4:	d101      	bne.n	80056da <__lo0bits+0x4e>
 80056d6:	3002      	adds	r0, #2
 80056d8:	089b      	lsrs	r3, r3, #2
 80056da:	07d9      	lsls	r1, r3, #31
 80056dc:	d4e9      	bmi.n	80056b2 <__lo0bits+0x26>
 80056de:	3001      	adds	r0, #1
 80056e0:	085b      	lsrs	r3, r3, #1
 80056e2:	d1e6      	bne.n	80056b2 <__lo0bits+0x26>
 80056e4:	2020      	movs	r0, #32
 80056e6:	e7e2      	b.n	80056ae <__lo0bits+0x22>

080056e8 <__i2b>:
 80056e8:	b510      	push	{r4, lr}
 80056ea:	000c      	movs	r4, r1
 80056ec:	2101      	movs	r1, #1
 80056ee:	f7ff ff07 	bl	8005500 <_Balloc>
 80056f2:	2800      	cmp	r0, #0
 80056f4:	d106      	bne.n	8005704 <__i2b+0x1c>
 80056f6:	21a0      	movs	r1, #160	; 0xa0
 80056f8:	0002      	movs	r2, r0
 80056fa:	4b04      	ldr	r3, [pc, #16]	; (800570c <__i2b+0x24>)
 80056fc:	4804      	ldr	r0, [pc, #16]	; (8005710 <__i2b+0x28>)
 80056fe:	0049      	lsls	r1, r1, #1
 8005700:	f000 fd1c 	bl	800613c <__assert_func>
 8005704:	2301      	movs	r3, #1
 8005706:	6144      	str	r4, [r0, #20]
 8005708:	6103      	str	r3, [r0, #16]
 800570a:	bd10      	pop	{r4, pc}
 800570c:	08006f63 	.word	0x08006f63
 8005710:	08006f74 	.word	0x08006f74

08005714 <__multiply>:
 8005714:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005716:	690b      	ldr	r3, [r1, #16]
 8005718:	0014      	movs	r4, r2
 800571a:	6912      	ldr	r2, [r2, #16]
 800571c:	000d      	movs	r5, r1
 800571e:	b089      	sub	sp, #36	; 0x24
 8005720:	4293      	cmp	r3, r2
 8005722:	da01      	bge.n	8005728 <__multiply+0x14>
 8005724:	0025      	movs	r5, r4
 8005726:	000c      	movs	r4, r1
 8005728:	692f      	ldr	r7, [r5, #16]
 800572a:	6926      	ldr	r6, [r4, #16]
 800572c:	6869      	ldr	r1, [r5, #4]
 800572e:	19bb      	adds	r3, r7, r6
 8005730:	9302      	str	r3, [sp, #8]
 8005732:	68ab      	ldr	r3, [r5, #8]
 8005734:	19ba      	adds	r2, r7, r6
 8005736:	4293      	cmp	r3, r2
 8005738:	da00      	bge.n	800573c <__multiply+0x28>
 800573a:	3101      	adds	r1, #1
 800573c:	f7ff fee0 	bl	8005500 <_Balloc>
 8005740:	9001      	str	r0, [sp, #4]
 8005742:	2800      	cmp	r0, #0
 8005744:	d106      	bne.n	8005754 <__multiply+0x40>
 8005746:	215e      	movs	r1, #94	; 0x5e
 8005748:	0002      	movs	r2, r0
 800574a:	4b48      	ldr	r3, [pc, #288]	; (800586c <__multiply+0x158>)
 800574c:	4848      	ldr	r0, [pc, #288]	; (8005870 <__multiply+0x15c>)
 800574e:	31ff      	adds	r1, #255	; 0xff
 8005750:	f000 fcf4 	bl	800613c <__assert_func>
 8005754:	9b01      	ldr	r3, [sp, #4]
 8005756:	2200      	movs	r2, #0
 8005758:	3314      	adds	r3, #20
 800575a:	469c      	mov	ip, r3
 800575c:	19bb      	adds	r3, r7, r6
 800575e:	009b      	lsls	r3, r3, #2
 8005760:	4463      	add	r3, ip
 8005762:	9303      	str	r3, [sp, #12]
 8005764:	4663      	mov	r3, ip
 8005766:	9903      	ldr	r1, [sp, #12]
 8005768:	428b      	cmp	r3, r1
 800576a:	d32c      	bcc.n	80057c6 <__multiply+0xb2>
 800576c:	002b      	movs	r3, r5
 800576e:	0022      	movs	r2, r4
 8005770:	3314      	adds	r3, #20
 8005772:	00bf      	lsls	r7, r7, #2
 8005774:	3214      	adds	r2, #20
 8005776:	9306      	str	r3, [sp, #24]
 8005778:	00b6      	lsls	r6, r6, #2
 800577a:	19db      	adds	r3, r3, r7
 800577c:	9304      	str	r3, [sp, #16]
 800577e:	1993      	adds	r3, r2, r6
 8005780:	9307      	str	r3, [sp, #28]
 8005782:	2304      	movs	r3, #4
 8005784:	9305      	str	r3, [sp, #20]
 8005786:	002b      	movs	r3, r5
 8005788:	9904      	ldr	r1, [sp, #16]
 800578a:	3315      	adds	r3, #21
 800578c:	9200      	str	r2, [sp, #0]
 800578e:	4299      	cmp	r1, r3
 8005790:	d305      	bcc.n	800579e <__multiply+0x8a>
 8005792:	1b4b      	subs	r3, r1, r5
 8005794:	3b15      	subs	r3, #21
 8005796:	089b      	lsrs	r3, r3, #2
 8005798:	3301      	adds	r3, #1
 800579a:	009b      	lsls	r3, r3, #2
 800579c:	9305      	str	r3, [sp, #20]
 800579e:	9b07      	ldr	r3, [sp, #28]
 80057a0:	9a00      	ldr	r2, [sp, #0]
 80057a2:	429a      	cmp	r2, r3
 80057a4:	d311      	bcc.n	80057ca <__multiply+0xb6>
 80057a6:	9b02      	ldr	r3, [sp, #8]
 80057a8:	2b00      	cmp	r3, #0
 80057aa:	dd06      	ble.n	80057ba <__multiply+0xa6>
 80057ac:	9b03      	ldr	r3, [sp, #12]
 80057ae:	3b04      	subs	r3, #4
 80057b0:	9303      	str	r3, [sp, #12]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	9300      	str	r3, [sp, #0]
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d053      	beq.n	8005862 <__multiply+0x14e>
 80057ba:	9b01      	ldr	r3, [sp, #4]
 80057bc:	9a02      	ldr	r2, [sp, #8]
 80057be:	0018      	movs	r0, r3
 80057c0:	611a      	str	r2, [r3, #16]
 80057c2:	b009      	add	sp, #36	; 0x24
 80057c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057c6:	c304      	stmia	r3!, {r2}
 80057c8:	e7cd      	b.n	8005766 <__multiply+0x52>
 80057ca:	9b00      	ldr	r3, [sp, #0]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	b298      	uxth	r0, r3
 80057d0:	2800      	cmp	r0, #0
 80057d2:	d01b      	beq.n	800580c <__multiply+0xf8>
 80057d4:	4667      	mov	r7, ip
 80057d6:	2400      	movs	r4, #0
 80057d8:	9e06      	ldr	r6, [sp, #24]
 80057da:	ce02      	ldmia	r6!, {r1}
 80057dc:	683a      	ldr	r2, [r7, #0]
 80057de:	b28b      	uxth	r3, r1
 80057e0:	4343      	muls	r3, r0
 80057e2:	b292      	uxth	r2, r2
 80057e4:	189b      	adds	r3, r3, r2
 80057e6:	191b      	adds	r3, r3, r4
 80057e8:	0c0c      	lsrs	r4, r1, #16
 80057ea:	4344      	muls	r4, r0
 80057ec:	683a      	ldr	r2, [r7, #0]
 80057ee:	0c11      	lsrs	r1, r2, #16
 80057f0:	1861      	adds	r1, r4, r1
 80057f2:	0c1c      	lsrs	r4, r3, #16
 80057f4:	1909      	adds	r1, r1, r4
 80057f6:	0c0c      	lsrs	r4, r1, #16
 80057f8:	b29b      	uxth	r3, r3
 80057fa:	0409      	lsls	r1, r1, #16
 80057fc:	430b      	orrs	r3, r1
 80057fe:	c708      	stmia	r7!, {r3}
 8005800:	9b04      	ldr	r3, [sp, #16]
 8005802:	42b3      	cmp	r3, r6
 8005804:	d8e9      	bhi.n	80057da <__multiply+0xc6>
 8005806:	4663      	mov	r3, ip
 8005808:	9a05      	ldr	r2, [sp, #20]
 800580a:	509c      	str	r4, [r3, r2]
 800580c:	9b00      	ldr	r3, [sp, #0]
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	0c1e      	lsrs	r6, r3, #16
 8005812:	d020      	beq.n	8005856 <__multiply+0x142>
 8005814:	4663      	mov	r3, ip
 8005816:	002c      	movs	r4, r5
 8005818:	4660      	mov	r0, ip
 800581a:	2700      	movs	r7, #0
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	3414      	adds	r4, #20
 8005820:	6822      	ldr	r2, [r4, #0]
 8005822:	b29b      	uxth	r3, r3
 8005824:	b291      	uxth	r1, r2
 8005826:	4371      	muls	r1, r6
 8005828:	6802      	ldr	r2, [r0, #0]
 800582a:	0c12      	lsrs	r2, r2, #16
 800582c:	1889      	adds	r1, r1, r2
 800582e:	19cf      	adds	r7, r1, r7
 8005830:	0439      	lsls	r1, r7, #16
 8005832:	430b      	orrs	r3, r1
 8005834:	6003      	str	r3, [r0, #0]
 8005836:	cc02      	ldmia	r4!, {r1}
 8005838:	6843      	ldr	r3, [r0, #4]
 800583a:	0c09      	lsrs	r1, r1, #16
 800583c:	4371      	muls	r1, r6
 800583e:	b29b      	uxth	r3, r3
 8005840:	0c3f      	lsrs	r7, r7, #16
 8005842:	18cb      	adds	r3, r1, r3
 8005844:	9a04      	ldr	r2, [sp, #16]
 8005846:	19db      	adds	r3, r3, r7
 8005848:	0c1f      	lsrs	r7, r3, #16
 800584a:	3004      	adds	r0, #4
 800584c:	42a2      	cmp	r2, r4
 800584e:	d8e7      	bhi.n	8005820 <__multiply+0x10c>
 8005850:	4662      	mov	r2, ip
 8005852:	9905      	ldr	r1, [sp, #20]
 8005854:	5053      	str	r3, [r2, r1]
 8005856:	9b00      	ldr	r3, [sp, #0]
 8005858:	3304      	adds	r3, #4
 800585a:	9300      	str	r3, [sp, #0]
 800585c:	2304      	movs	r3, #4
 800585e:	449c      	add	ip, r3
 8005860:	e79d      	b.n	800579e <__multiply+0x8a>
 8005862:	9b02      	ldr	r3, [sp, #8]
 8005864:	3b01      	subs	r3, #1
 8005866:	9302      	str	r3, [sp, #8]
 8005868:	e79d      	b.n	80057a6 <__multiply+0x92>
 800586a:	46c0      	nop			; (mov r8, r8)
 800586c:	08006f63 	.word	0x08006f63
 8005870:	08006f74 	.word	0x08006f74

08005874 <__pow5mult>:
 8005874:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005876:	2303      	movs	r3, #3
 8005878:	0015      	movs	r5, r2
 800587a:	0007      	movs	r7, r0
 800587c:	000e      	movs	r6, r1
 800587e:	401a      	ands	r2, r3
 8005880:	421d      	tst	r5, r3
 8005882:	d008      	beq.n	8005896 <__pow5mult+0x22>
 8005884:	4925      	ldr	r1, [pc, #148]	; (800591c <__pow5mult+0xa8>)
 8005886:	3a01      	subs	r2, #1
 8005888:	0092      	lsls	r2, r2, #2
 800588a:	5852      	ldr	r2, [r2, r1]
 800588c:	2300      	movs	r3, #0
 800588e:	0031      	movs	r1, r6
 8005890:	f7ff fe9e 	bl	80055d0 <__multadd>
 8005894:	0006      	movs	r6, r0
 8005896:	10ad      	asrs	r5, r5, #2
 8005898:	d03d      	beq.n	8005916 <__pow5mult+0xa2>
 800589a:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 800589c:	2c00      	cmp	r4, #0
 800589e:	d10f      	bne.n	80058c0 <__pow5mult+0x4c>
 80058a0:	2010      	movs	r0, #16
 80058a2:	f7ff fe0f 	bl	80054c4 <malloc>
 80058a6:	1e02      	subs	r2, r0, #0
 80058a8:	6278      	str	r0, [r7, #36]	; 0x24
 80058aa:	d105      	bne.n	80058b8 <__pow5mult+0x44>
 80058ac:	21d7      	movs	r1, #215	; 0xd7
 80058ae:	4b1c      	ldr	r3, [pc, #112]	; (8005920 <__pow5mult+0xac>)
 80058b0:	481c      	ldr	r0, [pc, #112]	; (8005924 <__pow5mult+0xb0>)
 80058b2:	0049      	lsls	r1, r1, #1
 80058b4:	f000 fc42 	bl	800613c <__assert_func>
 80058b8:	6044      	str	r4, [r0, #4]
 80058ba:	6084      	str	r4, [r0, #8]
 80058bc:	6004      	str	r4, [r0, #0]
 80058be:	60c4      	str	r4, [r0, #12]
 80058c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058c2:	689c      	ldr	r4, [r3, #8]
 80058c4:	9301      	str	r3, [sp, #4]
 80058c6:	2c00      	cmp	r4, #0
 80058c8:	d108      	bne.n	80058dc <__pow5mult+0x68>
 80058ca:	0038      	movs	r0, r7
 80058cc:	4916      	ldr	r1, [pc, #88]	; (8005928 <__pow5mult+0xb4>)
 80058ce:	f7ff ff0b 	bl	80056e8 <__i2b>
 80058d2:	9b01      	ldr	r3, [sp, #4]
 80058d4:	0004      	movs	r4, r0
 80058d6:	6098      	str	r0, [r3, #8]
 80058d8:	2300      	movs	r3, #0
 80058da:	6003      	str	r3, [r0, #0]
 80058dc:	2301      	movs	r3, #1
 80058de:	421d      	tst	r5, r3
 80058e0:	d00a      	beq.n	80058f8 <__pow5mult+0x84>
 80058e2:	0031      	movs	r1, r6
 80058e4:	0022      	movs	r2, r4
 80058e6:	0038      	movs	r0, r7
 80058e8:	f7ff ff14 	bl	8005714 <__multiply>
 80058ec:	0031      	movs	r1, r6
 80058ee:	9001      	str	r0, [sp, #4]
 80058f0:	0038      	movs	r0, r7
 80058f2:	f7ff fe49 	bl	8005588 <_Bfree>
 80058f6:	9e01      	ldr	r6, [sp, #4]
 80058f8:	106d      	asrs	r5, r5, #1
 80058fa:	d00c      	beq.n	8005916 <__pow5mult+0xa2>
 80058fc:	6820      	ldr	r0, [r4, #0]
 80058fe:	2800      	cmp	r0, #0
 8005900:	d107      	bne.n	8005912 <__pow5mult+0x9e>
 8005902:	0022      	movs	r2, r4
 8005904:	0021      	movs	r1, r4
 8005906:	0038      	movs	r0, r7
 8005908:	f7ff ff04 	bl	8005714 <__multiply>
 800590c:	2300      	movs	r3, #0
 800590e:	6020      	str	r0, [r4, #0]
 8005910:	6003      	str	r3, [r0, #0]
 8005912:	0004      	movs	r4, r0
 8005914:	e7e2      	b.n	80058dc <__pow5mult+0x68>
 8005916:	0030      	movs	r0, r6
 8005918:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800591a:	46c0      	nop			; (mov r8, r8)
 800591c:	080070c0 	.word	0x080070c0
 8005920:	08006ef1 	.word	0x08006ef1
 8005924:	08006f74 	.word	0x08006f74
 8005928:	00000271 	.word	0x00000271

0800592c <__lshift>:
 800592c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800592e:	000c      	movs	r4, r1
 8005930:	0017      	movs	r7, r2
 8005932:	6923      	ldr	r3, [r4, #16]
 8005934:	1155      	asrs	r5, r2, #5
 8005936:	b087      	sub	sp, #28
 8005938:	18eb      	adds	r3, r5, r3
 800593a:	9302      	str	r3, [sp, #8]
 800593c:	3301      	adds	r3, #1
 800593e:	9301      	str	r3, [sp, #4]
 8005940:	6849      	ldr	r1, [r1, #4]
 8005942:	68a3      	ldr	r3, [r4, #8]
 8005944:	9004      	str	r0, [sp, #16]
 8005946:	9a01      	ldr	r2, [sp, #4]
 8005948:	4293      	cmp	r3, r2
 800594a:	db10      	blt.n	800596e <__lshift+0x42>
 800594c:	9804      	ldr	r0, [sp, #16]
 800594e:	f7ff fdd7 	bl	8005500 <_Balloc>
 8005952:	2300      	movs	r3, #0
 8005954:	0002      	movs	r2, r0
 8005956:	0006      	movs	r6, r0
 8005958:	0019      	movs	r1, r3
 800595a:	3214      	adds	r2, #20
 800595c:	4298      	cmp	r0, r3
 800595e:	d10c      	bne.n	800597a <__lshift+0x4e>
 8005960:	21da      	movs	r1, #218	; 0xda
 8005962:	0002      	movs	r2, r0
 8005964:	4b26      	ldr	r3, [pc, #152]	; (8005a00 <__lshift+0xd4>)
 8005966:	4827      	ldr	r0, [pc, #156]	; (8005a04 <__lshift+0xd8>)
 8005968:	31ff      	adds	r1, #255	; 0xff
 800596a:	f000 fbe7 	bl	800613c <__assert_func>
 800596e:	3101      	adds	r1, #1
 8005970:	005b      	lsls	r3, r3, #1
 8005972:	e7e8      	b.n	8005946 <__lshift+0x1a>
 8005974:	0098      	lsls	r0, r3, #2
 8005976:	5011      	str	r1, [r2, r0]
 8005978:	3301      	adds	r3, #1
 800597a:	42ab      	cmp	r3, r5
 800597c:	dbfa      	blt.n	8005974 <__lshift+0x48>
 800597e:	43eb      	mvns	r3, r5
 8005980:	17db      	asrs	r3, r3, #31
 8005982:	401d      	ands	r5, r3
 8005984:	211f      	movs	r1, #31
 8005986:	0023      	movs	r3, r4
 8005988:	0038      	movs	r0, r7
 800598a:	00ad      	lsls	r5, r5, #2
 800598c:	1955      	adds	r5, r2, r5
 800598e:	6922      	ldr	r2, [r4, #16]
 8005990:	3314      	adds	r3, #20
 8005992:	0092      	lsls	r2, r2, #2
 8005994:	4008      	ands	r0, r1
 8005996:	4684      	mov	ip, r0
 8005998:	189a      	adds	r2, r3, r2
 800599a:	420f      	tst	r7, r1
 800599c:	d02a      	beq.n	80059f4 <__lshift+0xc8>
 800599e:	3101      	adds	r1, #1
 80059a0:	1a09      	subs	r1, r1, r0
 80059a2:	9105      	str	r1, [sp, #20]
 80059a4:	2100      	movs	r1, #0
 80059a6:	9503      	str	r5, [sp, #12]
 80059a8:	4667      	mov	r7, ip
 80059aa:	6818      	ldr	r0, [r3, #0]
 80059ac:	40b8      	lsls	r0, r7
 80059ae:	4301      	orrs	r1, r0
 80059b0:	9803      	ldr	r0, [sp, #12]
 80059b2:	c002      	stmia	r0!, {r1}
 80059b4:	cb02      	ldmia	r3!, {r1}
 80059b6:	9003      	str	r0, [sp, #12]
 80059b8:	9805      	ldr	r0, [sp, #20]
 80059ba:	40c1      	lsrs	r1, r0
 80059bc:	429a      	cmp	r2, r3
 80059be:	d8f3      	bhi.n	80059a8 <__lshift+0x7c>
 80059c0:	0020      	movs	r0, r4
 80059c2:	3015      	adds	r0, #21
 80059c4:	2304      	movs	r3, #4
 80059c6:	4282      	cmp	r2, r0
 80059c8:	d304      	bcc.n	80059d4 <__lshift+0xa8>
 80059ca:	1b13      	subs	r3, r2, r4
 80059cc:	3b15      	subs	r3, #21
 80059ce:	089b      	lsrs	r3, r3, #2
 80059d0:	3301      	adds	r3, #1
 80059d2:	009b      	lsls	r3, r3, #2
 80059d4:	50e9      	str	r1, [r5, r3]
 80059d6:	2900      	cmp	r1, #0
 80059d8:	d002      	beq.n	80059e0 <__lshift+0xb4>
 80059da:	9b02      	ldr	r3, [sp, #8]
 80059dc:	3302      	adds	r3, #2
 80059de:	9301      	str	r3, [sp, #4]
 80059e0:	9b01      	ldr	r3, [sp, #4]
 80059e2:	9804      	ldr	r0, [sp, #16]
 80059e4:	3b01      	subs	r3, #1
 80059e6:	0021      	movs	r1, r4
 80059e8:	6133      	str	r3, [r6, #16]
 80059ea:	f7ff fdcd 	bl	8005588 <_Bfree>
 80059ee:	0030      	movs	r0, r6
 80059f0:	b007      	add	sp, #28
 80059f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80059f4:	cb02      	ldmia	r3!, {r1}
 80059f6:	c502      	stmia	r5!, {r1}
 80059f8:	429a      	cmp	r2, r3
 80059fa:	d8fb      	bhi.n	80059f4 <__lshift+0xc8>
 80059fc:	e7f0      	b.n	80059e0 <__lshift+0xb4>
 80059fe:	46c0      	nop			; (mov r8, r8)
 8005a00:	08006f63 	.word	0x08006f63
 8005a04:	08006f74 	.word	0x08006f74

08005a08 <__mcmp>:
 8005a08:	6902      	ldr	r2, [r0, #16]
 8005a0a:	690b      	ldr	r3, [r1, #16]
 8005a0c:	b530      	push	{r4, r5, lr}
 8005a0e:	0004      	movs	r4, r0
 8005a10:	1ad0      	subs	r0, r2, r3
 8005a12:	429a      	cmp	r2, r3
 8005a14:	d10d      	bne.n	8005a32 <__mcmp+0x2a>
 8005a16:	009b      	lsls	r3, r3, #2
 8005a18:	3414      	adds	r4, #20
 8005a1a:	3114      	adds	r1, #20
 8005a1c:	18e2      	adds	r2, r4, r3
 8005a1e:	18c9      	adds	r1, r1, r3
 8005a20:	3a04      	subs	r2, #4
 8005a22:	3904      	subs	r1, #4
 8005a24:	6815      	ldr	r5, [r2, #0]
 8005a26:	680b      	ldr	r3, [r1, #0]
 8005a28:	429d      	cmp	r5, r3
 8005a2a:	d003      	beq.n	8005a34 <__mcmp+0x2c>
 8005a2c:	2001      	movs	r0, #1
 8005a2e:	429d      	cmp	r5, r3
 8005a30:	d303      	bcc.n	8005a3a <__mcmp+0x32>
 8005a32:	bd30      	pop	{r4, r5, pc}
 8005a34:	4294      	cmp	r4, r2
 8005a36:	d3f3      	bcc.n	8005a20 <__mcmp+0x18>
 8005a38:	e7fb      	b.n	8005a32 <__mcmp+0x2a>
 8005a3a:	4240      	negs	r0, r0
 8005a3c:	e7f9      	b.n	8005a32 <__mcmp+0x2a>
	...

08005a40 <__mdiff>:
 8005a40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a42:	000e      	movs	r6, r1
 8005a44:	0007      	movs	r7, r0
 8005a46:	0011      	movs	r1, r2
 8005a48:	0030      	movs	r0, r6
 8005a4a:	b087      	sub	sp, #28
 8005a4c:	0014      	movs	r4, r2
 8005a4e:	f7ff ffdb 	bl	8005a08 <__mcmp>
 8005a52:	1e05      	subs	r5, r0, #0
 8005a54:	d110      	bne.n	8005a78 <__mdiff+0x38>
 8005a56:	0001      	movs	r1, r0
 8005a58:	0038      	movs	r0, r7
 8005a5a:	f7ff fd51 	bl	8005500 <_Balloc>
 8005a5e:	1e02      	subs	r2, r0, #0
 8005a60:	d104      	bne.n	8005a6c <__mdiff+0x2c>
 8005a62:	4b40      	ldr	r3, [pc, #256]	; (8005b64 <__mdiff+0x124>)
 8005a64:	4940      	ldr	r1, [pc, #256]	; (8005b68 <__mdiff+0x128>)
 8005a66:	4841      	ldr	r0, [pc, #260]	; (8005b6c <__mdiff+0x12c>)
 8005a68:	f000 fb68 	bl	800613c <__assert_func>
 8005a6c:	2301      	movs	r3, #1
 8005a6e:	6145      	str	r5, [r0, #20]
 8005a70:	6103      	str	r3, [r0, #16]
 8005a72:	0010      	movs	r0, r2
 8005a74:	b007      	add	sp, #28
 8005a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a78:	2301      	movs	r3, #1
 8005a7a:	9301      	str	r3, [sp, #4]
 8005a7c:	2800      	cmp	r0, #0
 8005a7e:	db04      	blt.n	8005a8a <__mdiff+0x4a>
 8005a80:	0023      	movs	r3, r4
 8005a82:	0034      	movs	r4, r6
 8005a84:	001e      	movs	r6, r3
 8005a86:	2300      	movs	r3, #0
 8005a88:	9301      	str	r3, [sp, #4]
 8005a8a:	0038      	movs	r0, r7
 8005a8c:	6861      	ldr	r1, [r4, #4]
 8005a8e:	f7ff fd37 	bl	8005500 <_Balloc>
 8005a92:	1e02      	subs	r2, r0, #0
 8005a94:	d103      	bne.n	8005a9e <__mdiff+0x5e>
 8005a96:	2190      	movs	r1, #144	; 0x90
 8005a98:	4b32      	ldr	r3, [pc, #200]	; (8005b64 <__mdiff+0x124>)
 8005a9a:	0089      	lsls	r1, r1, #2
 8005a9c:	e7e3      	b.n	8005a66 <__mdiff+0x26>
 8005a9e:	9b01      	ldr	r3, [sp, #4]
 8005aa0:	2700      	movs	r7, #0
 8005aa2:	60c3      	str	r3, [r0, #12]
 8005aa4:	6920      	ldr	r0, [r4, #16]
 8005aa6:	3414      	adds	r4, #20
 8005aa8:	9401      	str	r4, [sp, #4]
 8005aaa:	9b01      	ldr	r3, [sp, #4]
 8005aac:	0084      	lsls	r4, r0, #2
 8005aae:	191b      	adds	r3, r3, r4
 8005ab0:	0034      	movs	r4, r6
 8005ab2:	9302      	str	r3, [sp, #8]
 8005ab4:	6933      	ldr	r3, [r6, #16]
 8005ab6:	3414      	adds	r4, #20
 8005ab8:	0099      	lsls	r1, r3, #2
 8005aba:	1863      	adds	r3, r4, r1
 8005abc:	9303      	str	r3, [sp, #12]
 8005abe:	0013      	movs	r3, r2
 8005ac0:	3314      	adds	r3, #20
 8005ac2:	469c      	mov	ip, r3
 8005ac4:	9305      	str	r3, [sp, #20]
 8005ac6:	9b01      	ldr	r3, [sp, #4]
 8005ac8:	9304      	str	r3, [sp, #16]
 8005aca:	9b04      	ldr	r3, [sp, #16]
 8005acc:	cc02      	ldmia	r4!, {r1}
 8005ace:	cb20      	ldmia	r3!, {r5}
 8005ad0:	9304      	str	r3, [sp, #16]
 8005ad2:	b2ab      	uxth	r3, r5
 8005ad4:	19df      	adds	r7, r3, r7
 8005ad6:	b28b      	uxth	r3, r1
 8005ad8:	1afb      	subs	r3, r7, r3
 8005ada:	0c09      	lsrs	r1, r1, #16
 8005adc:	0c2d      	lsrs	r5, r5, #16
 8005ade:	1a6d      	subs	r5, r5, r1
 8005ae0:	1419      	asrs	r1, r3, #16
 8005ae2:	186d      	adds	r5, r5, r1
 8005ae4:	4661      	mov	r1, ip
 8005ae6:	142f      	asrs	r7, r5, #16
 8005ae8:	b29b      	uxth	r3, r3
 8005aea:	042d      	lsls	r5, r5, #16
 8005aec:	432b      	orrs	r3, r5
 8005aee:	c108      	stmia	r1!, {r3}
 8005af0:	9b03      	ldr	r3, [sp, #12]
 8005af2:	468c      	mov	ip, r1
 8005af4:	42a3      	cmp	r3, r4
 8005af6:	d8e8      	bhi.n	8005aca <__mdiff+0x8a>
 8005af8:	0031      	movs	r1, r6
 8005afa:	9c03      	ldr	r4, [sp, #12]
 8005afc:	3115      	adds	r1, #21
 8005afe:	2304      	movs	r3, #4
 8005b00:	428c      	cmp	r4, r1
 8005b02:	d304      	bcc.n	8005b0e <__mdiff+0xce>
 8005b04:	1ba3      	subs	r3, r4, r6
 8005b06:	3b15      	subs	r3, #21
 8005b08:	089b      	lsrs	r3, r3, #2
 8005b0a:	3301      	adds	r3, #1
 8005b0c:	009b      	lsls	r3, r3, #2
 8005b0e:	9901      	ldr	r1, [sp, #4]
 8005b10:	18cc      	adds	r4, r1, r3
 8005b12:	9905      	ldr	r1, [sp, #20]
 8005b14:	0026      	movs	r6, r4
 8005b16:	18cb      	adds	r3, r1, r3
 8005b18:	469c      	mov	ip, r3
 8005b1a:	9902      	ldr	r1, [sp, #8]
 8005b1c:	428e      	cmp	r6, r1
 8005b1e:	d310      	bcc.n	8005b42 <__mdiff+0x102>
 8005b20:	9e02      	ldr	r6, [sp, #8]
 8005b22:	1ee1      	subs	r1, r4, #3
 8005b24:	2500      	movs	r5, #0
 8005b26:	428e      	cmp	r6, r1
 8005b28:	d304      	bcc.n	8005b34 <__mdiff+0xf4>
 8005b2a:	0031      	movs	r1, r6
 8005b2c:	3103      	adds	r1, #3
 8005b2e:	1b0c      	subs	r4, r1, r4
 8005b30:	08a4      	lsrs	r4, r4, #2
 8005b32:	00a5      	lsls	r5, r4, #2
 8005b34:	195b      	adds	r3, r3, r5
 8005b36:	3b04      	subs	r3, #4
 8005b38:	6819      	ldr	r1, [r3, #0]
 8005b3a:	2900      	cmp	r1, #0
 8005b3c:	d00f      	beq.n	8005b5e <__mdiff+0x11e>
 8005b3e:	6110      	str	r0, [r2, #16]
 8005b40:	e797      	b.n	8005a72 <__mdiff+0x32>
 8005b42:	ce02      	ldmia	r6!, {r1}
 8005b44:	b28d      	uxth	r5, r1
 8005b46:	19ed      	adds	r5, r5, r7
 8005b48:	0c0f      	lsrs	r7, r1, #16
 8005b4a:	1429      	asrs	r1, r5, #16
 8005b4c:	1879      	adds	r1, r7, r1
 8005b4e:	140f      	asrs	r7, r1, #16
 8005b50:	b2ad      	uxth	r5, r5
 8005b52:	0409      	lsls	r1, r1, #16
 8005b54:	430d      	orrs	r5, r1
 8005b56:	4661      	mov	r1, ip
 8005b58:	c120      	stmia	r1!, {r5}
 8005b5a:	468c      	mov	ip, r1
 8005b5c:	e7dd      	b.n	8005b1a <__mdiff+0xda>
 8005b5e:	3801      	subs	r0, #1
 8005b60:	e7e9      	b.n	8005b36 <__mdiff+0xf6>
 8005b62:	46c0      	nop			; (mov r8, r8)
 8005b64:	08006f63 	.word	0x08006f63
 8005b68:	00000232 	.word	0x00000232
 8005b6c:	08006f74 	.word	0x08006f74

08005b70 <__d2b>:
 8005b70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005b72:	2101      	movs	r1, #1
 8005b74:	0014      	movs	r4, r2
 8005b76:	001e      	movs	r6, r3
 8005b78:	9f08      	ldr	r7, [sp, #32]
 8005b7a:	f7ff fcc1 	bl	8005500 <_Balloc>
 8005b7e:	1e05      	subs	r5, r0, #0
 8005b80:	d105      	bne.n	8005b8e <__d2b+0x1e>
 8005b82:	0002      	movs	r2, r0
 8005b84:	4b26      	ldr	r3, [pc, #152]	; (8005c20 <__d2b+0xb0>)
 8005b86:	4927      	ldr	r1, [pc, #156]	; (8005c24 <__d2b+0xb4>)
 8005b88:	4827      	ldr	r0, [pc, #156]	; (8005c28 <__d2b+0xb8>)
 8005b8a:	f000 fad7 	bl	800613c <__assert_func>
 8005b8e:	0333      	lsls	r3, r6, #12
 8005b90:	0076      	lsls	r6, r6, #1
 8005b92:	0b1b      	lsrs	r3, r3, #12
 8005b94:	0d76      	lsrs	r6, r6, #21
 8005b96:	d124      	bne.n	8005be2 <__d2b+0x72>
 8005b98:	9301      	str	r3, [sp, #4]
 8005b9a:	2c00      	cmp	r4, #0
 8005b9c:	d027      	beq.n	8005bee <__d2b+0x7e>
 8005b9e:	4668      	mov	r0, sp
 8005ba0:	9400      	str	r4, [sp, #0]
 8005ba2:	f7ff fd73 	bl	800568c <__lo0bits>
 8005ba6:	9c00      	ldr	r4, [sp, #0]
 8005ba8:	2800      	cmp	r0, #0
 8005baa:	d01e      	beq.n	8005bea <__d2b+0x7a>
 8005bac:	9b01      	ldr	r3, [sp, #4]
 8005bae:	2120      	movs	r1, #32
 8005bb0:	001a      	movs	r2, r3
 8005bb2:	1a09      	subs	r1, r1, r0
 8005bb4:	408a      	lsls	r2, r1
 8005bb6:	40c3      	lsrs	r3, r0
 8005bb8:	4322      	orrs	r2, r4
 8005bba:	616a      	str	r2, [r5, #20]
 8005bbc:	9301      	str	r3, [sp, #4]
 8005bbe:	9c01      	ldr	r4, [sp, #4]
 8005bc0:	61ac      	str	r4, [r5, #24]
 8005bc2:	1e63      	subs	r3, r4, #1
 8005bc4:	419c      	sbcs	r4, r3
 8005bc6:	3401      	adds	r4, #1
 8005bc8:	612c      	str	r4, [r5, #16]
 8005bca:	2e00      	cmp	r6, #0
 8005bcc:	d018      	beq.n	8005c00 <__d2b+0x90>
 8005bce:	4b17      	ldr	r3, [pc, #92]	; (8005c2c <__d2b+0xbc>)
 8005bd0:	18f6      	adds	r6, r6, r3
 8005bd2:	2335      	movs	r3, #53	; 0x35
 8005bd4:	1836      	adds	r6, r6, r0
 8005bd6:	1a18      	subs	r0, r3, r0
 8005bd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005bda:	603e      	str	r6, [r7, #0]
 8005bdc:	6018      	str	r0, [r3, #0]
 8005bde:	0028      	movs	r0, r5
 8005be0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005be2:	2280      	movs	r2, #128	; 0x80
 8005be4:	0352      	lsls	r2, r2, #13
 8005be6:	4313      	orrs	r3, r2
 8005be8:	e7d6      	b.n	8005b98 <__d2b+0x28>
 8005bea:	616c      	str	r4, [r5, #20]
 8005bec:	e7e7      	b.n	8005bbe <__d2b+0x4e>
 8005bee:	a801      	add	r0, sp, #4
 8005bf0:	f7ff fd4c 	bl	800568c <__lo0bits>
 8005bf4:	2401      	movs	r4, #1
 8005bf6:	9b01      	ldr	r3, [sp, #4]
 8005bf8:	612c      	str	r4, [r5, #16]
 8005bfa:	616b      	str	r3, [r5, #20]
 8005bfc:	3020      	adds	r0, #32
 8005bfe:	e7e4      	b.n	8005bca <__d2b+0x5a>
 8005c00:	4b0b      	ldr	r3, [pc, #44]	; (8005c30 <__d2b+0xc0>)
 8005c02:	18c0      	adds	r0, r0, r3
 8005c04:	4b0b      	ldr	r3, [pc, #44]	; (8005c34 <__d2b+0xc4>)
 8005c06:	6038      	str	r0, [r7, #0]
 8005c08:	18e3      	adds	r3, r4, r3
 8005c0a:	009b      	lsls	r3, r3, #2
 8005c0c:	18eb      	adds	r3, r5, r3
 8005c0e:	6958      	ldr	r0, [r3, #20]
 8005c10:	f7ff fd22 	bl	8005658 <__hi0bits>
 8005c14:	0164      	lsls	r4, r4, #5
 8005c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c18:	1a24      	subs	r4, r4, r0
 8005c1a:	601c      	str	r4, [r3, #0]
 8005c1c:	e7df      	b.n	8005bde <__d2b+0x6e>
 8005c1e:	46c0      	nop			; (mov r8, r8)
 8005c20:	08006f63 	.word	0x08006f63
 8005c24:	0000030a 	.word	0x0000030a
 8005c28:	08006f74 	.word	0x08006f74
 8005c2c:	fffffbcd 	.word	0xfffffbcd
 8005c30:	fffffbce 	.word	0xfffffbce
 8005c34:	3fffffff 	.word	0x3fffffff

08005c38 <_calloc_r>:
 8005c38:	b570      	push	{r4, r5, r6, lr}
 8005c3a:	0c13      	lsrs	r3, r2, #16
 8005c3c:	0c0d      	lsrs	r5, r1, #16
 8005c3e:	d11e      	bne.n	8005c7e <_calloc_r+0x46>
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	d10c      	bne.n	8005c5e <_calloc_r+0x26>
 8005c44:	b289      	uxth	r1, r1
 8005c46:	b294      	uxth	r4, r2
 8005c48:	434c      	muls	r4, r1
 8005c4a:	0021      	movs	r1, r4
 8005c4c:	f000 f88c 	bl	8005d68 <_malloc_r>
 8005c50:	1e05      	subs	r5, r0, #0
 8005c52:	d01b      	beq.n	8005c8c <_calloc_r+0x54>
 8005c54:	0022      	movs	r2, r4
 8005c56:	2100      	movs	r1, #0
 8005c58:	f7fe f8dc 	bl	8003e14 <memset>
 8005c5c:	e016      	b.n	8005c8c <_calloc_r+0x54>
 8005c5e:	1c1d      	adds	r5, r3, #0
 8005c60:	1c0b      	adds	r3, r1, #0
 8005c62:	b292      	uxth	r2, r2
 8005c64:	b289      	uxth	r1, r1
 8005c66:	b29c      	uxth	r4, r3
 8005c68:	4351      	muls	r1, r2
 8005c6a:	b2ab      	uxth	r3, r5
 8005c6c:	4363      	muls	r3, r4
 8005c6e:	0c0c      	lsrs	r4, r1, #16
 8005c70:	191c      	adds	r4, r3, r4
 8005c72:	0c22      	lsrs	r2, r4, #16
 8005c74:	d107      	bne.n	8005c86 <_calloc_r+0x4e>
 8005c76:	0424      	lsls	r4, r4, #16
 8005c78:	b289      	uxth	r1, r1
 8005c7a:	430c      	orrs	r4, r1
 8005c7c:	e7e5      	b.n	8005c4a <_calloc_r+0x12>
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d101      	bne.n	8005c86 <_calloc_r+0x4e>
 8005c82:	1c13      	adds	r3, r2, #0
 8005c84:	e7ed      	b.n	8005c62 <_calloc_r+0x2a>
 8005c86:	230c      	movs	r3, #12
 8005c88:	2500      	movs	r5, #0
 8005c8a:	6003      	str	r3, [r0, #0]
 8005c8c:	0028      	movs	r0, r5
 8005c8e:	bd70      	pop	{r4, r5, r6, pc}

08005c90 <_free_r>:
 8005c90:	b570      	push	{r4, r5, r6, lr}
 8005c92:	0005      	movs	r5, r0
 8005c94:	2900      	cmp	r1, #0
 8005c96:	d010      	beq.n	8005cba <_free_r+0x2a>
 8005c98:	1f0c      	subs	r4, r1, #4
 8005c9a:	6823      	ldr	r3, [r4, #0]
 8005c9c:	2b00      	cmp	r3, #0
 8005c9e:	da00      	bge.n	8005ca2 <_free_r+0x12>
 8005ca0:	18e4      	adds	r4, r4, r3
 8005ca2:	0028      	movs	r0, r5
 8005ca4:	f000 fa9e 	bl	80061e4 <__malloc_lock>
 8005ca8:	4a1d      	ldr	r2, [pc, #116]	; (8005d20 <_free_r+0x90>)
 8005caa:	6813      	ldr	r3, [r2, #0]
 8005cac:	2b00      	cmp	r3, #0
 8005cae:	d105      	bne.n	8005cbc <_free_r+0x2c>
 8005cb0:	6063      	str	r3, [r4, #4]
 8005cb2:	6014      	str	r4, [r2, #0]
 8005cb4:	0028      	movs	r0, r5
 8005cb6:	f000 fa9d 	bl	80061f4 <__malloc_unlock>
 8005cba:	bd70      	pop	{r4, r5, r6, pc}
 8005cbc:	42a3      	cmp	r3, r4
 8005cbe:	d908      	bls.n	8005cd2 <_free_r+0x42>
 8005cc0:	6821      	ldr	r1, [r4, #0]
 8005cc2:	1860      	adds	r0, r4, r1
 8005cc4:	4283      	cmp	r3, r0
 8005cc6:	d1f3      	bne.n	8005cb0 <_free_r+0x20>
 8005cc8:	6818      	ldr	r0, [r3, #0]
 8005cca:	685b      	ldr	r3, [r3, #4]
 8005ccc:	1841      	adds	r1, r0, r1
 8005cce:	6021      	str	r1, [r4, #0]
 8005cd0:	e7ee      	b.n	8005cb0 <_free_r+0x20>
 8005cd2:	001a      	movs	r2, r3
 8005cd4:	685b      	ldr	r3, [r3, #4]
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d001      	beq.n	8005cde <_free_r+0x4e>
 8005cda:	42a3      	cmp	r3, r4
 8005cdc:	d9f9      	bls.n	8005cd2 <_free_r+0x42>
 8005cde:	6811      	ldr	r1, [r2, #0]
 8005ce0:	1850      	adds	r0, r2, r1
 8005ce2:	42a0      	cmp	r0, r4
 8005ce4:	d10b      	bne.n	8005cfe <_free_r+0x6e>
 8005ce6:	6820      	ldr	r0, [r4, #0]
 8005ce8:	1809      	adds	r1, r1, r0
 8005cea:	1850      	adds	r0, r2, r1
 8005cec:	6011      	str	r1, [r2, #0]
 8005cee:	4283      	cmp	r3, r0
 8005cf0:	d1e0      	bne.n	8005cb4 <_free_r+0x24>
 8005cf2:	6818      	ldr	r0, [r3, #0]
 8005cf4:	685b      	ldr	r3, [r3, #4]
 8005cf6:	1841      	adds	r1, r0, r1
 8005cf8:	6011      	str	r1, [r2, #0]
 8005cfa:	6053      	str	r3, [r2, #4]
 8005cfc:	e7da      	b.n	8005cb4 <_free_r+0x24>
 8005cfe:	42a0      	cmp	r0, r4
 8005d00:	d902      	bls.n	8005d08 <_free_r+0x78>
 8005d02:	230c      	movs	r3, #12
 8005d04:	602b      	str	r3, [r5, #0]
 8005d06:	e7d5      	b.n	8005cb4 <_free_r+0x24>
 8005d08:	6821      	ldr	r1, [r4, #0]
 8005d0a:	1860      	adds	r0, r4, r1
 8005d0c:	4283      	cmp	r3, r0
 8005d0e:	d103      	bne.n	8005d18 <_free_r+0x88>
 8005d10:	6818      	ldr	r0, [r3, #0]
 8005d12:	685b      	ldr	r3, [r3, #4]
 8005d14:	1841      	adds	r1, r0, r1
 8005d16:	6021      	str	r1, [r4, #0]
 8005d18:	6063      	str	r3, [r4, #4]
 8005d1a:	6054      	str	r4, [r2, #4]
 8005d1c:	e7ca      	b.n	8005cb4 <_free_r+0x24>
 8005d1e:	46c0      	nop			; (mov r8, r8)
 8005d20:	2000036c 	.word	0x2000036c

08005d24 <sbrk_aligned>:
 8005d24:	b570      	push	{r4, r5, r6, lr}
 8005d26:	4e0f      	ldr	r6, [pc, #60]	; (8005d64 <sbrk_aligned+0x40>)
 8005d28:	000d      	movs	r5, r1
 8005d2a:	6831      	ldr	r1, [r6, #0]
 8005d2c:	0004      	movs	r4, r0
 8005d2e:	2900      	cmp	r1, #0
 8005d30:	d102      	bne.n	8005d38 <sbrk_aligned+0x14>
 8005d32:	f000 f9f1 	bl	8006118 <_sbrk_r>
 8005d36:	6030      	str	r0, [r6, #0]
 8005d38:	0029      	movs	r1, r5
 8005d3a:	0020      	movs	r0, r4
 8005d3c:	f000 f9ec 	bl	8006118 <_sbrk_r>
 8005d40:	1c43      	adds	r3, r0, #1
 8005d42:	d00a      	beq.n	8005d5a <sbrk_aligned+0x36>
 8005d44:	2303      	movs	r3, #3
 8005d46:	1cc5      	adds	r5, r0, #3
 8005d48:	439d      	bics	r5, r3
 8005d4a:	42a8      	cmp	r0, r5
 8005d4c:	d007      	beq.n	8005d5e <sbrk_aligned+0x3a>
 8005d4e:	1a29      	subs	r1, r5, r0
 8005d50:	0020      	movs	r0, r4
 8005d52:	f000 f9e1 	bl	8006118 <_sbrk_r>
 8005d56:	1c43      	adds	r3, r0, #1
 8005d58:	d101      	bne.n	8005d5e <sbrk_aligned+0x3a>
 8005d5a:	2501      	movs	r5, #1
 8005d5c:	426d      	negs	r5, r5
 8005d5e:	0028      	movs	r0, r5
 8005d60:	bd70      	pop	{r4, r5, r6, pc}
 8005d62:	46c0      	nop			; (mov r8, r8)
 8005d64:	20000370 	.word	0x20000370

08005d68 <_malloc_r>:
 8005d68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d6a:	2203      	movs	r2, #3
 8005d6c:	1ccb      	adds	r3, r1, #3
 8005d6e:	4393      	bics	r3, r2
 8005d70:	3308      	adds	r3, #8
 8005d72:	0006      	movs	r6, r0
 8005d74:	001f      	movs	r7, r3
 8005d76:	2b0c      	cmp	r3, #12
 8005d78:	d232      	bcs.n	8005de0 <_malloc_r+0x78>
 8005d7a:	270c      	movs	r7, #12
 8005d7c:	42b9      	cmp	r1, r7
 8005d7e:	d831      	bhi.n	8005de4 <_malloc_r+0x7c>
 8005d80:	0030      	movs	r0, r6
 8005d82:	f000 fa2f 	bl	80061e4 <__malloc_lock>
 8005d86:	4d32      	ldr	r5, [pc, #200]	; (8005e50 <_malloc_r+0xe8>)
 8005d88:	682b      	ldr	r3, [r5, #0]
 8005d8a:	001c      	movs	r4, r3
 8005d8c:	2c00      	cmp	r4, #0
 8005d8e:	d12e      	bne.n	8005dee <_malloc_r+0x86>
 8005d90:	0039      	movs	r1, r7
 8005d92:	0030      	movs	r0, r6
 8005d94:	f7ff ffc6 	bl	8005d24 <sbrk_aligned>
 8005d98:	0004      	movs	r4, r0
 8005d9a:	1c43      	adds	r3, r0, #1
 8005d9c:	d11e      	bne.n	8005ddc <_malloc_r+0x74>
 8005d9e:	682c      	ldr	r4, [r5, #0]
 8005da0:	0025      	movs	r5, r4
 8005da2:	2d00      	cmp	r5, #0
 8005da4:	d14a      	bne.n	8005e3c <_malloc_r+0xd4>
 8005da6:	6823      	ldr	r3, [r4, #0]
 8005da8:	0029      	movs	r1, r5
 8005daa:	18e3      	adds	r3, r4, r3
 8005dac:	0030      	movs	r0, r6
 8005dae:	9301      	str	r3, [sp, #4]
 8005db0:	f000 f9b2 	bl	8006118 <_sbrk_r>
 8005db4:	9b01      	ldr	r3, [sp, #4]
 8005db6:	4283      	cmp	r3, r0
 8005db8:	d143      	bne.n	8005e42 <_malloc_r+0xda>
 8005dba:	6823      	ldr	r3, [r4, #0]
 8005dbc:	3703      	adds	r7, #3
 8005dbe:	1aff      	subs	r7, r7, r3
 8005dc0:	2303      	movs	r3, #3
 8005dc2:	439f      	bics	r7, r3
 8005dc4:	3708      	adds	r7, #8
 8005dc6:	2f0c      	cmp	r7, #12
 8005dc8:	d200      	bcs.n	8005dcc <_malloc_r+0x64>
 8005dca:	270c      	movs	r7, #12
 8005dcc:	0039      	movs	r1, r7
 8005dce:	0030      	movs	r0, r6
 8005dd0:	f7ff ffa8 	bl	8005d24 <sbrk_aligned>
 8005dd4:	1c43      	adds	r3, r0, #1
 8005dd6:	d034      	beq.n	8005e42 <_malloc_r+0xda>
 8005dd8:	6823      	ldr	r3, [r4, #0]
 8005dda:	19df      	adds	r7, r3, r7
 8005ddc:	6027      	str	r7, [r4, #0]
 8005dde:	e013      	b.n	8005e08 <_malloc_r+0xa0>
 8005de0:	2b00      	cmp	r3, #0
 8005de2:	dacb      	bge.n	8005d7c <_malloc_r+0x14>
 8005de4:	230c      	movs	r3, #12
 8005de6:	2500      	movs	r5, #0
 8005de8:	6033      	str	r3, [r6, #0]
 8005dea:	0028      	movs	r0, r5
 8005dec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005dee:	6822      	ldr	r2, [r4, #0]
 8005df0:	1bd1      	subs	r1, r2, r7
 8005df2:	d420      	bmi.n	8005e36 <_malloc_r+0xce>
 8005df4:	290b      	cmp	r1, #11
 8005df6:	d917      	bls.n	8005e28 <_malloc_r+0xc0>
 8005df8:	19e2      	adds	r2, r4, r7
 8005dfa:	6027      	str	r7, [r4, #0]
 8005dfc:	42a3      	cmp	r3, r4
 8005dfe:	d111      	bne.n	8005e24 <_malloc_r+0xbc>
 8005e00:	602a      	str	r2, [r5, #0]
 8005e02:	6863      	ldr	r3, [r4, #4]
 8005e04:	6011      	str	r1, [r2, #0]
 8005e06:	6053      	str	r3, [r2, #4]
 8005e08:	0030      	movs	r0, r6
 8005e0a:	0025      	movs	r5, r4
 8005e0c:	f000 f9f2 	bl	80061f4 <__malloc_unlock>
 8005e10:	2207      	movs	r2, #7
 8005e12:	350b      	adds	r5, #11
 8005e14:	1d23      	adds	r3, r4, #4
 8005e16:	4395      	bics	r5, r2
 8005e18:	1aea      	subs	r2, r5, r3
 8005e1a:	429d      	cmp	r5, r3
 8005e1c:	d0e5      	beq.n	8005dea <_malloc_r+0x82>
 8005e1e:	1b5b      	subs	r3, r3, r5
 8005e20:	50a3      	str	r3, [r4, r2]
 8005e22:	e7e2      	b.n	8005dea <_malloc_r+0x82>
 8005e24:	605a      	str	r2, [r3, #4]
 8005e26:	e7ec      	b.n	8005e02 <_malloc_r+0x9a>
 8005e28:	6862      	ldr	r2, [r4, #4]
 8005e2a:	42a3      	cmp	r3, r4
 8005e2c:	d101      	bne.n	8005e32 <_malloc_r+0xca>
 8005e2e:	602a      	str	r2, [r5, #0]
 8005e30:	e7ea      	b.n	8005e08 <_malloc_r+0xa0>
 8005e32:	605a      	str	r2, [r3, #4]
 8005e34:	e7e8      	b.n	8005e08 <_malloc_r+0xa0>
 8005e36:	0023      	movs	r3, r4
 8005e38:	6864      	ldr	r4, [r4, #4]
 8005e3a:	e7a7      	b.n	8005d8c <_malloc_r+0x24>
 8005e3c:	002c      	movs	r4, r5
 8005e3e:	686d      	ldr	r5, [r5, #4]
 8005e40:	e7af      	b.n	8005da2 <_malloc_r+0x3a>
 8005e42:	230c      	movs	r3, #12
 8005e44:	0030      	movs	r0, r6
 8005e46:	6033      	str	r3, [r6, #0]
 8005e48:	f000 f9d4 	bl	80061f4 <__malloc_unlock>
 8005e4c:	e7cd      	b.n	8005dea <_malloc_r+0x82>
 8005e4e:	46c0      	nop			; (mov r8, r8)
 8005e50:	2000036c 	.word	0x2000036c

08005e54 <__ssputs_r>:
 8005e54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e56:	688e      	ldr	r6, [r1, #8]
 8005e58:	b085      	sub	sp, #20
 8005e5a:	0007      	movs	r7, r0
 8005e5c:	000c      	movs	r4, r1
 8005e5e:	9203      	str	r2, [sp, #12]
 8005e60:	9301      	str	r3, [sp, #4]
 8005e62:	429e      	cmp	r6, r3
 8005e64:	d83c      	bhi.n	8005ee0 <__ssputs_r+0x8c>
 8005e66:	2390      	movs	r3, #144	; 0x90
 8005e68:	898a      	ldrh	r2, [r1, #12]
 8005e6a:	00db      	lsls	r3, r3, #3
 8005e6c:	421a      	tst	r2, r3
 8005e6e:	d034      	beq.n	8005eda <__ssputs_r+0x86>
 8005e70:	6909      	ldr	r1, [r1, #16]
 8005e72:	6823      	ldr	r3, [r4, #0]
 8005e74:	6960      	ldr	r0, [r4, #20]
 8005e76:	1a5b      	subs	r3, r3, r1
 8005e78:	9302      	str	r3, [sp, #8]
 8005e7a:	2303      	movs	r3, #3
 8005e7c:	4343      	muls	r3, r0
 8005e7e:	0fdd      	lsrs	r5, r3, #31
 8005e80:	18ed      	adds	r5, r5, r3
 8005e82:	9b01      	ldr	r3, [sp, #4]
 8005e84:	9802      	ldr	r0, [sp, #8]
 8005e86:	3301      	adds	r3, #1
 8005e88:	181b      	adds	r3, r3, r0
 8005e8a:	106d      	asrs	r5, r5, #1
 8005e8c:	42ab      	cmp	r3, r5
 8005e8e:	d900      	bls.n	8005e92 <__ssputs_r+0x3e>
 8005e90:	001d      	movs	r5, r3
 8005e92:	0553      	lsls	r3, r2, #21
 8005e94:	d532      	bpl.n	8005efc <__ssputs_r+0xa8>
 8005e96:	0029      	movs	r1, r5
 8005e98:	0038      	movs	r0, r7
 8005e9a:	f7ff ff65 	bl	8005d68 <_malloc_r>
 8005e9e:	1e06      	subs	r6, r0, #0
 8005ea0:	d109      	bne.n	8005eb6 <__ssputs_r+0x62>
 8005ea2:	230c      	movs	r3, #12
 8005ea4:	603b      	str	r3, [r7, #0]
 8005ea6:	2340      	movs	r3, #64	; 0x40
 8005ea8:	2001      	movs	r0, #1
 8005eaa:	89a2      	ldrh	r2, [r4, #12]
 8005eac:	4240      	negs	r0, r0
 8005eae:	4313      	orrs	r3, r2
 8005eb0:	81a3      	strh	r3, [r4, #12]
 8005eb2:	b005      	add	sp, #20
 8005eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005eb6:	9a02      	ldr	r2, [sp, #8]
 8005eb8:	6921      	ldr	r1, [r4, #16]
 8005eba:	f7ff fb18 	bl	80054ee <memcpy>
 8005ebe:	89a3      	ldrh	r3, [r4, #12]
 8005ec0:	4a14      	ldr	r2, [pc, #80]	; (8005f14 <__ssputs_r+0xc0>)
 8005ec2:	401a      	ands	r2, r3
 8005ec4:	2380      	movs	r3, #128	; 0x80
 8005ec6:	4313      	orrs	r3, r2
 8005ec8:	81a3      	strh	r3, [r4, #12]
 8005eca:	9b02      	ldr	r3, [sp, #8]
 8005ecc:	6126      	str	r6, [r4, #16]
 8005ece:	18f6      	adds	r6, r6, r3
 8005ed0:	6026      	str	r6, [r4, #0]
 8005ed2:	6165      	str	r5, [r4, #20]
 8005ed4:	9e01      	ldr	r6, [sp, #4]
 8005ed6:	1aed      	subs	r5, r5, r3
 8005ed8:	60a5      	str	r5, [r4, #8]
 8005eda:	9b01      	ldr	r3, [sp, #4]
 8005edc:	429e      	cmp	r6, r3
 8005ede:	d900      	bls.n	8005ee2 <__ssputs_r+0x8e>
 8005ee0:	9e01      	ldr	r6, [sp, #4]
 8005ee2:	0032      	movs	r2, r6
 8005ee4:	9903      	ldr	r1, [sp, #12]
 8005ee6:	6820      	ldr	r0, [r4, #0]
 8005ee8:	f000 f968 	bl	80061bc <memmove>
 8005eec:	68a3      	ldr	r3, [r4, #8]
 8005eee:	2000      	movs	r0, #0
 8005ef0:	1b9b      	subs	r3, r3, r6
 8005ef2:	60a3      	str	r3, [r4, #8]
 8005ef4:	6823      	ldr	r3, [r4, #0]
 8005ef6:	199e      	adds	r6, r3, r6
 8005ef8:	6026      	str	r6, [r4, #0]
 8005efa:	e7da      	b.n	8005eb2 <__ssputs_r+0x5e>
 8005efc:	002a      	movs	r2, r5
 8005efe:	0038      	movs	r0, r7
 8005f00:	f000 f980 	bl	8006204 <_realloc_r>
 8005f04:	1e06      	subs	r6, r0, #0
 8005f06:	d1e0      	bne.n	8005eca <__ssputs_r+0x76>
 8005f08:	0038      	movs	r0, r7
 8005f0a:	6921      	ldr	r1, [r4, #16]
 8005f0c:	f7ff fec0 	bl	8005c90 <_free_r>
 8005f10:	e7c7      	b.n	8005ea2 <__ssputs_r+0x4e>
 8005f12:	46c0      	nop			; (mov r8, r8)
 8005f14:	fffffb7f 	.word	0xfffffb7f

08005f18 <_svfiprintf_r>:
 8005f18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f1a:	b0a1      	sub	sp, #132	; 0x84
 8005f1c:	9003      	str	r0, [sp, #12]
 8005f1e:	001d      	movs	r5, r3
 8005f20:	898b      	ldrh	r3, [r1, #12]
 8005f22:	000f      	movs	r7, r1
 8005f24:	0016      	movs	r6, r2
 8005f26:	061b      	lsls	r3, r3, #24
 8005f28:	d511      	bpl.n	8005f4e <_svfiprintf_r+0x36>
 8005f2a:	690b      	ldr	r3, [r1, #16]
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d10e      	bne.n	8005f4e <_svfiprintf_r+0x36>
 8005f30:	2140      	movs	r1, #64	; 0x40
 8005f32:	f7ff ff19 	bl	8005d68 <_malloc_r>
 8005f36:	6038      	str	r0, [r7, #0]
 8005f38:	6138      	str	r0, [r7, #16]
 8005f3a:	2800      	cmp	r0, #0
 8005f3c:	d105      	bne.n	8005f4a <_svfiprintf_r+0x32>
 8005f3e:	230c      	movs	r3, #12
 8005f40:	9a03      	ldr	r2, [sp, #12]
 8005f42:	3801      	subs	r0, #1
 8005f44:	6013      	str	r3, [r2, #0]
 8005f46:	b021      	add	sp, #132	; 0x84
 8005f48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f4a:	2340      	movs	r3, #64	; 0x40
 8005f4c:	617b      	str	r3, [r7, #20]
 8005f4e:	2300      	movs	r3, #0
 8005f50:	ac08      	add	r4, sp, #32
 8005f52:	6163      	str	r3, [r4, #20]
 8005f54:	3320      	adds	r3, #32
 8005f56:	7663      	strb	r3, [r4, #25]
 8005f58:	3310      	adds	r3, #16
 8005f5a:	76a3      	strb	r3, [r4, #26]
 8005f5c:	9507      	str	r5, [sp, #28]
 8005f5e:	0035      	movs	r5, r6
 8005f60:	782b      	ldrb	r3, [r5, #0]
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d001      	beq.n	8005f6a <_svfiprintf_r+0x52>
 8005f66:	2b25      	cmp	r3, #37	; 0x25
 8005f68:	d147      	bne.n	8005ffa <_svfiprintf_r+0xe2>
 8005f6a:	1bab      	subs	r3, r5, r6
 8005f6c:	9305      	str	r3, [sp, #20]
 8005f6e:	42b5      	cmp	r5, r6
 8005f70:	d00c      	beq.n	8005f8c <_svfiprintf_r+0x74>
 8005f72:	0032      	movs	r2, r6
 8005f74:	0039      	movs	r1, r7
 8005f76:	9803      	ldr	r0, [sp, #12]
 8005f78:	f7ff ff6c 	bl	8005e54 <__ssputs_r>
 8005f7c:	1c43      	adds	r3, r0, #1
 8005f7e:	d100      	bne.n	8005f82 <_svfiprintf_r+0x6a>
 8005f80:	e0ae      	b.n	80060e0 <_svfiprintf_r+0x1c8>
 8005f82:	6962      	ldr	r2, [r4, #20]
 8005f84:	9b05      	ldr	r3, [sp, #20]
 8005f86:	4694      	mov	ip, r2
 8005f88:	4463      	add	r3, ip
 8005f8a:	6163      	str	r3, [r4, #20]
 8005f8c:	782b      	ldrb	r3, [r5, #0]
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d100      	bne.n	8005f94 <_svfiprintf_r+0x7c>
 8005f92:	e0a5      	b.n	80060e0 <_svfiprintf_r+0x1c8>
 8005f94:	2201      	movs	r2, #1
 8005f96:	2300      	movs	r3, #0
 8005f98:	4252      	negs	r2, r2
 8005f9a:	6062      	str	r2, [r4, #4]
 8005f9c:	a904      	add	r1, sp, #16
 8005f9e:	3254      	adds	r2, #84	; 0x54
 8005fa0:	1852      	adds	r2, r2, r1
 8005fa2:	1c6e      	adds	r6, r5, #1
 8005fa4:	6023      	str	r3, [r4, #0]
 8005fa6:	60e3      	str	r3, [r4, #12]
 8005fa8:	60a3      	str	r3, [r4, #8]
 8005faa:	7013      	strb	r3, [r2, #0]
 8005fac:	65a3      	str	r3, [r4, #88]	; 0x58
 8005fae:	2205      	movs	r2, #5
 8005fb0:	7831      	ldrb	r1, [r6, #0]
 8005fb2:	4854      	ldr	r0, [pc, #336]	; (8006104 <_svfiprintf_r+0x1ec>)
 8005fb4:	f7ff fa90 	bl	80054d8 <memchr>
 8005fb8:	1c75      	adds	r5, r6, #1
 8005fba:	2800      	cmp	r0, #0
 8005fbc:	d11f      	bne.n	8005ffe <_svfiprintf_r+0xe6>
 8005fbe:	6822      	ldr	r2, [r4, #0]
 8005fc0:	06d3      	lsls	r3, r2, #27
 8005fc2:	d504      	bpl.n	8005fce <_svfiprintf_r+0xb6>
 8005fc4:	2353      	movs	r3, #83	; 0x53
 8005fc6:	a904      	add	r1, sp, #16
 8005fc8:	185b      	adds	r3, r3, r1
 8005fca:	2120      	movs	r1, #32
 8005fcc:	7019      	strb	r1, [r3, #0]
 8005fce:	0713      	lsls	r3, r2, #28
 8005fd0:	d504      	bpl.n	8005fdc <_svfiprintf_r+0xc4>
 8005fd2:	2353      	movs	r3, #83	; 0x53
 8005fd4:	a904      	add	r1, sp, #16
 8005fd6:	185b      	adds	r3, r3, r1
 8005fd8:	212b      	movs	r1, #43	; 0x2b
 8005fda:	7019      	strb	r1, [r3, #0]
 8005fdc:	7833      	ldrb	r3, [r6, #0]
 8005fde:	2b2a      	cmp	r3, #42	; 0x2a
 8005fe0:	d016      	beq.n	8006010 <_svfiprintf_r+0xf8>
 8005fe2:	0035      	movs	r5, r6
 8005fe4:	2100      	movs	r1, #0
 8005fe6:	200a      	movs	r0, #10
 8005fe8:	68e3      	ldr	r3, [r4, #12]
 8005fea:	782a      	ldrb	r2, [r5, #0]
 8005fec:	1c6e      	adds	r6, r5, #1
 8005fee:	3a30      	subs	r2, #48	; 0x30
 8005ff0:	2a09      	cmp	r2, #9
 8005ff2:	d94e      	bls.n	8006092 <_svfiprintf_r+0x17a>
 8005ff4:	2900      	cmp	r1, #0
 8005ff6:	d111      	bne.n	800601c <_svfiprintf_r+0x104>
 8005ff8:	e017      	b.n	800602a <_svfiprintf_r+0x112>
 8005ffa:	3501      	adds	r5, #1
 8005ffc:	e7b0      	b.n	8005f60 <_svfiprintf_r+0x48>
 8005ffe:	4b41      	ldr	r3, [pc, #260]	; (8006104 <_svfiprintf_r+0x1ec>)
 8006000:	6822      	ldr	r2, [r4, #0]
 8006002:	1ac0      	subs	r0, r0, r3
 8006004:	2301      	movs	r3, #1
 8006006:	4083      	lsls	r3, r0
 8006008:	4313      	orrs	r3, r2
 800600a:	002e      	movs	r6, r5
 800600c:	6023      	str	r3, [r4, #0]
 800600e:	e7ce      	b.n	8005fae <_svfiprintf_r+0x96>
 8006010:	9b07      	ldr	r3, [sp, #28]
 8006012:	1d19      	adds	r1, r3, #4
 8006014:	681b      	ldr	r3, [r3, #0]
 8006016:	9107      	str	r1, [sp, #28]
 8006018:	2b00      	cmp	r3, #0
 800601a:	db01      	blt.n	8006020 <_svfiprintf_r+0x108>
 800601c:	930b      	str	r3, [sp, #44]	; 0x2c
 800601e:	e004      	b.n	800602a <_svfiprintf_r+0x112>
 8006020:	425b      	negs	r3, r3
 8006022:	60e3      	str	r3, [r4, #12]
 8006024:	2302      	movs	r3, #2
 8006026:	4313      	orrs	r3, r2
 8006028:	6023      	str	r3, [r4, #0]
 800602a:	782b      	ldrb	r3, [r5, #0]
 800602c:	2b2e      	cmp	r3, #46	; 0x2e
 800602e:	d10a      	bne.n	8006046 <_svfiprintf_r+0x12e>
 8006030:	786b      	ldrb	r3, [r5, #1]
 8006032:	2b2a      	cmp	r3, #42	; 0x2a
 8006034:	d135      	bne.n	80060a2 <_svfiprintf_r+0x18a>
 8006036:	9b07      	ldr	r3, [sp, #28]
 8006038:	3502      	adds	r5, #2
 800603a:	1d1a      	adds	r2, r3, #4
 800603c:	681b      	ldr	r3, [r3, #0]
 800603e:	9207      	str	r2, [sp, #28]
 8006040:	2b00      	cmp	r3, #0
 8006042:	db2b      	blt.n	800609c <_svfiprintf_r+0x184>
 8006044:	9309      	str	r3, [sp, #36]	; 0x24
 8006046:	4e30      	ldr	r6, [pc, #192]	; (8006108 <_svfiprintf_r+0x1f0>)
 8006048:	2203      	movs	r2, #3
 800604a:	0030      	movs	r0, r6
 800604c:	7829      	ldrb	r1, [r5, #0]
 800604e:	f7ff fa43 	bl	80054d8 <memchr>
 8006052:	2800      	cmp	r0, #0
 8006054:	d006      	beq.n	8006064 <_svfiprintf_r+0x14c>
 8006056:	2340      	movs	r3, #64	; 0x40
 8006058:	1b80      	subs	r0, r0, r6
 800605a:	4083      	lsls	r3, r0
 800605c:	6822      	ldr	r2, [r4, #0]
 800605e:	3501      	adds	r5, #1
 8006060:	4313      	orrs	r3, r2
 8006062:	6023      	str	r3, [r4, #0]
 8006064:	7829      	ldrb	r1, [r5, #0]
 8006066:	2206      	movs	r2, #6
 8006068:	4828      	ldr	r0, [pc, #160]	; (800610c <_svfiprintf_r+0x1f4>)
 800606a:	1c6e      	adds	r6, r5, #1
 800606c:	7621      	strb	r1, [r4, #24]
 800606e:	f7ff fa33 	bl	80054d8 <memchr>
 8006072:	2800      	cmp	r0, #0
 8006074:	d03c      	beq.n	80060f0 <_svfiprintf_r+0x1d8>
 8006076:	4b26      	ldr	r3, [pc, #152]	; (8006110 <_svfiprintf_r+0x1f8>)
 8006078:	2b00      	cmp	r3, #0
 800607a:	d125      	bne.n	80060c8 <_svfiprintf_r+0x1b0>
 800607c:	2207      	movs	r2, #7
 800607e:	9b07      	ldr	r3, [sp, #28]
 8006080:	3307      	adds	r3, #7
 8006082:	4393      	bics	r3, r2
 8006084:	3308      	adds	r3, #8
 8006086:	9307      	str	r3, [sp, #28]
 8006088:	6963      	ldr	r3, [r4, #20]
 800608a:	9a04      	ldr	r2, [sp, #16]
 800608c:	189b      	adds	r3, r3, r2
 800608e:	6163      	str	r3, [r4, #20]
 8006090:	e765      	b.n	8005f5e <_svfiprintf_r+0x46>
 8006092:	4343      	muls	r3, r0
 8006094:	0035      	movs	r5, r6
 8006096:	2101      	movs	r1, #1
 8006098:	189b      	adds	r3, r3, r2
 800609a:	e7a6      	b.n	8005fea <_svfiprintf_r+0xd2>
 800609c:	2301      	movs	r3, #1
 800609e:	425b      	negs	r3, r3
 80060a0:	e7d0      	b.n	8006044 <_svfiprintf_r+0x12c>
 80060a2:	2300      	movs	r3, #0
 80060a4:	200a      	movs	r0, #10
 80060a6:	001a      	movs	r2, r3
 80060a8:	3501      	adds	r5, #1
 80060aa:	6063      	str	r3, [r4, #4]
 80060ac:	7829      	ldrb	r1, [r5, #0]
 80060ae:	1c6e      	adds	r6, r5, #1
 80060b0:	3930      	subs	r1, #48	; 0x30
 80060b2:	2909      	cmp	r1, #9
 80060b4:	d903      	bls.n	80060be <_svfiprintf_r+0x1a6>
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d0c5      	beq.n	8006046 <_svfiprintf_r+0x12e>
 80060ba:	9209      	str	r2, [sp, #36]	; 0x24
 80060bc:	e7c3      	b.n	8006046 <_svfiprintf_r+0x12e>
 80060be:	4342      	muls	r2, r0
 80060c0:	0035      	movs	r5, r6
 80060c2:	2301      	movs	r3, #1
 80060c4:	1852      	adds	r2, r2, r1
 80060c6:	e7f1      	b.n	80060ac <_svfiprintf_r+0x194>
 80060c8:	ab07      	add	r3, sp, #28
 80060ca:	9300      	str	r3, [sp, #0]
 80060cc:	003a      	movs	r2, r7
 80060ce:	0021      	movs	r1, r4
 80060d0:	4b10      	ldr	r3, [pc, #64]	; (8006114 <_svfiprintf_r+0x1fc>)
 80060d2:	9803      	ldr	r0, [sp, #12]
 80060d4:	f7fd ff50 	bl	8003f78 <_printf_float>
 80060d8:	9004      	str	r0, [sp, #16]
 80060da:	9b04      	ldr	r3, [sp, #16]
 80060dc:	3301      	adds	r3, #1
 80060de:	d1d3      	bne.n	8006088 <_svfiprintf_r+0x170>
 80060e0:	89bb      	ldrh	r3, [r7, #12]
 80060e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80060e4:	065b      	lsls	r3, r3, #25
 80060e6:	d400      	bmi.n	80060ea <_svfiprintf_r+0x1d2>
 80060e8:	e72d      	b.n	8005f46 <_svfiprintf_r+0x2e>
 80060ea:	2001      	movs	r0, #1
 80060ec:	4240      	negs	r0, r0
 80060ee:	e72a      	b.n	8005f46 <_svfiprintf_r+0x2e>
 80060f0:	ab07      	add	r3, sp, #28
 80060f2:	9300      	str	r3, [sp, #0]
 80060f4:	003a      	movs	r2, r7
 80060f6:	0021      	movs	r1, r4
 80060f8:	4b06      	ldr	r3, [pc, #24]	; (8006114 <_svfiprintf_r+0x1fc>)
 80060fa:	9803      	ldr	r0, [sp, #12]
 80060fc:	f7fe f9ee 	bl	80044dc <_printf_i>
 8006100:	e7ea      	b.n	80060d8 <_svfiprintf_r+0x1c0>
 8006102:	46c0      	nop			; (mov r8, r8)
 8006104:	080070cc 	.word	0x080070cc
 8006108:	080070d2 	.word	0x080070d2
 800610c:	080070d6 	.word	0x080070d6
 8006110:	08003f79 	.word	0x08003f79
 8006114:	08005e55 	.word	0x08005e55

08006118 <_sbrk_r>:
 8006118:	2300      	movs	r3, #0
 800611a:	b570      	push	{r4, r5, r6, lr}
 800611c:	4d06      	ldr	r5, [pc, #24]	; (8006138 <_sbrk_r+0x20>)
 800611e:	0004      	movs	r4, r0
 8006120:	0008      	movs	r0, r1
 8006122:	602b      	str	r3, [r5, #0]
 8006124:	f7fc fc12 	bl	800294c <_sbrk>
 8006128:	1c43      	adds	r3, r0, #1
 800612a:	d103      	bne.n	8006134 <_sbrk_r+0x1c>
 800612c:	682b      	ldr	r3, [r5, #0]
 800612e:	2b00      	cmp	r3, #0
 8006130:	d000      	beq.n	8006134 <_sbrk_r+0x1c>
 8006132:	6023      	str	r3, [r4, #0]
 8006134:	bd70      	pop	{r4, r5, r6, pc}
 8006136:	46c0      	nop			; (mov r8, r8)
 8006138:	20000374 	.word	0x20000374

0800613c <__assert_func>:
 800613c:	b530      	push	{r4, r5, lr}
 800613e:	0014      	movs	r4, r2
 8006140:	001a      	movs	r2, r3
 8006142:	4b09      	ldr	r3, [pc, #36]	; (8006168 <__assert_func+0x2c>)
 8006144:	0005      	movs	r5, r0
 8006146:	681b      	ldr	r3, [r3, #0]
 8006148:	b085      	sub	sp, #20
 800614a:	68d8      	ldr	r0, [r3, #12]
 800614c:	4b07      	ldr	r3, [pc, #28]	; (800616c <__assert_func+0x30>)
 800614e:	2c00      	cmp	r4, #0
 8006150:	d101      	bne.n	8006156 <__assert_func+0x1a>
 8006152:	4b07      	ldr	r3, [pc, #28]	; (8006170 <__assert_func+0x34>)
 8006154:	001c      	movs	r4, r3
 8006156:	9301      	str	r3, [sp, #4]
 8006158:	9100      	str	r1, [sp, #0]
 800615a:	002b      	movs	r3, r5
 800615c:	4905      	ldr	r1, [pc, #20]	; (8006174 <__assert_func+0x38>)
 800615e:	9402      	str	r4, [sp, #8]
 8006160:	f000 f80a 	bl	8006178 <fiprintf>
 8006164:	f000 faba 	bl	80066dc <abort>
 8006168:	2000004c 	.word	0x2000004c
 800616c:	080070dd 	.word	0x080070dd
 8006170:	08006e5d 	.word	0x08006e5d
 8006174:	080070ea 	.word	0x080070ea

08006178 <fiprintf>:
 8006178:	b40e      	push	{r1, r2, r3}
 800617a:	b503      	push	{r0, r1, lr}
 800617c:	0001      	movs	r1, r0
 800617e:	ab03      	add	r3, sp, #12
 8006180:	4804      	ldr	r0, [pc, #16]	; (8006194 <fiprintf+0x1c>)
 8006182:	cb04      	ldmia	r3!, {r2}
 8006184:	6800      	ldr	r0, [r0, #0]
 8006186:	9301      	str	r3, [sp, #4]
 8006188:	f000 f892 	bl	80062b0 <_vfiprintf_r>
 800618c:	b002      	add	sp, #8
 800618e:	bc08      	pop	{r3}
 8006190:	b003      	add	sp, #12
 8006192:	4718      	bx	r3
 8006194:	2000004c 	.word	0x2000004c

08006198 <__ascii_mbtowc>:
 8006198:	b082      	sub	sp, #8
 800619a:	2900      	cmp	r1, #0
 800619c:	d100      	bne.n	80061a0 <__ascii_mbtowc+0x8>
 800619e:	a901      	add	r1, sp, #4
 80061a0:	1e10      	subs	r0, r2, #0
 80061a2:	d006      	beq.n	80061b2 <__ascii_mbtowc+0x1a>
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d006      	beq.n	80061b6 <__ascii_mbtowc+0x1e>
 80061a8:	7813      	ldrb	r3, [r2, #0]
 80061aa:	600b      	str	r3, [r1, #0]
 80061ac:	7810      	ldrb	r0, [r2, #0]
 80061ae:	1e43      	subs	r3, r0, #1
 80061b0:	4198      	sbcs	r0, r3
 80061b2:	b002      	add	sp, #8
 80061b4:	4770      	bx	lr
 80061b6:	2002      	movs	r0, #2
 80061b8:	4240      	negs	r0, r0
 80061ba:	e7fa      	b.n	80061b2 <__ascii_mbtowc+0x1a>

080061bc <memmove>:
 80061bc:	b510      	push	{r4, lr}
 80061be:	4288      	cmp	r0, r1
 80061c0:	d902      	bls.n	80061c8 <memmove+0xc>
 80061c2:	188b      	adds	r3, r1, r2
 80061c4:	4298      	cmp	r0, r3
 80061c6:	d303      	bcc.n	80061d0 <memmove+0x14>
 80061c8:	2300      	movs	r3, #0
 80061ca:	e007      	b.n	80061dc <memmove+0x20>
 80061cc:	5c8b      	ldrb	r3, [r1, r2]
 80061ce:	5483      	strb	r3, [r0, r2]
 80061d0:	3a01      	subs	r2, #1
 80061d2:	d2fb      	bcs.n	80061cc <memmove+0x10>
 80061d4:	bd10      	pop	{r4, pc}
 80061d6:	5ccc      	ldrb	r4, [r1, r3]
 80061d8:	54c4      	strb	r4, [r0, r3]
 80061da:	3301      	adds	r3, #1
 80061dc:	429a      	cmp	r2, r3
 80061de:	d1fa      	bne.n	80061d6 <memmove+0x1a>
 80061e0:	e7f8      	b.n	80061d4 <memmove+0x18>
	...

080061e4 <__malloc_lock>:
 80061e4:	b510      	push	{r4, lr}
 80061e6:	4802      	ldr	r0, [pc, #8]	; (80061f0 <__malloc_lock+0xc>)
 80061e8:	f000 fc4f 	bl	8006a8a <__retarget_lock_acquire_recursive>
 80061ec:	bd10      	pop	{r4, pc}
 80061ee:	46c0      	nop			; (mov r8, r8)
 80061f0:	20000378 	.word	0x20000378

080061f4 <__malloc_unlock>:
 80061f4:	b510      	push	{r4, lr}
 80061f6:	4802      	ldr	r0, [pc, #8]	; (8006200 <__malloc_unlock+0xc>)
 80061f8:	f000 fc48 	bl	8006a8c <__retarget_lock_release_recursive>
 80061fc:	bd10      	pop	{r4, pc}
 80061fe:	46c0      	nop			; (mov r8, r8)
 8006200:	20000378 	.word	0x20000378

08006204 <_realloc_r>:
 8006204:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006206:	0007      	movs	r7, r0
 8006208:	000e      	movs	r6, r1
 800620a:	0014      	movs	r4, r2
 800620c:	2900      	cmp	r1, #0
 800620e:	d105      	bne.n	800621c <_realloc_r+0x18>
 8006210:	0011      	movs	r1, r2
 8006212:	f7ff fda9 	bl	8005d68 <_malloc_r>
 8006216:	0005      	movs	r5, r0
 8006218:	0028      	movs	r0, r5
 800621a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800621c:	2a00      	cmp	r2, #0
 800621e:	d103      	bne.n	8006228 <_realloc_r+0x24>
 8006220:	f7ff fd36 	bl	8005c90 <_free_r>
 8006224:	0025      	movs	r5, r4
 8006226:	e7f7      	b.n	8006218 <_realloc_r+0x14>
 8006228:	f000 fc9e 	bl	8006b68 <_malloc_usable_size_r>
 800622c:	9001      	str	r0, [sp, #4]
 800622e:	4284      	cmp	r4, r0
 8006230:	d803      	bhi.n	800623a <_realloc_r+0x36>
 8006232:	0035      	movs	r5, r6
 8006234:	0843      	lsrs	r3, r0, #1
 8006236:	42a3      	cmp	r3, r4
 8006238:	d3ee      	bcc.n	8006218 <_realloc_r+0x14>
 800623a:	0021      	movs	r1, r4
 800623c:	0038      	movs	r0, r7
 800623e:	f7ff fd93 	bl	8005d68 <_malloc_r>
 8006242:	1e05      	subs	r5, r0, #0
 8006244:	d0e8      	beq.n	8006218 <_realloc_r+0x14>
 8006246:	9b01      	ldr	r3, [sp, #4]
 8006248:	0022      	movs	r2, r4
 800624a:	429c      	cmp	r4, r3
 800624c:	d900      	bls.n	8006250 <_realloc_r+0x4c>
 800624e:	001a      	movs	r2, r3
 8006250:	0031      	movs	r1, r6
 8006252:	0028      	movs	r0, r5
 8006254:	f7ff f94b 	bl	80054ee <memcpy>
 8006258:	0031      	movs	r1, r6
 800625a:	0038      	movs	r0, r7
 800625c:	f7ff fd18 	bl	8005c90 <_free_r>
 8006260:	e7da      	b.n	8006218 <_realloc_r+0x14>

08006262 <__sfputc_r>:
 8006262:	6893      	ldr	r3, [r2, #8]
 8006264:	b510      	push	{r4, lr}
 8006266:	3b01      	subs	r3, #1
 8006268:	6093      	str	r3, [r2, #8]
 800626a:	2b00      	cmp	r3, #0
 800626c:	da04      	bge.n	8006278 <__sfputc_r+0x16>
 800626e:	6994      	ldr	r4, [r2, #24]
 8006270:	42a3      	cmp	r3, r4
 8006272:	db07      	blt.n	8006284 <__sfputc_r+0x22>
 8006274:	290a      	cmp	r1, #10
 8006276:	d005      	beq.n	8006284 <__sfputc_r+0x22>
 8006278:	6813      	ldr	r3, [r2, #0]
 800627a:	1c58      	adds	r0, r3, #1
 800627c:	6010      	str	r0, [r2, #0]
 800627e:	7019      	strb	r1, [r3, #0]
 8006280:	0008      	movs	r0, r1
 8006282:	bd10      	pop	{r4, pc}
 8006284:	f000 f94e 	bl	8006524 <__swbuf_r>
 8006288:	0001      	movs	r1, r0
 800628a:	e7f9      	b.n	8006280 <__sfputc_r+0x1e>

0800628c <__sfputs_r>:
 800628c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800628e:	0006      	movs	r6, r0
 8006290:	000f      	movs	r7, r1
 8006292:	0014      	movs	r4, r2
 8006294:	18d5      	adds	r5, r2, r3
 8006296:	42ac      	cmp	r4, r5
 8006298:	d101      	bne.n	800629e <__sfputs_r+0x12>
 800629a:	2000      	movs	r0, #0
 800629c:	e007      	b.n	80062ae <__sfputs_r+0x22>
 800629e:	7821      	ldrb	r1, [r4, #0]
 80062a0:	003a      	movs	r2, r7
 80062a2:	0030      	movs	r0, r6
 80062a4:	f7ff ffdd 	bl	8006262 <__sfputc_r>
 80062a8:	3401      	adds	r4, #1
 80062aa:	1c43      	adds	r3, r0, #1
 80062ac:	d1f3      	bne.n	8006296 <__sfputs_r+0xa>
 80062ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080062b0 <_vfiprintf_r>:
 80062b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062b2:	b0a1      	sub	sp, #132	; 0x84
 80062b4:	0006      	movs	r6, r0
 80062b6:	000c      	movs	r4, r1
 80062b8:	001f      	movs	r7, r3
 80062ba:	9203      	str	r2, [sp, #12]
 80062bc:	2800      	cmp	r0, #0
 80062be:	d004      	beq.n	80062ca <_vfiprintf_r+0x1a>
 80062c0:	6983      	ldr	r3, [r0, #24]
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d101      	bne.n	80062ca <_vfiprintf_r+0x1a>
 80062c6:	f000 fb3f 	bl	8006948 <__sinit>
 80062ca:	4b8e      	ldr	r3, [pc, #568]	; (8006504 <_vfiprintf_r+0x254>)
 80062cc:	429c      	cmp	r4, r3
 80062ce:	d11c      	bne.n	800630a <_vfiprintf_r+0x5a>
 80062d0:	6874      	ldr	r4, [r6, #4]
 80062d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80062d4:	07db      	lsls	r3, r3, #31
 80062d6:	d405      	bmi.n	80062e4 <_vfiprintf_r+0x34>
 80062d8:	89a3      	ldrh	r3, [r4, #12]
 80062da:	059b      	lsls	r3, r3, #22
 80062dc:	d402      	bmi.n	80062e4 <_vfiprintf_r+0x34>
 80062de:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062e0:	f000 fbd3 	bl	8006a8a <__retarget_lock_acquire_recursive>
 80062e4:	89a3      	ldrh	r3, [r4, #12]
 80062e6:	071b      	lsls	r3, r3, #28
 80062e8:	d502      	bpl.n	80062f0 <_vfiprintf_r+0x40>
 80062ea:	6923      	ldr	r3, [r4, #16]
 80062ec:	2b00      	cmp	r3, #0
 80062ee:	d11d      	bne.n	800632c <_vfiprintf_r+0x7c>
 80062f0:	0021      	movs	r1, r4
 80062f2:	0030      	movs	r0, r6
 80062f4:	f000 f97a 	bl	80065ec <__swsetup_r>
 80062f8:	2800      	cmp	r0, #0
 80062fa:	d017      	beq.n	800632c <_vfiprintf_r+0x7c>
 80062fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80062fe:	07db      	lsls	r3, r3, #31
 8006300:	d50d      	bpl.n	800631e <_vfiprintf_r+0x6e>
 8006302:	2001      	movs	r0, #1
 8006304:	4240      	negs	r0, r0
 8006306:	b021      	add	sp, #132	; 0x84
 8006308:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800630a:	4b7f      	ldr	r3, [pc, #508]	; (8006508 <_vfiprintf_r+0x258>)
 800630c:	429c      	cmp	r4, r3
 800630e:	d101      	bne.n	8006314 <_vfiprintf_r+0x64>
 8006310:	68b4      	ldr	r4, [r6, #8]
 8006312:	e7de      	b.n	80062d2 <_vfiprintf_r+0x22>
 8006314:	4b7d      	ldr	r3, [pc, #500]	; (800650c <_vfiprintf_r+0x25c>)
 8006316:	429c      	cmp	r4, r3
 8006318:	d1db      	bne.n	80062d2 <_vfiprintf_r+0x22>
 800631a:	68f4      	ldr	r4, [r6, #12]
 800631c:	e7d9      	b.n	80062d2 <_vfiprintf_r+0x22>
 800631e:	89a3      	ldrh	r3, [r4, #12]
 8006320:	059b      	lsls	r3, r3, #22
 8006322:	d4ee      	bmi.n	8006302 <_vfiprintf_r+0x52>
 8006324:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006326:	f000 fbb1 	bl	8006a8c <__retarget_lock_release_recursive>
 800632a:	e7ea      	b.n	8006302 <_vfiprintf_r+0x52>
 800632c:	2300      	movs	r3, #0
 800632e:	ad08      	add	r5, sp, #32
 8006330:	616b      	str	r3, [r5, #20]
 8006332:	3320      	adds	r3, #32
 8006334:	766b      	strb	r3, [r5, #25]
 8006336:	3310      	adds	r3, #16
 8006338:	76ab      	strb	r3, [r5, #26]
 800633a:	9707      	str	r7, [sp, #28]
 800633c:	9f03      	ldr	r7, [sp, #12]
 800633e:	783b      	ldrb	r3, [r7, #0]
 8006340:	2b00      	cmp	r3, #0
 8006342:	d001      	beq.n	8006348 <_vfiprintf_r+0x98>
 8006344:	2b25      	cmp	r3, #37	; 0x25
 8006346:	d14e      	bne.n	80063e6 <_vfiprintf_r+0x136>
 8006348:	9b03      	ldr	r3, [sp, #12]
 800634a:	1afb      	subs	r3, r7, r3
 800634c:	9305      	str	r3, [sp, #20]
 800634e:	9b03      	ldr	r3, [sp, #12]
 8006350:	429f      	cmp	r7, r3
 8006352:	d00d      	beq.n	8006370 <_vfiprintf_r+0xc0>
 8006354:	9b05      	ldr	r3, [sp, #20]
 8006356:	0021      	movs	r1, r4
 8006358:	0030      	movs	r0, r6
 800635a:	9a03      	ldr	r2, [sp, #12]
 800635c:	f7ff ff96 	bl	800628c <__sfputs_r>
 8006360:	1c43      	adds	r3, r0, #1
 8006362:	d100      	bne.n	8006366 <_vfiprintf_r+0xb6>
 8006364:	e0b5      	b.n	80064d2 <_vfiprintf_r+0x222>
 8006366:	696a      	ldr	r2, [r5, #20]
 8006368:	9b05      	ldr	r3, [sp, #20]
 800636a:	4694      	mov	ip, r2
 800636c:	4463      	add	r3, ip
 800636e:	616b      	str	r3, [r5, #20]
 8006370:	783b      	ldrb	r3, [r7, #0]
 8006372:	2b00      	cmp	r3, #0
 8006374:	d100      	bne.n	8006378 <_vfiprintf_r+0xc8>
 8006376:	e0ac      	b.n	80064d2 <_vfiprintf_r+0x222>
 8006378:	2201      	movs	r2, #1
 800637a:	1c7b      	adds	r3, r7, #1
 800637c:	9303      	str	r3, [sp, #12]
 800637e:	2300      	movs	r3, #0
 8006380:	4252      	negs	r2, r2
 8006382:	606a      	str	r2, [r5, #4]
 8006384:	a904      	add	r1, sp, #16
 8006386:	3254      	adds	r2, #84	; 0x54
 8006388:	1852      	adds	r2, r2, r1
 800638a:	602b      	str	r3, [r5, #0]
 800638c:	60eb      	str	r3, [r5, #12]
 800638e:	60ab      	str	r3, [r5, #8]
 8006390:	7013      	strb	r3, [r2, #0]
 8006392:	65ab      	str	r3, [r5, #88]	; 0x58
 8006394:	9b03      	ldr	r3, [sp, #12]
 8006396:	2205      	movs	r2, #5
 8006398:	7819      	ldrb	r1, [r3, #0]
 800639a:	485d      	ldr	r0, [pc, #372]	; (8006510 <_vfiprintf_r+0x260>)
 800639c:	f7ff f89c 	bl	80054d8 <memchr>
 80063a0:	9b03      	ldr	r3, [sp, #12]
 80063a2:	1c5f      	adds	r7, r3, #1
 80063a4:	2800      	cmp	r0, #0
 80063a6:	d120      	bne.n	80063ea <_vfiprintf_r+0x13a>
 80063a8:	682a      	ldr	r2, [r5, #0]
 80063aa:	06d3      	lsls	r3, r2, #27
 80063ac:	d504      	bpl.n	80063b8 <_vfiprintf_r+0x108>
 80063ae:	2353      	movs	r3, #83	; 0x53
 80063b0:	a904      	add	r1, sp, #16
 80063b2:	185b      	adds	r3, r3, r1
 80063b4:	2120      	movs	r1, #32
 80063b6:	7019      	strb	r1, [r3, #0]
 80063b8:	0713      	lsls	r3, r2, #28
 80063ba:	d504      	bpl.n	80063c6 <_vfiprintf_r+0x116>
 80063bc:	2353      	movs	r3, #83	; 0x53
 80063be:	a904      	add	r1, sp, #16
 80063c0:	185b      	adds	r3, r3, r1
 80063c2:	212b      	movs	r1, #43	; 0x2b
 80063c4:	7019      	strb	r1, [r3, #0]
 80063c6:	9b03      	ldr	r3, [sp, #12]
 80063c8:	781b      	ldrb	r3, [r3, #0]
 80063ca:	2b2a      	cmp	r3, #42	; 0x2a
 80063cc:	d016      	beq.n	80063fc <_vfiprintf_r+0x14c>
 80063ce:	2100      	movs	r1, #0
 80063d0:	68eb      	ldr	r3, [r5, #12]
 80063d2:	9f03      	ldr	r7, [sp, #12]
 80063d4:	783a      	ldrb	r2, [r7, #0]
 80063d6:	1c78      	adds	r0, r7, #1
 80063d8:	3a30      	subs	r2, #48	; 0x30
 80063da:	4684      	mov	ip, r0
 80063dc:	2a09      	cmp	r2, #9
 80063de:	d94f      	bls.n	8006480 <_vfiprintf_r+0x1d0>
 80063e0:	2900      	cmp	r1, #0
 80063e2:	d111      	bne.n	8006408 <_vfiprintf_r+0x158>
 80063e4:	e017      	b.n	8006416 <_vfiprintf_r+0x166>
 80063e6:	3701      	adds	r7, #1
 80063e8:	e7a9      	b.n	800633e <_vfiprintf_r+0x8e>
 80063ea:	4b49      	ldr	r3, [pc, #292]	; (8006510 <_vfiprintf_r+0x260>)
 80063ec:	682a      	ldr	r2, [r5, #0]
 80063ee:	1ac0      	subs	r0, r0, r3
 80063f0:	2301      	movs	r3, #1
 80063f2:	4083      	lsls	r3, r0
 80063f4:	4313      	orrs	r3, r2
 80063f6:	602b      	str	r3, [r5, #0]
 80063f8:	9703      	str	r7, [sp, #12]
 80063fa:	e7cb      	b.n	8006394 <_vfiprintf_r+0xe4>
 80063fc:	9b07      	ldr	r3, [sp, #28]
 80063fe:	1d19      	adds	r1, r3, #4
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	9107      	str	r1, [sp, #28]
 8006404:	2b00      	cmp	r3, #0
 8006406:	db01      	blt.n	800640c <_vfiprintf_r+0x15c>
 8006408:	930b      	str	r3, [sp, #44]	; 0x2c
 800640a:	e004      	b.n	8006416 <_vfiprintf_r+0x166>
 800640c:	425b      	negs	r3, r3
 800640e:	60eb      	str	r3, [r5, #12]
 8006410:	2302      	movs	r3, #2
 8006412:	4313      	orrs	r3, r2
 8006414:	602b      	str	r3, [r5, #0]
 8006416:	783b      	ldrb	r3, [r7, #0]
 8006418:	2b2e      	cmp	r3, #46	; 0x2e
 800641a:	d10a      	bne.n	8006432 <_vfiprintf_r+0x182>
 800641c:	787b      	ldrb	r3, [r7, #1]
 800641e:	2b2a      	cmp	r3, #42	; 0x2a
 8006420:	d137      	bne.n	8006492 <_vfiprintf_r+0x1e2>
 8006422:	9b07      	ldr	r3, [sp, #28]
 8006424:	3702      	adds	r7, #2
 8006426:	1d1a      	adds	r2, r3, #4
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	9207      	str	r2, [sp, #28]
 800642c:	2b00      	cmp	r3, #0
 800642e:	db2d      	blt.n	800648c <_vfiprintf_r+0x1dc>
 8006430:	9309      	str	r3, [sp, #36]	; 0x24
 8006432:	2203      	movs	r2, #3
 8006434:	7839      	ldrb	r1, [r7, #0]
 8006436:	4837      	ldr	r0, [pc, #220]	; (8006514 <_vfiprintf_r+0x264>)
 8006438:	f7ff f84e 	bl	80054d8 <memchr>
 800643c:	2800      	cmp	r0, #0
 800643e:	d007      	beq.n	8006450 <_vfiprintf_r+0x1a0>
 8006440:	4b34      	ldr	r3, [pc, #208]	; (8006514 <_vfiprintf_r+0x264>)
 8006442:	682a      	ldr	r2, [r5, #0]
 8006444:	1ac0      	subs	r0, r0, r3
 8006446:	2340      	movs	r3, #64	; 0x40
 8006448:	4083      	lsls	r3, r0
 800644a:	4313      	orrs	r3, r2
 800644c:	3701      	adds	r7, #1
 800644e:	602b      	str	r3, [r5, #0]
 8006450:	7839      	ldrb	r1, [r7, #0]
 8006452:	1c7b      	adds	r3, r7, #1
 8006454:	2206      	movs	r2, #6
 8006456:	4830      	ldr	r0, [pc, #192]	; (8006518 <_vfiprintf_r+0x268>)
 8006458:	9303      	str	r3, [sp, #12]
 800645a:	7629      	strb	r1, [r5, #24]
 800645c:	f7ff f83c 	bl	80054d8 <memchr>
 8006460:	2800      	cmp	r0, #0
 8006462:	d045      	beq.n	80064f0 <_vfiprintf_r+0x240>
 8006464:	4b2d      	ldr	r3, [pc, #180]	; (800651c <_vfiprintf_r+0x26c>)
 8006466:	2b00      	cmp	r3, #0
 8006468:	d127      	bne.n	80064ba <_vfiprintf_r+0x20a>
 800646a:	2207      	movs	r2, #7
 800646c:	9b07      	ldr	r3, [sp, #28]
 800646e:	3307      	adds	r3, #7
 8006470:	4393      	bics	r3, r2
 8006472:	3308      	adds	r3, #8
 8006474:	9307      	str	r3, [sp, #28]
 8006476:	696b      	ldr	r3, [r5, #20]
 8006478:	9a04      	ldr	r2, [sp, #16]
 800647a:	189b      	adds	r3, r3, r2
 800647c:	616b      	str	r3, [r5, #20]
 800647e:	e75d      	b.n	800633c <_vfiprintf_r+0x8c>
 8006480:	210a      	movs	r1, #10
 8006482:	434b      	muls	r3, r1
 8006484:	4667      	mov	r7, ip
 8006486:	189b      	adds	r3, r3, r2
 8006488:	3909      	subs	r1, #9
 800648a:	e7a3      	b.n	80063d4 <_vfiprintf_r+0x124>
 800648c:	2301      	movs	r3, #1
 800648e:	425b      	negs	r3, r3
 8006490:	e7ce      	b.n	8006430 <_vfiprintf_r+0x180>
 8006492:	2300      	movs	r3, #0
 8006494:	001a      	movs	r2, r3
 8006496:	3701      	adds	r7, #1
 8006498:	606b      	str	r3, [r5, #4]
 800649a:	7839      	ldrb	r1, [r7, #0]
 800649c:	1c78      	adds	r0, r7, #1
 800649e:	3930      	subs	r1, #48	; 0x30
 80064a0:	4684      	mov	ip, r0
 80064a2:	2909      	cmp	r1, #9
 80064a4:	d903      	bls.n	80064ae <_vfiprintf_r+0x1fe>
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d0c3      	beq.n	8006432 <_vfiprintf_r+0x182>
 80064aa:	9209      	str	r2, [sp, #36]	; 0x24
 80064ac:	e7c1      	b.n	8006432 <_vfiprintf_r+0x182>
 80064ae:	230a      	movs	r3, #10
 80064b0:	435a      	muls	r2, r3
 80064b2:	4667      	mov	r7, ip
 80064b4:	1852      	adds	r2, r2, r1
 80064b6:	3b09      	subs	r3, #9
 80064b8:	e7ef      	b.n	800649a <_vfiprintf_r+0x1ea>
 80064ba:	ab07      	add	r3, sp, #28
 80064bc:	9300      	str	r3, [sp, #0]
 80064be:	0022      	movs	r2, r4
 80064c0:	0029      	movs	r1, r5
 80064c2:	0030      	movs	r0, r6
 80064c4:	4b16      	ldr	r3, [pc, #88]	; (8006520 <_vfiprintf_r+0x270>)
 80064c6:	f7fd fd57 	bl	8003f78 <_printf_float>
 80064ca:	9004      	str	r0, [sp, #16]
 80064cc:	9b04      	ldr	r3, [sp, #16]
 80064ce:	3301      	adds	r3, #1
 80064d0:	d1d1      	bne.n	8006476 <_vfiprintf_r+0x1c6>
 80064d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80064d4:	07db      	lsls	r3, r3, #31
 80064d6:	d405      	bmi.n	80064e4 <_vfiprintf_r+0x234>
 80064d8:	89a3      	ldrh	r3, [r4, #12]
 80064da:	059b      	lsls	r3, r3, #22
 80064dc:	d402      	bmi.n	80064e4 <_vfiprintf_r+0x234>
 80064de:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80064e0:	f000 fad4 	bl	8006a8c <__retarget_lock_release_recursive>
 80064e4:	89a3      	ldrh	r3, [r4, #12]
 80064e6:	065b      	lsls	r3, r3, #25
 80064e8:	d500      	bpl.n	80064ec <_vfiprintf_r+0x23c>
 80064ea:	e70a      	b.n	8006302 <_vfiprintf_r+0x52>
 80064ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 80064ee:	e70a      	b.n	8006306 <_vfiprintf_r+0x56>
 80064f0:	ab07      	add	r3, sp, #28
 80064f2:	9300      	str	r3, [sp, #0]
 80064f4:	0022      	movs	r2, r4
 80064f6:	0029      	movs	r1, r5
 80064f8:	0030      	movs	r0, r6
 80064fa:	4b09      	ldr	r3, [pc, #36]	; (8006520 <_vfiprintf_r+0x270>)
 80064fc:	f7fd ffee 	bl	80044dc <_printf_i>
 8006500:	e7e3      	b.n	80064ca <_vfiprintf_r+0x21a>
 8006502:	46c0      	nop			; (mov r8, r8)
 8006504:	08007244 	.word	0x08007244
 8006508:	08007264 	.word	0x08007264
 800650c:	08007224 	.word	0x08007224
 8006510:	080070cc 	.word	0x080070cc
 8006514:	080070d2 	.word	0x080070d2
 8006518:	080070d6 	.word	0x080070d6
 800651c:	08003f79 	.word	0x08003f79
 8006520:	0800628d 	.word	0x0800628d

08006524 <__swbuf_r>:
 8006524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006526:	0005      	movs	r5, r0
 8006528:	000e      	movs	r6, r1
 800652a:	0014      	movs	r4, r2
 800652c:	2800      	cmp	r0, #0
 800652e:	d004      	beq.n	800653a <__swbuf_r+0x16>
 8006530:	6983      	ldr	r3, [r0, #24]
 8006532:	2b00      	cmp	r3, #0
 8006534:	d101      	bne.n	800653a <__swbuf_r+0x16>
 8006536:	f000 fa07 	bl	8006948 <__sinit>
 800653a:	4b22      	ldr	r3, [pc, #136]	; (80065c4 <__swbuf_r+0xa0>)
 800653c:	429c      	cmp	r4, r3
 800653e:	d12e      	bne.n	800659e <__swbuf_r+0x7a>
 8006540:	686c      	ldr	r4, [r5, #4]
 8006542:	69a3      	ldr	r3, [r4, #24]
 8006544:	60a3      	str	r3, [r4, #8]
 8006546:	89a3      	ldrh	r3, [r4, #12]
 8006548:	071b      	lsls	r3, r3, #28
 800654a:	d532      	bpl.n	80065b2 <__swbuf_r+0x8e>
 800654c:	6923      	ldr	r3, [r4, #16]
 800654e:	2b00      	cmp	r3, #0
 8006550:	d02f      	beq.n	80065b2 <__swbuf_r+0x8e>
 8006552:	6823      	ldr	r3, [r4, #0]
 8006554:	6922      	ldr	r2, [r4, #16]
 8006556:	b2f7      	uxtb	r7, r6
 8006558:	1a98      	subs	r0, r3, r2
 800655a:	6963      	ldr	r3, [r4, #20]
 800655c:	b2f6      	uxtb	r6, r6
 800655e:	4283      	cmp	r3, r0
 8006560:	dc05      	bgt.n	800656e <__swbuf_r+0x4a>
 8006562:	0021      	movs	r1, r4
 8006564:	0028      	movs	r0, r5
 8006566:	f000 f94d 	bl	8006804 <_fflush_r>
 800656a:	2800      	cmp	r0, #0
 800656c:	d127      	bne.n	80065be <__swbuf_r+0x9a>
 800656e:	68a3      	ldr	r3, [r4, #8]
 8006570:	3001      	adds	r0, #1
 8006572:	3b01      	subs	r3, #1
 8006574:	60a3      	str	r3, [r4, #8]
 8006576:	6823      	ldr	r3, [r4, #0]
 8006578:	1c5a      	adds	r2, r3, #1
 800657a:	6022      	str	r2, [r4, #0]
 800657c:	701f      	strb	r7, [r3, #0]
 800657e:	6963      	ldr	r3, [r4, #20]
 8006580:	4283      	cmp	r3, r0
 8006582:	d004      	beq.n	800658e <__swbuf_r+0x6a>
 8006584:	89a3      	ldrh	r3, [r4, #12]
 8006586:	07db      	lsls	r3, r3, #31
 8006588:	d507      	bpl.n	800659a <__swbuf_r+0x76>
 800658a:	2e0a      	cmp	r6, #10
 800658c:	d105      	bne.n	800659a <__swbuf_r+0x76>
 800658e:	0021      	movs	r1, r4
 8006590:	0028      	movs	r0, r5
 8006592:	f000 f937 	bl	8006804 <_fflush_r>
 8006596:	2800      	cmp	r0, #0
 8006598:	d111      	bne.n	80065be <__swbuf_r+0x9a>
 800659a:	0030      	movs	r0, r6
 800659c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800659e:	4b0a      	ldr	r3, [pc, #40]	; (80065c8 <__swbuf_r+0xa4>)
 80065a0:	429c      	cmp	r4, r3
 80065a2:	d101      	bne.n	80065a8 <__swbuf_r+0x84>
 80065a4:	68ac      	ldr	r4, [r5, #8]
 80065a6:	e7cc      	b.n	8006542 <__swbuf_r+0x1e>
 80065a8:	4b08      	ldr	r3, [pc, #32]	; (80065cc <__swbuf_r+0xa8>)
 80065aa:	429c      	cmp	r4, r3
 80065ac:	d1c9      	bne.n	8006542 <__swbuf_r+0x1e>
 80065ae:	68ec      	ldr	r4, [r5, #12]
 80065b0:	e7c7      	b.n	8006542 <__swbuf_r+0x1e>
 80065b2:	0021      	movs	r1, r4
 80065b4:	0028      	movs	r0, r5
 80065b6:	f000 f819 	bl	80065ec <__swsetup_r>
 80065ba:	2800      	cmp	r0, #0
 80065bc:	d0c9      	beq.n	8006552 <__swbuf_r+0x2e>
 80065be:	2601      	movs	r6, #1
 80065c0:	4276      	negs	r6, r6
 80065c2:	e7ea      	b.n	800659a <__swbuf_r+0x76>
 80065c4:	08007244 	.word	0x08007244
 80065c8:	08007264 	.word	0x08007264
 80065cc:	08007224 	.word	0x08007224

080065d0 <__ascii_wctomb>:
 80065d0:	0003      	movs	r3, r0
 80065d2:	1e08      	subs	r0, r1, #0
 80065d4:	d005      	beq.n	80065e2 <__ascii_wctomb+0x12>
 80065d6:	2aff      	cmp	r2, #255	; 0xff
 80065d8:	d904      	bls.n	80065e4 <__ascii_wctomb+0x14>
 80065da:	228a      	movs	r2, #138	; 0x8a
 80065dc:	2001      	movs	r0, #1
 80065de:	601a      	str	r2, [r3, #0]
 80065e0:	4240      	negs	r0, r0
 80065e2:	4770      	bx	lr
 80065e4:	2001      	movs	r0, #1
 80065e6:	700a      	strb	r2, [r1, #0]
 80065e8:	e7fb      	b.n	80065e2 <__ascii_wctomb+0x12>
	...

080065ec <__swsetup_r>:
 80065ec:	4b37      	ldr	r3, [pc, #220]	; (80066cc <__swsetup_r+0xe0>)
 80065ee:	b570      	push	{r4, r5, r6, lr}
 80065f0:	681d      	ldr	r5, [r3, #0]
 80065f2:	0006      	movs	r6, r0
 80065f4:	000c      	movs	r4, r1
 80065f6:	2d00      	cmp	r5, #0
 80065f8:	d005      	beq.n	8006606 <__swsetup_r+0x1a>
 80065fa:	69ab      	ldr	r3, [r5, #24]
 80065fc:	2b00      	cmp	r3, #0
 80065fe:	d102      	bne.n	8006606 <__swsetup_r+0x1a>
 8006600:	0028      	movs	r0, r5
 8006602:	f000 f9a1 	bl	8006948 <__sinit>
 8006606:	4b32      	ldr	r3, [pc, #200]	; (80066d0 <__swsetup_r+0xe4>)
 8006608:	429c      	cmp	r4, r3
 800660a:	d10f      	bne.n	800662c <__swsetup_r+0x40>
 800660c:	686c      	ldr	r4, [r5, #4]
 800660e:	230c      	movs	r3, #12
 8006610:	5ee2      	ldrsh	r2, [r4, r3]
 8006612:	b293      	uxth	r3, r2
 8006614:	0711      	lsls	r1, r2, #28
 8006616:	d42d      	bmi.n	8006674 <__swsetup_r+0x88>
 8006618:	06d9      	lsls	r1, r3, #27
 800661a:	d411      	bmi.n	8006640 <__swsetup_r+0x54>
 800661c:	2309      	movs	r3, #9
 800661e:	2001      	movs	r0, #1
 8006620:	6033      	str	r3, [r6, #0]
 8006622:	3337      	adds	r3, #55	; 0x37
 8006624:	4313      	orrs	r3, r2
 8006626:	81a3      	strh	r3, [r4, #12]
 8006628:	4240      	negs	r0, r0
 800662a:	bd70      	pop	{r4, r5, r6, pc}
 800662c:	4b29      	ldr	r3, [pc, #164]	; (80066d4 <__swsetup_r+0xe8>)
 800662e:	429c      	cmp	r4, r3
 8006630:	d101      	bne.n	8006636 <__swsetup_r+0x4a>
 8006632:	68ac      	ldr	r4, [r5, #8]
 8006634:	e7eb      	b.n	800660e <__swsetup_r+0x22>
 8006636:	4b28      	ldr	r3, [pc, #160]	; (80066d8 <__swsetup_r+0xec>)
 8006638:	429c      	cmp	r4, r3
 800663a:	d1e8      	bne.n	800660e <__swsetup_r+0x22>
 800663c:	68ec      	ldr	r4, [r5, #12]
 800663e:	e7e6      	b.n	800660e <__swsetup_r+0x22>
 8006640:	075b      	lsls	r3, r3, #29
 8006642:	d513      	bpl.n	800666c <__swsetup_r+0x80>
 8006644:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006646:	2900      	cmp	r1, #0
 8006648:	d008      	beq.n	800665c <__swsetup_r+0x70>
 800664a:	0023      	movs	r3, r4
 800664c:	3344      	adds	r3, #68	; 0x44
 800664e:	4299      	cmp	r1, r3
 8006650:	d002      	beq.n	8006658 <__swsetup_r+0x6c>
 8006652:	0030      	movs	r0, r6
 8006654:	f7ff fb1c 	bl	8005c90 <_free_r>
 8006658:	2300      	movs	r3, #0
 800665a:	6363      	str	r3, [r4, #52]	; 0x34
 800665c:	2224      	movs	r2, #36	; 0x24
 800665e:	89a3      	ldrh	r3, [r4, #12]
 8006660:	4393      	bics	r3, r2
 8006662:	81a3      	strh	r3, [r4, #12]
 8006664:	2300      	movs	r3, #0
 8006666:	6063      	str	r3, [r4, #4]
 8006668:	6923      	ldr	r3, [r4, #16]
 800666a:	6023      	str	r3, [r4, #0]
 800666c:	2308      	movs	r3, #8
 800666e:	89a2      	ldrh	r2, [r4, #12]
 8006670:	4313      	orrs	r3, r2
 8006672:	81a3      	strh	r3, [r4, #12]
 8006674:	6923      	ldr	r3, [r4, #16]
 8006676:	2b00      	cmp	r3, #0
 8006678:	d10b      	bne.n	8006692 <__swsetup_r+0xa6>
 800667a:	21a0      	movs	r1, #160	; 0xa0
 800667c:	2280      	movs	r2, #128	; 0x80
 800667e:	89a3      	ldrh	r3, [r4, #12]
 8006680:	0089      	lsls	r1, r1, #2
 8006682:	0092      	lsls	r2, r2, #2
 8006684:	400b      	ands	r3, r1
 8006686:	4293      	cmp	r3, r2
 8006688:	d003      	beq.n	8006692 <__swsetup_r+0xa6>
 800668a:	0021      	movs	r1, r4
 800668c:	0030      	movs	r0, r6
 800668e:	f000 fa27 	bl	8006ae0 <__smakebuf_r>
 8006692:	220c      	movs	r2, #12
 8006694:	5ea3      	ldrsh	r3, [r4, r2]
 8006696:	2001      	movs	r0, #1
 8006698:	001a      	movs	r2, r3
 800669a:	b299      	uxth	r1, r3
 800669c:	4002      	ands	r2, r0
 800669e:	4203      	tst	r3, r0
 80066a0:	d00f      	beq.n	80066c2 <__swsetup_r+0xd6>
 80066a2:	2200      	movs	r2, #0
 80066a4:	60a2      	str	r2, [r4, #8]
 80066a6:	6962      	ldr	r2, [r4, #20]
 80066a8:	4252      	negs	r2, r2
 80066aa:	61a2      	str	r2, [r4, #24]
 80066ac:	2000      	movs	r0, #0
 80066ae:	6922      	ldr	r2, [r4, #16]
 80066b0:	4282      	cmp	r2, r0
 80066b2:	d1ba      	bne.n	800662a <__swsetup_r+0x3e>
 80066b4:	060a      	lsls	r2, r1, #24
 80066b6:	d5b8      	bpl.n	800662a <__swsetup_r+0x3e>
 80066b8:	2240      	movs	r2, #64	; 0x40
 80066ba:	4313      	orrs	r3, r2
 80066bc:	81a3      	strh	r3, [r4, #12]
 80066be:	3801      	subs	r0, #1
 80066c0:	e7b3      	b.n	800662a <__swsetup_r+0x3e>
 80066c2:	0788      	lsls	r0, r1, #30
 80066c4:	d400      	bmi.n	80066c8 <__swsetup_r+0xdc>
 80066c6:	6962      	ldr	r2, [r4, #20]
 80066c8:	60a2      	str	r2, [r4, #8]
 80066ca:	e7ef      	b.n	80066ac <__swsetup_r+0xc0>
 80066cc:	2000004c 	.word	0x2000004c
 80066d0:	08007244 	.word	0x08007244
 80066d4:	08007264 	.word	0x08007264
 80066d8:	08007224 	.word	0x08007224

080066dc <abort>:
 80066dc:	2006      	movs	r0, #6
 80066de:	b510      	push	{r4, lr}
 80066e0:	f000 fa74 	bl	8006bcc <raise>
 80066e4:	2001      	movs	r0, #1
 80066e6:	f7fc f905 	bl	80028f4 <_exit>
	...

080066ec <__sflush_r>:
 80066ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066ee:	898b      	ldrh	r3, [r1, #12]
 80066f0:	0005      	movs	r5, r0
 80066f2:	000c      	movs	r4, r1
 80066f4:	071a      	lsls	r2, r3, #28
 80066f6:	d45f      	bmi.n	80067b8 <__sflush_r+0xcc>
 80066f8:	684a      	ldr	r2, [r1, #4]
 80066fa:	2a00      	cmp	r2, #0
 80066fc:	dc04      	bgt.n	8006708 <__sflush_r+0x1c>
 80066fe:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8006700:	2a00      	cmp	r2, #0
 8006702:	dc01      	bgt.n	8006708 <__sflush_r+0x1c>
 8006704:	2000      	movs	r0, #0
 8006706:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006708:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800670a:	2f00      	cmp	r7, #0
 800670c:	d0fa      	beq.n	8006704 <__sflush_r+0x18>
 800670e:	2200      	movs	r2, #0
 8006710:	2180      	movs	r1, #128	; 0x80
 8006712:	682e      	ldr	r6, [r5, #0]
 8006714:	602a      	str	r2, [r5, #0]
 8006716:	001a      	movs	r2, r3
 8006718:	0149      	lsls	r1, r1, #5
 800671a:	400a      	ands	r2, r1
 800671c:	420b      	tst	r3, r1
 800671e:	d034      	beq.n	800678a <__sflush_r+0x9e>
 8006720:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006722:	89a3      	ldrh	r3, [r4, #12]
 8006724:	075b      	lsls	r3, r3, #29
 8006726:	d506      	bpl.n	8006736 <__sflush_r+0x4a>
 8006728:	6863      	ldr	r3, [r4, #4]
 800672a:	1ac0      	subs	r0, r0, r3
 800672c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800672e:	2b00      	cmp	r3, #0
 8006730:	d001      	beq.n	8006736 <__sflush_r+0x4a>
 8006732:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006734:	1ac0      	subs	r0, r0, r3
 8006736:	0002      	movs	r2, r0
 8006738:	6a21      	ldr	r1, [r4, #32]
 800673a:	2300      	movs	r3, #0
 800673c:	0028      	movs	r0, r5
 800673e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006740:	47b8      	blx	r7
 8006742:	89a1      	ldrh	r1, [r4, #12]
 8006744:	1c43      	adds	r3, r0, #1
 8006746:	d106      	bne.n	8006756 <__sflush_r+0x6a>
 8006748:	682b      	ldr	r3, [r5, #0]
 800674a:	2b1d      	cmp	r3, #29
 800674c:	d831      	bhi.n	80067b2 <__sflush_r+0xc6>
 800674e:	4a2c      	ldr	r2, [pc, #176]	; (8006800 <__sflush_r+0x114>)
 8006750:	40da      	lsrs	r2, r3
 8006752:	07d3      	lsls	r3, r2, #31
 8006754:	d52d      	bpl.n	80067b2 <__sflush_r+0xc6>
 8006756:	2300      	movs	r3, #0
 8006758:	6063      	str	r3, [r4, #4]
 800675a:	6923      	ldr	r3, [r4, #16]
 800675c:	6023      	str	r3, [r4, #0]
 800675e:	04cb      	lsls	r3, r1, #19
 8006760:	d505      	bpl.n	800676e <__sflush_r+0x82>
 8006762:	1c43      	adds	r3, r0, #1
 8006764:	d102      	bne.n	800676c <__sflush_r+0x80>
 8006766:	682b      	ldr	r3, [r5, #0]
 8006768:	2b00      	cmp	r3, #0
 800676a:	d100      	bne.n	800676e <__sflush_r+0x82>
 800676c:	6560      	str	r0, [r4, #84]	; 0x54
 800676e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006770:	602e      	str	r6, [r5, #0]
 8006772:	2900      	cmp	r1, #0
 8006774:	d0c6      	beq.n	8006704 <__sflush_r+0x18>
 8006776:	0023      	movs	r3, r4
 8006778:	3344      	adds	r3, #68	; 0x44
 800677a:	4299      	cmp	r1, r3
 800677c:	d002      	beq.n	8006784 <__sflush_r+0x98>
 800677e:	0028      	movs	r0, r5
 8006780:	f7ff fa86 	bl	8005c90 <_free_r>
 8006784:	2000      	movs	r0, #0
 8006786:	6360      	str	r0, [r4, #52]	; 0x34
 8006788:	e7bd      	b.n	8006706 <__sflush_r+0x1a>
 800678a:	2301      	movs	r3, #1
 800678c:	0028      	movs	r0, r5
 800678e:	6a21      	ldr	r1, [r4, #32]
 8006790:	47b8      	blx	r7
 8006792:	1c43      	adds	r3, r0, #1
 8006794:	d1c5      	bne.n	8006722 <__sflush_r+0x36>
 8006796:	682b      	ldr	r3, [r5, #0]
 8006798:	2b00      	cmp	r3, #0
 800679a:	d0c2      	beq.n	8006722 <__sflush_r+0x36>
 800679c:	2b1d      	cmp	r3, #29
 800679e:	d001      	beq.n	80067a4 <__sflush_r+0xb8>
 80067a0:	2b16      	cmp	r3, #22
 80067a2:	d101      	bne.n	80067a8 <__sflush_r+0xbc>
 80067a4:	602e      	str	r6, [r5, #0]
 80067a6:	e7ad      	b.n	8006704 <__sflush_r+0x18>
 80067a8:	2340      	movs	r3, #64	; 0x40
 80067aa:	89a2      	ldrh	r2, [r4, #12]
 80067ac:	4313      	orrs	r3, r2
 80067ae:	81a3      	strh	r3, [r4, #12]
 80067b0:	e7a9      	b.n	8006706 <__sflush_r+0x1a>
 80067b2:	2340      	movs	r3, #64	; 0x40
 80067b4:	430b      	orrs	r3, r1
 80067b6:	e7fa      	b.n	80067ae <__sflush_r+0xc2>
 80067b8:	690f      	ldr	r7, [r1, #16]
 80067ba:	2f00      	cmp	r7, #0
 80067bc:	d0a2      	beq.n	8006704 <__sflush_r+0x18>
 80067be:	680a      	ldr	r2, [r1, #0]
 80067c0:	600f      	str	r7, [r1, #0]
 80067c2:	1bd2      	subs	r2, r2, r7
 80067c4:	9201      	str	r2, [sp, #4]
 80067c6:	2200      	movs	r2, #0
 80067c8:	079b      	lsls	r3, r3, #30
 80067ca:	d100      	bne.n	80067ce <__sflush_r+0xe2>
 80067cc:	694a      	ldr	r2, [r1, #20]
 80067ce:	60a2      	str	r2, [r4, #8]
 80067d0:	9b01      	ldr	r3, [sp, #4]
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	dc00      	bgt.n	80067d8 <__sflush_r+0xec>
 80067d6:	e795      	b.n	8006704 <__sflush_r+0x18>
 80067d8:	003a      	movs	r2, r7
 80067da:	0028      	movs	r0, r5
 80067dc:	9b01      	ldr	r3, [sp, #4]
 80067de:	6a21      	ldr	r1, [r4, #32]
 80067e0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80067e2:	47b0      	blx	r6
 80067e4:	2800      	cmp	r0, #0
 80067e6:	dc06      	bgt.n	80067f6 <__sflush_r+0x10a>
 80067e8:	2340      	movs	r3, #64	; 0x40
 80067ea:	2001      	movs	r0, #1
 80067ec:	89a2      	ldrh	r2, [r4, #12]
 80067ee:	4240      	negs	r0, r0
 80067f0:	4313      	orrs	r3, r2
 80067f2:	81a3      	strh	r3, [r4, #12]
 80067f4:	e787      	b.n	8006706 <__sflush_r+0x1a>
 80067f6:	9b01      	ldr	r3, [sp, #4]
 80067f8:	183f      	adds	r7, r7, r0
 80067fa:	1a1b      	subs	r3, r3, r0
 80067fc:	9301      	str	r3, [sp, #4]
 80067fe:	e7e7      	b.n	80067d0 <__sflush_r+0xe4>
 8006800:	20400001 	.word	0x20400001

08006804 <_fflush_r>:
 8006804:	690b      	ldr	r3, [r1, #16]
 8006806:	b570      	push	{r4, r5, r6, lr}
 8006808:	0005      	movs	r5, r0
 800680a:	000c      	movs	r4, r1
 800680c:	2b00      	cmp	r3, #0
 800680e:	d102      	bne.n	8006816 <_fflush_r+0x12>
 8006810:	2500      	movs	r5, #0
 8006812:	0028      	movs	r0, r5
 8006814:	bd70      	pop	{r4, r5, r6, pc}
 8006816:	2800      	cmp	r0, #0
 8006818:	d004      	beq.n	8006824 <_fflush_r+0x20>
 800681a:	6983      	ldr	r3, [r0, #24]
 800681c:	2b00      	cmp	r3, #0
 800681e:	d101      	bne.n	8006824 <_fflush_r+0x20>
 8006820:	f000 f892 	bl	8006948 <__sinit>
 8006824:	4b14      	ldr	r3, [pc, #80]	; (8006878 <_fflush_r+0x74>)
 8006826:	429c      	cmp	r4, r3
 8006828:	d11b      	bne.n	8006862 <_fflush_r+0x5e>
 800682a:	686c      	ldr	r4, [r5, #4]
 800682c:	220c      	movs	r2, #12
 800682e:	5ea3      	ldrsh	r3, [r4, r2]
 8006830:	2b00      	cmp	r3, #0
 8006832:	d0ed      	beq.n	8006810 <_fflush_r+0xc>
 8006834:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006836:	07d2      	lsls	r2, r2, #31
 8006838:	d404      	bmi.n	8006844 <_fflush_r+0x40>
 800683a:	059b      	lsls	r3, r3, #22
 800683c:	d402      	bmi.n	8006844 <_fflush_r+0x40>
 800683e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006840:	f000 f923 	bl	8006a8a <__retarget_lock_acquire_recursive>
 8006844:	0028      	movs	r0, r5
 8006846:	0021      	movs	r1, r4
 8006848:	f7ff ff50 	bl	80066ec <__sflush_r>
 800684c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800684e:	0005      	movs	r5, r0
 8006850:	07db      	lsls	r3, r3, #31
 8006852:	d4de      	bmi.n	8006812 <_fflush_r+0xe>
 8006854:	89a3      	ldrh	r3, [r4, #12]
 8006856:	059b      	lsls	r3, r3, #22
 8006858:	d4db      	bmi.n	8006812 <_fflush_r+0xe>
 800685a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800685c:	f000 f916 	bl	8006a8c <__retarget_lock_release_recursive>
 8006860:	e7d7      	b.n	8006812 <_fflush_r+0xe>
 8006862:	4b06      	ldr	r3, [pc, #24]	; (800687c <_fflush_r+0x78>)
 8006864:	429c      	cmp	r4, r3
 8006866:	d101      	bne.n	800686c <_fflush_r+0x68>
 8006868:	68ac      	ldr	r4, [r5, #8]
 800686a:	e7df      	b.n	800682c <_fflush_r+0x28>
 800686c:	4b04      	ldr	r3, [pc, #16]	; (8006880 <_fflush_r+0x7c>)
 800686e:	429c      	cmp	r4, r3
 8006870:	d1dc      	bne.n	800682c <_fflush_r+0x28>
 8006872:	68ec      	ldr	r4, [r5, #12]
 8006874:	e7da      	b.n	800682c <_fflush_r+0x28>
 8006876:	46c0      	nop			; (mov r8, r8)
 8006878:	08007244 	.word	0x08007244
 800687c:	08007264 	.word	0x08007264
 8006880:	08007224 	.word	0x08007224

08006884 <std>:
 8006884:	2300      	movs	r3, #0
 8006886:	b510      	push	{r4, lr}
 8006888:	0004      	movs	r4, r0
 800688a:	6003      	str	r3, [r0, #0]
 800688c:	6043      	str	r3, [r0, #4]
 800688e:	6083      	str	r3, [r0, #8]
 8006890:	8181      	strh	r1, [r0, #12]
 8006892:	6643      	str	r3, [r0, #100]	; 0x64
 8006894:	0019      	movs	r1, r3
 8006896:	81c2      	strh	r2, [r0, #14]
 8006898:	6103      	str	r3, [r0, #16]
 800689a:	6143      	str	r3, [r0, #20]
 800689c:	6183      	str	r3, [r0, #24]
 800689e:	2208      	movs	r2, #8
 80068a0:	305c      	adds	r0, #92	; 0x5c
 80068a2:	f7fd fab7 	bl	8003e14 <memset>
 80068a6:	4b05      	ldr	r3, [pc, #20]	; (80068bc <std+0x38>)
 80068a8:	6224      	str	r4, [r4, #32]
 80068aa:	6263      	str	r3, [r4, #36]	; 0x24
 80068ac:	4b04      	ldr	r3, [pc, #16]	; (80068c0 <std+0x3c>)
 80068ae:	62a3      	str	r3, [r4, #40]	; 0x28
 80068b0:	4b04      	ldr	r3, [pc, #16]	; (80068c4 <std+0x40>)
 80068b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80068b4:	4b04      	ldr	r3, [pc, #16]	; (80068c8 <std+0x44>)
 80068b6:	6323      	str	r3, [r4, #48]	; 0x30
 80068b8:	bd10      	pop	{r4, pc}
 80068ba:	46c0      	nop			; (mov r8, r8)
 80068bc:	08006c0d 	.word	0x08006c0d
 80068c0:	08006c35 	.word	0x08006c35
 80068c4:	08006c6d 	.word	0x08006c6d
 80068c8:	08006c99 	.word	0x08006c99

080068cc <_cleanup_r>:
 80068cc:	b510      	push	{r4, lr}
 80068ce:	4902      	ldr	r1, [pc, #8]	; (80068d8 <_cleanup_r+0xc>)
 80068d0:	f000 f8ba 	bl	8006a48 <_fwalk_reent>
 80068d4:	bd10      	pop	{r4, pc}
 80068d6:	46c0      	nop			; (mov r8, r8)
 80068d8:	08006805 	.word	0x08006805

080068dc <__sfmoreglue>:
 80068dc:	b570      	push	{r4, r5, r6, lr}
 80068de:	2568      	movs	r5, #104	; 0x68
 80068e0:	1e4a      	subs	r2, r1, #1
 80068e2:	4355      	muls	r5, r2
 80068e4:	000e      	movs	r6, r1
 80068e6:	0029      	movs	r1, r5
 80068e8:	3174      	adds	r1, #116	; 0x74
 80068ea:	f7ff fa3d 	bl	8005d68 <_malloc_r>
 80068ee:	1e04      	subs	r4, r0, #0
 80068f0:	d008      	beq.n	8006904 <__sfmoreglue+0x28>
 80068f2:	2100      	movs	r1, #0
 80068f4:	002a      	movs	r2, r5
 80068f6:	6001      	str	r1, [r0, #0]
 80068f8:	6046      	str	r6, [r0, #4]
 80068fa:	300c      	adds	r0, #12
 80068fc:	60a0      	str	r0, [r4, #8]
 80068fe:	3268      	adds	r2, #104	; 0x68
 8006900:	f7fd fa88 	bl	8003e14 <memset>
 8006904:	0020      	movs	r0, r4
 8006906:	bd70      	pop	{r4, r5, r6, pc}

08006908 <__sfp_lock_acquire>:
 8006908:	b510      	push	{r4, lr}
 800690a:	4802      	ldr	r0, [pc, #8]	; (8006914 <__sfp_lock_acquire+0xc>)
 800690c:	f000 f8bd 	bl	8006a8a <__retarget_lock_acquire_recursive>
 8006910:	bd10      	pop	{r4, pc}
 8006912:	46c0      	nop			; (mov r8, r8)
 8006914:	20000379 	.word	0x20000379

08006918 <__sfp_lock_release>:
 8006918:	b510      	push	{r4, lr}
 800691a:	4802      	ldr	r0, [pc, #8]	; (8006924 <__sfp_lock_release+0xc>)
 800691c:	f000 f8b6 	bl	8006a8c <__retarget_lock_release_recursive>
 8006920:	bd10      	pop	{r4, pc}
 8006922:	46c0      	nop			; (mov r8, r8)
 8006924:	20000379 	.word	0x20000379

08006928 <__sinit_lock_acquire>:
 8006928:	b510      	push	{r4, lr}
 800692a:	4802      	ldr	r0, [pc, #8]	; (8006934 <__sinit_lock_acquire+0xc>)
 800692c:	f000 f8ad 	bl	8006a8a <__retarget_lock_acquire_recursive>
 8006930:	bd10      	pop	{r4, pc}
 8006932:	46c0      	nop			; (mov r8, r8)
 8006934:	2000037a 	.word	0x2000037a

08006938 <__sinit_lock_release>:
 8006938:	b510      	push	{r4, lr}
 800693a:	4802      	ldr	r0, [pc, #8]	; (8006944 <__sinit_lock_release+0xc>)
 800693c:	f000 f8a6 	bl	8006a8c <__retarget_lock_release_recursive>
 8006940:	bd10      	pop	{r4, pc}
 8006942:	46c0      	nop			; (mov r8, r8)
 8006944:	2000037a 	.word	0x2000037a

08006948 <__sinit>:
 8006948:	b513      	push	{r0, r1, r4, lr}
 800694a:	0004      	movs	r4, r0
 800694c:	f7ff ffec 	bl	8006928 <__sinit_lock_acquire>
 8006950:	69a3      	ldr	r3, [r4, #24]
 8006952:	2b00      	cmp	r3, #0
 8006954:	d002      	beq.n	800695c <__sinit+0x14>
 8006956:	f7ff ffef 	bl	8006938 <__sinit_lock_release>
 800695a:	bd13      	pop	{r0, r1, r4, pc}
 800695c:	64a3      	str	r3, [r4, #72]	; 0x48
 800695e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006960:	6523      	str	r3, [r4, #80]	; 0x50
 8006962:	4b13      	ldr	r3, [pc, #76]	; (80069b0 <__sinit+0x68>)
 8006964:	4a13      	ldr	r2, [pc, #76]	; (80069b4 <__sinit+0x6c>)
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	62a2      	str	r2, [r4, #40]	; 0x28
 800696a:	9301      	str	r3, [sp, #4]
 800696c:	42a3      	cmp	r3, r4
 800696e:	d101      	bne.n	8006974 <__sinit+0x2c>
 8006970:	2301      	movs	r3, #1
 8006972:	61a3      	str	r3, [r4, #24]
 8006974:	0020      	movs	r0, r4
 8006976:	f000 f81f 	bl	80069b8 <__sfp>
 800697a:	6060      	str	r0, [r4, #4]
 800697c:	0020      	movs	r0, r4
 800697e:	f000 f81b 	bl	80069b8 <__sfp>
 8006982:	60a0      	str	r0, [r4, #8]
 8006984:	0020      	movs	r0, r4
 8006986:	f000 f817 	bl	80069b8 <__sfp>
 800698a:	2200      	movs	r2, #0
 800698c:	2104      	movs	r1, #4
 800698e:	60e0      	str	r0, [r4, #12]
 8006990:	6860      	ldr	r0, [r4, #4]
 8006992:	f7ff ff77 	bl	8006884 <std>
 8006996:	2201      	movs	r2, #1
 8006998:	2109      	movs	r1, #9
 800699a:	68a0      	ldr	r0, [r4, #8]
 800699c:	f7ff ff72 	bl	8006884 <std>
 80069a0:	2202      	movs	r2, #2
 80069a2:	2112      	movs	r1, #18
 80069a4:	68e0      	ldr	r0, [r4, #12]
 80069a6:	f7ff ff6d 	bl	8006884 <std>
 80069aa:	2301      	movs	r3, #1
 80069ac:	61a3      	str	r3, [r4, #24]
 80069ae:	e7d2      	b.n	8006956 <__sinit+0xe>
 80069b0:	08006eac 	.word	0x08006eac
 80069b4:	080068cd 	.word	0x080068cd

080069b8 <__sfp>:
 80069b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069ba:	0007      	movs	r7, r0
 80069bc:	f7ff ffa4 	bl	8006908 <__sfp_lock_acquire>
 80069c0:	4b1f      	ldr	r3, [pc, #124]	; (8006a40 <__sfp+0x88>)
 80069c2:	681e      	ldr	r6, [r3, #0]
 80069c4:	69b3      	ldr	r3, [r6, #24]
 80069c6:	2b00      	cmp	r3, #0
 80069c8:	d102      	bne.n	80069d0 <__sfp+0x18>
 80069ca:	0030      	movs	r0, r6
 80069cc:	f7ff ffbc 	bl	8006948 <__sinit>
 80069d0:	3648      	adds	r6, #72	; 0x48
 80069d2:	68b4      	ldr	r4, [r6, #8]
 80069d4:	6873      	ldr	r3, [r6, #4]
 80069d6:	3b01      	subs	r3, #1
 80069d8:	d504      	bpl.n	80069e4 <__sfp+0x2c>
 80069da:	6833      	ldr	r3, [r6, #0]
 80069dc:	2b00      	cmp	r3, #0
 80069de:	d022      	beq.n	8006a26 <__sfp+0x6e>
 80069e0:	6836      	ldr	r6, [r6, #0]
 80069e2:	e7f6      	b.n	80069d2 <__sfp+0x1a>
 80069e4:	220c      	movs	r2, #12
 80069e6:	5ea5      	ldrsh	r5, [r4, r2]
 80069e8:	2d00      	cmp	r5, #0
 80069ea:	d11a      	bne.n	8006a22 <__sfp+0x6a>
 80069ec:	0020      	movs	r0, r4
 80069ee:	4b15      	ldr	r3, [pc, #84]	; (8006a44 <__sfp+0x8c>)
 80069f0:	3058      	adds	r0, #88	; 0x58
 80069f2:	60e3      	str	r3, [r4, #12]
 80069f4:	6665      	str	r5, [r4, #100]	; 0x64
 80069f6:	f000 f847 	bl	8006a88 <__retarget_lock_init_recursive>
 80069fa:	f7ff ff8d 	bl	8006918 <__sfp_lock_release>
 80069fe:	0020      	movs	r0, r4
 8006a00:	2208      	movs	r2, #8
 8006a02:	0029      	movs	r1, r5
 8006a04:	6025      	str	r5, [r4, #0]
 8006a06:	60a5      	str	r5, [r4, #8]
 8006a08:	6065      	str	r5, [r4, #4]
 8006a0a:	6125      	str	r5, [r4, #16]
 8006a0c:	6165      	str	r5, [r4, #20]
 8006a0e:	61a5      	str	r5, [r4, #24]
 8006a10:	305c      	adds	r0, #92	; 0x5c
 8006a12:	f7fd f9ff 	bl	8003e14 <memset>
 8006a16:	6365      	str	r5, [r4, #52]	; 0x34
 8006a18:	63a5      	str	r5, [r4, #56]	; 0x38
 8006a1a:	64a5      	str	r5, [r4, #72]	; 0x48
 8006a1c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006a1e:	0020      	movs	r0, r4
 8006a20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a22:	3468      	adds	r4, #104	; 0x68
 8006a24:	e7d7      	b.n	80069d6 <__sfp+0x1e>
 8006a26:	2104      	movs	r1, #4
 8006a28:	0038      	movs	r0, r7
 8006a2a:	f7ff ff57 	bl	80068dc <__sfmoreglue>
 8006a2e:	1e04      	subs	r4, r0, #0
 8006a30:	6030      	str	r0, [r6, #0]
 8006a32:	d1d5      	bne.n	80069e0 <__sfp+0x28>
 8006a34:	f7ff ff70 	bl	8006918 <__sfp_lock_release>
 8006a38:	230c      	movs	r3, #12
 8006a3a:	603b      	str	r3, [r7, #0]
 8006a3c:	e7ef      	b.n	8006a1e <__sfp+0x66>
 8006a3e:	46c0      	nop			; (mov r8, r8)
 8006a40:	08006eac 	.word	0x08006eac
 8006a44:	ffff0001 	.word	0xffff0001

08006a48 <_fwalk_reent>:
 8006a48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006a4a:	0004      	movs	r4, r0
 8006a4c:	0006      	movs	r6, r0
 8006a4e:	2700      	movs	r7, #0
 8006a50:	9101      	str	r1, [sp, #4]
 8006a52:	3448      	adds	r4, #72	; 0x48
 8006a54:	6863      	ldr	r3, [r4, #4]
 8006a56:	68a5      	ldr	r5, [r4, #8]
 8006a58:	9300      	str	r3, [sp, #0]
 8006a5a:	9b00      	ldr	r3, [sp, #0]
 8006a5c:	3b01      	subs	r3, #1
 8006a5e:	9300      	str	r3, [sp, #0]
 8006a60:	d504      	bpl.n	8006a6c <_fwalk_reent+0x24>
 8006a62:	6824      	ldr	r4, [r4, #0]
 8006a64:	2c00      	cmp	r4, #0
 8006a66:	d1f5      	bne.n	8006a54 <_fwalk_reent+0xc>
 8006a68:	0038      	movs	r0, r7
 8006a6a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006a6c:	89ab      	ldrh	r3, [r5, #12]
 8006a6e:	2b01      	cmp	r3, #1
 8006a70:	d908      	bls.n	8006a84 <_fwalk_reent+0x3c>
 8006a72:	220e      	movs	r2, #14
 8006a74:	5eab      	ldrsh	r3, [r5, r2]
 8006a76:	3301      	adds	r3, #1
 8006a78:	d004      	beq.n	8006a84 <_fwalk_reent+0x3c>
 8006a7a:	0029      	movs	r1, r5
 8006a7c:	0030      	movs	r0, r6
 8006a7e:	9b01      	ldr	r3, [sp, #4]
 8006a80:	4798      	blx	r3
 8006a82:	4307      	orrs	r7, r0
 8006a84:	3568      	adds	r5, #104	; 0x68
 8006a86:	e7e8      	b.n	8006a5a <_fwalk_reent+0x12>

08006a88 <__retarget_lock_init_recursive>:
 8006a88:	4770      	bx	lr

08006a8a <__retarget_lock_acquire_recursive>:
 8006a8a:	4770      	bx	lr

08006a8c <__retarget_lock_release_recursive>:
 8006a8c:	4770      	bx	lr
	...

08006a90 <__swhatbuf_r>:
 8006a90:	b570      	push	{r4, r5, r6, lr}
 8006a92:	000e      	movs	r6, r1
 8006a94:	001d      	movs	r5, r3
 8006a96:	230e      	movs	r3, #14
 8006a98:	5ec9      	ldrsh	r1, [r1, r3]
 8006a9a:	0014      	movs	r4, r2
 8006a9c:	b096      	sub	sp, #88	; 0x58
 8006a9e:	2900      	cmp	r1, #0
 8006aa0:	da08      	bge.n	8006ab4 <__swhatbuf_r+0x24>
 8006aa2:	220c      	movs	r2, #12
 8006aa4:	5eb3      	ldrsh	r3, [r6, r2]
 8006aa6:	2200      	movs	r2, #0
 8006aa8:	602a      	str	r2, [r5, #0]
 8006aaa:	061b      	lsls	r3, r3, #24
 8006aac:	d411      	bmi.n	8006ad2 <__swhatbuf_r+0x42>
 8006aae:	2380      	movs	r3, #128	; 0x80
 8006ab0:	00db      	lsls	r3, r3, #3
 8006ab2:	e00f      	b.n	8006ad4 <__swhatbuf_r+0x44>
 8006ab4:	466a      	mov	r2, sp
 8006ab6:	f000 f91b 	bl	8006cf0 <_fstat_r>
 8006aba:	2800      	cmp	r0, #0
 8006abc:	dbf1      	blt.n	8006aa2 <__swhatbuf_r+0x12>
 8006abe:	23f0      	movs	r3, #240	; 0xf0
 8006ac0:	9901      	ldr	r1, [sp, #4]
 8006ac2:	021b      	lsls	r3, r3, #8
 8006ac4:	4019      	ands	r1, r3
 8006ac6:	4b05      	ldr	r3, [pc, #20]	; (8006adc <__swhatbuf_r+0x4c>)
 8006ac8:	18c9      	adds	r1, r1, r3
 8006aca:	424b      	negs	r3, r1
 8006acc:	4159      	adcs	r1, r3
 8006ace:	6029      	str	r1, [r5, #0]
 8006ad0:	e7ed      	b.n	8006aae <__swhatbuf_r+0x1e>
 8006ad2:	2340      	movs	r3, #64	; 0x40
 8006ad4:	2000      	movs	r0, #0
 8006ad6:	6023      	str	r3, [r4, #0]
 8006ad8:	b016      	add	sp, #88	; 0x58
 8006ada:	bd70      	pop	{r4, r5, r6, pc}
 8006adc:	ffffe000 	.word	0xffffe000

08006ae0 <__smakebuf_r>:
 8006ae0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ae2:	2602      	movs	r6, #2
 8006ae4:	898b      	ldrh	r3, [r1, #12]
 8006ae6:	0005      	movs	r5, r0
 8006ae8:	000c      	movs	r4, r1
 8006aea:	4233      	tst	r3, r6
 8006aec:	d006      	beq.n	8006afc <__smakebuf_r+0x1c>
 8006aee:	0023      	movs	r3, r4
 8006af0:	3347      	adds	r3, #71	; 0x47
 8006af2:	6023      	str	r3, [r4, #0]
 8006af4:	6123      	str	r3, [r4, #16]
 8006af6:	2301      	movs	r3, #1
 8006af8:	6163      	str	r3, [r4, #20]
 8006afa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006afc:	466a      	mov	r2, sp
 8006afe:	ab01      	add	r3, sp, #4
 8006b00:	f7ff ffc6 	bl	8006a90 <__swhatbuf_r>
 8006b04:	9900      	ldr	r1, [sp, #0]
 8006b06:	0007      	movs	r7, r0
 8006b08:	0028      	movs	r0, r5
 8006b0a:	f7ff f92d 	bl	8005d68 <_malloc_r>
 8006b0e:	2800      	cmp	r0, #0
 8006b10:	d108      	bne.n	8006b24 <__smakebuf_r+0x44>
 8006b12:	220c      	movs	r2, #12
 8006b14:	5ea3      	ldrsh	r3, [r4, r2]
 8006b16:	059a      	lsls	r2, r3, #22
 8006b18:	d4ef      	bmi.n	8006afa <__smakebuf_r+0x1a>
 8006b1a:	2203      	movs	r2, #3
 8006b1c:	4393      	bics	r3, r2
 8006b1e:	431e      	orrs	r6, r3
 8006b20:	81a6      	strh	r6, [r4, #12]
 8006b22:	e7e4      	b.n	8006aee <__smakebuf_r+0xe>
 8006b24:	4b0f      	ldr	r3, [pc, #60]	; (8006b64 <__smakebuf_r+0x84>)
 8006b26:	62ab      	str	r3, [r5, #40]	; 0x28
 8006b28:	2380      	movs	r3, #128	; 0x80
 8006b2a:	89a2      	ldrh	r2, [r4, #12]
 8006b2c:	6020      	str	r0, [r4, #0]
 8006b2e:	4313      	orrs	r3, r2
 8006b30:	81a3      	strh	r3, [r4, #12]
 8006b32:	9b00      	ldr	r3, [sp, #0]
 8006b34:	6120      	str	r0, [r4, #16]
 8006b36:	6163      	str	r3, [r4, #20]
 8006b38:	9b01      	ldr	r3, [sp, #4]
 8006b3a:	2b00      	cmp	r3, #0
 8006b3c:	d00d      	beq.n	8006b5a <__smakebuf_r+0x7a>
 8006b3e:	0028      	movs	r0, r5
 8006b40:	230e      	movs	r3, #14
 8006b42:	5ee1      	ldrsh	r1, [r4, r3]
 8006b44:	f000 f8e6 	bl	8006d14 <_isatty_r>
 8006b48:	2800      	cmp	r0, #0
 8006b4a:	d006      	beq.n	8006b5a <__smakebuf_r+0x7a>
 8006b4c:	2203      	movs	r2, #3
 8006b4e:	89a3      	ldrh	r3, [r4, #12]
 8006b50:	4393      	bics	r3, r2
 8006b52:	001a      	movs	r2, r3
 8006b54:	2301      	movs	r3, #1
 8006b56:	4313      	orrs	r3, r2
 8006b58:	81a3      	strh	r3, [r4, #12]
 8006b5a:	89a0      	ldrh	r0, [r4, #12]
 8006b5c:	4307      	orrs	r7, r0
 8006b5e:	81a7      	strh	r7, [r4, #12]
 8006b60:	e7cb      	b.n	8006afa <__smakebuf_r+0x1a>
 8006b62:	46c0      	nop			; (mov r8, r8)
 8006b64:	080068cd 	.word	0x080068cd

08006b68 <_malloc_usable_size_r>:
 8006b68:	1f0b      	subs	r3, r1, #4
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	1f18      	subs	r0, r3, #4
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	da01      	bge.n	8006b76 <_malloc_usable_size_r+0xe>
 8006b72:	580b      	ldr	r3, [r1, r0]
 8006b74:	18c0      	adds	r0, r0, r3
 8006b76:	4770      	bx	lr

08006b78 <_raise_r>:
 8006b78:	b570      	push	{r4, r5, r6, lr}
 8006b7a:	0004      	movs	r4, r0
 8006b7c:	000d      	movs	r5, r1
 8006b7e:	291f      	cmp	r1, #31
 8006b80:	d904      	bls.n	8006b8c <_raise_r+0x14>
 8006b82:	2316      	movs	r3, #22
 8006b84:	6003      	str	r3, [r0, #0]
 8006b86:	2001      	movs	r0, #1
 8006b88:	4240      	negs	r0, r0
 8006b8a:	bd70      	pop	{r4, r5, r6, pc}
 8006b8c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006b8e:	2b00      	cmp	r3, #0
 8006b90:	d004      	beq.n	8006b9c <_raise_r+0x24>
 8006b92:	008a      	lsls	r2, r1, #2
 8006b94:	189b      	adds	r3, r3, r2
 8006b96:	681a      	ldr	r2, [r3, #0]
 8006b98:	2a00      	cmp	r2, #0
 8006b9a:	d108      	bne.n	8006bae <_raise_r+0x36>
 8006b9c:	0020      	movs	r0, r4
 8006b9e:	f000 f831 	bl	8006c04 <_getpid_r>
 8006ba2:	002a      	movs	r2, r5
 8006ba4:	0001      	movs	r1, r0
 8006ba6:	0020      	movs	r0, r4
 8006ba8:	f000 f81a 	bl	8006be0 <_kill_r>
 8006bac:	e7ed      	b.n	8006b8a <_raise_r+0x12>
 8006bae:	2000      	movs	r0, #0
 8006bb0:	2a01      	cmp	r2, #1
 8006bb2:	d0ea      	beq.n	8006b8a <_raise_r+0x12>
 8006bb4:	1c51      	adds	r1, r2, #1
 8006bb6:	d103      	bne.n	8006bc0 <_raise_r+0x48>
 8006bb8:	2316      	movs	r3, #22
 8006bba:	3001      	adds	r0, #1
 8006bbc:	6023      	str	r3, [r4, #0]
 8006bbe:	e7e4      	b.n	8006b8a <_raise_r+0x12>
 8006bc0:	2400      	movs	r4, #0
 8006bc2:	0028      	movs	r0, r5
 8006bc4:	601c      	str	r4, [r3, #0]
 8006bc6:	4790      	blx	r2
 8006bc8:	0020      	movs	r0, r4
 8006bca:	e7de      	b.n	8006b8a <_raise_r+0x12>

08006bcc <raise>:
 8006bcc:	b510      	push	{r4, lr}
 8006bce:	4b03      	ldr	r3, [pc, #12]	; (8006bdc <raise+0x10>)
 8006bd0:	0001      	movs	r1, r0
 8006bd2:	6818      	ldr	r0, [r3, #0]
 8006bd4:	f7ff ffd0 	bl	8006b78 <_raise_r>
 8006bd8:	bd10      	pop	{r4, pc}
 8006bda:	46c0      	nop			; (mov r8, r8)
 8006bdc:	2000004c 	.word	0x2000004c

08006be0 <_kill_r>:
 8006be0:	2300      	movs	r3, #0
 8006be2:	b570      	push	{r4, r5, r6, lr}
 8006be4:	4d06      	ldr	r5, [pc, #24]	; (8006c00 <_kill_r+0x20>)
 8006be6:	0004      	movs	r4, r0
 8006be8:	0008      	movs	r0, r1
 8006bea:	0011      	movs	r1, r2
 8006bec:	602b      	str	r3, [r5, #0]
 8006bee:	f7fb fe79 	bl	80028e4 <_kill>
 8006bf2:	1c43      	adds	r3, r0, #1
 8006bf4:	d103      	bne.n	8006bfe <_kill_r+0x1e>
 8006bf6:	682b      	ldr	r3, [r5, #0]
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d000      	beq.n	8006bfe <_kill_r+0x1e>
 8006bfc:	6023      	str	r3, [r4, #0]
 8006bfe:	bd70      	pop	{r4, r5, r6, pc}
 8006c00:	20000374 	.word	0x20000374

08006c04 <_getpid_r>:
 8006c04:	b510      	push	{r4, lr}
 8006c06:	f7fb fe6b 	bl	80028e0 <_getpid>
 8006c0a:	bd10      	pop	{r4, pc}

08006c0c <__sread>:
 8006c0c:	b570      	push	{r4, r5, r6, lr}
 8006c0e:	000c      	movs	r4, r1
 8006c10:	250e      	movs	r5, #14
 8006c12:	5f49      	ldrsh	r1, [r1, r5]
 8006c14:	f000 f8a4 	bl	8006d60 <_read_r>
 8006c18:	2800      	cmp	r0, #0
 8006c1a:	db03      	blt.n	8006c24 <__sread+0x18>
 8006c1c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006c1e:	181b      	adds	r3, r3, r0
 8006c20:	6563      	str	r3, [r4, #84]	; 0x54
 8006c22:	bd70      	pop	{r4, r5, r6, pc}
 8006c24:	89a3      	ldrh	r3, [r4, #12]
 8006c26:	4a02      	ldr	r2, [pc, #8]	; (8006c30 <__sread+0x24>)
 8006c28:	4013      	ands	r3, r2
 8006c2a:	81a3      	strh	r3, [r4, #12]
 8006c2c:	e7f9      	b.n	8006c22 <__sread+0x16>
 8006c2e:	46c0      	nop			; (mov r8, r8)
 8006c30:	ffffefff 	.word	0xffffefff

08006c34 <__swrite>:
 8006c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c36:	001f      	movs	r7, r3
 8006c38:	898b      	ldrh	r3, [r1, #12]
 8006c3a:	0005      	movs	r5, r0
 8006c3c:	000c      	movs	r4, r1
 8006c3e:	0016      	movs	r6, r2
 8006c40:	05db      	lsls	r3, r3, #23
 8006c42:	d505      	bpl.n	8006c50 <__swrite+0x1c>
 8006c44:	230e      	movs	r3, #14
 8006c46:	5ec9      	ldrsh	r1, [r1, r3]
 8006c48:	2200      	movs	r2, #0
 8006c4a:	2302      	movs	r3, #2
 8006c4c:	f000 f874 	bl	8006d38 <_lseek_r>
 8006c50:	89a3      	ldrh	r3, [r4, #12]
 8006c52:	4a05      	ldr	r2, [pc, #20]	; (8006c68 <__swrite+0x34>)
 8006c54:	0028      	movs	r0, r5
 8006c56:	4013      	ands	r3, r2
 8006c58:	81a3      	strh	r3, [r4, #12]
 8006c5a:	0032      	movs	r2, r6
 8006c5c:	230e      	movs	r3, #14
 8006c5e:	5ee1      	ldrsh	r1, [r4, r3]
 8006c60:	003b      	movs	r3, r7
 8006c62:	f000 f81f 	bl	8006ca4 <_write_r>
 8006c66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c68:	ffffefff 	.word	0xffffefff

08006c6c <__sseek>:
 8006c6c:	b570      	push	{r4, r5, r6, lr}
 8006c6e:	000c      	movs	r4, r1
 8006c70:	250e      	movs	r5, #14
 8006c72:	5f49      	ldrsh	r1, [r1, r5]
 8006c74:	f000 f860 	bl	8006d38 <_lseek_r>
 8006c78:	89a3      	ldrh	r3, [r4, #12]
 8006c7a:	1c42      	adds	r2, r0, #1
 8006c7c:	d103      	bne.n	8006c86 <__sseek+0x1a>
 8006c7e:	4a05      	ldr	r2, [pc, #20]	; (8006c94 <__sseek+0x28>)
 8006c80:	4013      	ands	r3, r2
 8006c82:	81a3      	strh	r3, [r4, #12]
 8006c84:	bd70      	pop	{r4, r5, r6, pc}
 8006c86:	2280      	movs	r2, #128	; 0x80
 8006c88:	0152      	lsls	r2, r2, #5
 8006c8a:	4313      	orrs	r3, r2
 8006c8c:	81a3      	strh	r3, [r4, #12]
 8006c8e:	6560      	str	r0, [r4, #84]	; 0x54
 8006c90:	e7f8      	b.n	8006c84 <__sseek+0x18>
 8006c92:	46c0      	nop			; (mov r8, r8)
 8006c94:	ffffefff 	.word	0xffffefff

08006c98 <__sclose>:
 8006c98:	b510      	push	{r4, lr}
 8006c9a:	230e      	movs	r3, #14
 8006c9c:	5ec9      	ldrsh	r1, [r1, r3]
 8006c9e:	f000 f815 	bl	8006ccc <_close_r>
 8006ca2:	bd10      	pop	{r4, pc}

08006ca4 <_write_r>:
 8006ca4:	b570      	push	{r4, r5, r6, lr}
 8006ca6:	0004      	movs	r4, r0
 8006ca8:	0008      	movs	r0, r1
 8006caa:	0011      	movs	r1, r2
 8006cac:	001a      	movs	r2, r3
 8006cae:	2300      	movs	r3, #0
 8006cb0:	4d05      	ldr	r5, [pc, #20]	; (8006cc8 <_write_r+0x24>)
 8006cb2:	602b      	str	r3, [r5, #0]
 8006cb4:	f7fb fe31 	bl	800291a <_write>
 8006cb8:	1c43      	adds	r3, r0, #1
 8006cba:	d103      	bne.n	8006cc4 <_write_r+0x20>
 8006cbc:	682b      	ldr	r3, [r5, #0]
 8006cbe:	2b00      	cmp	r3, #0
 8006cc0:	d000      	beq.n	8006cc4 <_write_r+0x20>
 8006cc2:	6023      	str	r3, [r4, #0]
 8006cc4:	bd70      	pop	{r4, r5, r6, pc}
 8006cc6:	46c0      	nop			; (mov r8, r8)
 8006cc8:	20000374 	.word	0x20000374

08006ccc <_close_r>:
 8006ccc:	2300      	movs	r3, #0
 8006cce:	b570      	push	{r4, r5, r6, lr}
 8006cd0:	4d06      	ldr	r5, [pc, #24]	; (8006cec <_close_r+0x20>)
 8006cd2:	0004      	movs	r4, r0
 8006cd4:	0008      	movs	r0, r1
 8006cd6:	602b      	str	r3, [r5, #0]
 8006cd8:	f7fb fe2c 	bl	8002934 <_close>
 8006cdc:	1c43      	adds	r3, r0, #1
 8006cde:	d103      	bne.n	8006ce8 <_close_r+0x1c>
 8006ce0:	682b      	ldr	r3, [r5, #0]
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d000      	beq.n	8006ce8 <_close_r+0x1c>
 8006ce6:	6023      	str	r3, [r4, #0]
 8006ce8:	bd70      	pop	{r4, r5, r6, pc}
 8006cea:	46c0      	nop			; (mov r8, r8)
 8006cec:	20000374 	.word	0x20000374

08006cf0 <_fstat_r>:
 8006cf0:	2300      	movs	r3, #0
 8006cf2:	b570      	push	{r4, r5, r6, lr}
 8006cf4:	4d06      	ldr	r5, [pc, #24]	; (8006d10 <_fstat_r+0x20>)
 8006cf6:	0004      	movs	r4, r0
 8006cf8:	0008      	movs	r0, r1
 8006cfa:	0011      	movs	r1, r2
 8006cfc:	602b      	str	r3, [r5, #0]
 8006cfe:	f7fb fe1c 	bl	800293a <_fstat>
 8006d02:	1c43      	adds	r3, r0, #1
 8006d04:	d103      	bne.n	8006d0e <_fstat_r+0x1e>
 8006d06:	682b      	ldr	r3, [r5, #0]
 8006d08:	2b00      	cmp	r3, #0
 8006d0a:	d000      	beq.n	8006d0e <_fstat_r+0x1e>
 8006d0c:	6023      	str	r3, [r4, #0]
 8006d0e:	bd70      	pop	{r4, r5, r6, pc}
 8006d10:	20000374 	.word	0x20000374

08006d14 <_isatty_r>:
 8006d14:	2300      	movs	r3, #0
 8006d16:	b570      	push	{r4, r5, r6, lr}
 8006d18:	4d06      	ldr	r5, [pc, #24]	; (8006d34 <_isatty_r+0x20>)
 8006d1a:	0004      	movs	r4, r0
 8006d1c:	0008      	movs	r0, r1
 8006d1e:	602b      	str	r3, [r5, #0]
 8006d20:	f7fb fe10 	bl	8002944 <_isatty>
 8006d24:	1c43      	adds	r3, r0, #1
 8006d26:	d103      	bne.n	8006d30 <_isatty_r+0x1c>
 8006d28:	682b      	ldr	r3, [r5, #0]
 8006d2a:	2b00      	cmp	r3, #0
 8006d2c:	d000      	beq.n	8006d30 <_isatty_r+0x1c>
 8006d2e:	6023      	str	r3, [r4, #0]
 8006d30:	bd70      	pop	{r4, r5, r6, pc}
 8006d32:	46c0      	nop			; (mov r8, r8)
 8006d34:	20000374 	.word	0x20000374

08006d38 <_lseek_r>:
 8006d38:	b570      	push	{r4, r5, r6, lr}
 8006d3a:	0004      	movs	r4, r0
 8006d3c:	0008      	movs	r0, r1
 8006d3e:	0011      	movs	r1, r2
 8006d40:	001a      	movs	r2, r3
 8006d42:	2300      	movs	r3, #0
 8006d44:	4d05      	ldr	r5, [pc, #20]	; (8006d5c <_lseek_r+0x24>)
 8006d46:	602b      	str	r3, [r5, #0]
 8006d48:	f7fb fdfe 	bl	8002948 <_lseek>
 8006d4c:	1c43      	adds	r3, r0, #1
 8006d4e:	d103      	bne.n	8006d58 <_lseek_r+0x20>
 8006d50:	682b      	ldr	r3, [r5, #0]
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d000      	beq.n	8006d58 <_lseek_r+0x20>
 8006d56:	6023      	str	r3, [r4, #0]
 8006d58:	bd70      	pop	{r4, r5, r6, pc}
 8006d5a:	46c0      	nop			; (mov r8, r8)
 8006d5c:	20000374 	.word	0x20000374

08006d60 <_read_r>:
 8006d60:	b570      	push	{r4, r5, r6, lr}
 8006d62:	0004      	movs	r4, r0
 8006d64:	0008      	movs	r0, r1
 8006d66:	0011      	movs	r1, r2
 8006d68:	001a      	movs	r2, r3
 8006d6a:	2300      	movs	r3, #0
 8006d6c:	4d05      	ldr	r5, [pc, #20]	; (8006d84 <_read_r+0x24>)
 8006d6e:	602b      	str	r3, [r5, #0]
 8006d70:	f7fb fdc6 	bl	8002900 <_read>
 8006d74:	1c43      	adds	r3, r0, #1
 8006d76:	d103      	bne.n	8006d80 <_read_r+0x20>
 8006d78:	682b      	ldr	r3, [r5, #0]
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d000      	beq.n	8006d80 <_read_r+0x20>
 8006d7e:	6023      	str	r3, [r4, #0]
 8006d80:	bd70      	pop	{r4, r5, r6, pc}
 8006d82:	46c0      	nop			; (mov r8, r8)
 8006d84:	20000374 	.word	0x20000374

08006d88 <_init>:
 8006d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d8a:	46c0      	nop			; (mov r8, r8)
 8006d8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006d8e:	bc08      	pop	{r3}
 8006d90:	469e      	mov	lr, r3
 8006d92:	4770      	bx	lr

08006d94 <_fini>:
 8006d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d96:	46c0      	nop			; (mov r8, r8)
 8006d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006d9a:	bc08      	pop	{r3}
 8006d9c:	469e      	mov	lr, r3
 8006d9e:	4770      	bx	lr
